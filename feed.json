{
   "version" : "https://jsonfeed.org/version/1",
   "title" : "memalign.github.io",
   "home_page_url" : "https://memalign.github.io/index.html",
   "feed_url" : "https://memalign.github.io/feed.json",
   "author" : {
      "url" : "https://twitter.com/memalign",
      "name" : "memalign"
   },
   "icon" : "https://memalign.github.io/apple-touch-icon.png",
   "favicon" : "https://memalign.github.io/favicon.ico",
   "items" : [
    {
         "title" : "Mandarin Flashcards",
         "date_published" : "2025-02-05T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/mandarin-flashcards.html",
         "url" : "https://memalign.github.io/p/mandarin-flashcards.html",
         "image" : "https://memalign.github.io/m/mandarin/cards/cards.png",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/mandarin-flashcards.html'>Mandarin Flashcards</a>\n</h2>\n</div>\n<img src=\"/m/mandarin/cards/cards.png\">\n<div id='postdate'>Posted on 2/5/2025<br />\nTags: <a href='/tags.html'>Programming</a>, <a href='/tags.html'>Tools</a>, <a href='/tags.html'>Parenting</a></div>\nIntroducing <a href=\"/m/mandarin/cards/index.html\">Mandarin Flashcards</a>!<br />\n<br />\nI'm expanding on <a href=\"/m/mandarin/index.html\">Mandarin Communication Board</a> by using the same data to create a set of flashcards.<br />\n<br />\nThese flashcards use spaced repetition, a memorization method where cards you don't know yet will appear frequently and cards you know well will appear less often. This technique has been popularized by the Anki flashcards app.<br />\n<br />\nWhen you review each card, you indicate whether you don't know it, you recalled it with effort, or it was easy to recall. The web app then calculates and schedules the next time it should be reviewed. Over time, well-known cards will be scheduled several days into the future.<br />\n<br />\nWith this technique, you can spend ~10 minutes a day reviewing cards to learn hundreds of words.<br />\n<br />\n<br />\nSome technical details:<br />\n<br />\n- Learn more about its companion project's development details: <a href=\"/p/mandarin.html\">About Mandarin Communication Board</a><br />\n&nbsp;&nbsp;- I reused almost everything from this project<br />\n<br />\n- I implemented a swipe left/up/right UI that should feel great on iPhone. I find it a lot of fun to play with the cards!<br />\n<br />\n- I originally tried to have ChatGPT implement the swipe UI. After several rounds of iteration, I had an 80% working implementation but it was so tangled that I started looking for another option. I found this great and simple <a href=\"https://codepen.io/rudtjd2548/pen/qBodXzO\">codepen</a> with no dependencies which I switched to as my starting point.<br />\n<br />\n- Click the settings gear to see your learning statistics!<br />\n<br />\n- Unmute your device and turn up the volume if you don't hear anything when clicking the \"Speak\" button<br />\n<br />\n- This website can be added to your home screen as a PWA<br />\n\n</div>\n"
    },
    {
         "title" : "Mandarin Communication Board",
         "date_published" : "2025-01-29T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/mandarin.html",
         "url" : "https://memalign.github.io/p/mandarin.html",
         "image" : "https://memalign.github.io/m/mandarin/mcb.png",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/mandarin.html'>Mandarin Communication Board</a>\n</h2>\n</div>\n<img src=\"/m/mandarin/mcb.png\">\n<div id='postdate'>Posted on 1/29/2025<br />\nTags: <a href='/tags.html'>Programming</a>, <a href='/tags.html'>Tools</a>, <a href='/tags.html'>Parenting</a></div>\nHappy Lunar New Year!<br />\n<br />\nIntroducing the <a href=\"/m/mandarin/index.html\">Mandarin Communication Board</a>, a tool for learning and communicating in Mandarin Chinese.<br />\n<br />\nMy son recently started showing interest in learning Mandarin thanks to some <a href=\"https://www.baobaolearnschinese.com/\">singing books</a> sent by a friend of ours.<br />\n<br />\nI made this tool to help us expand our vocabulary and enable us to communicate about every day stuff.<br />\n<br />\nMy favorite part as I dabble in Mandarin is that there is no verb conjugation! Grammar tends to be fairly simple, too, which means that you can start saying intelligible sentences quickly by picking up common words.<br />\n<br />\nThe toughest part so far is hearing and producing words with the right tones. To my untrained American ears, I often can't tell the difference between words that differ only in their tone. It's been helpful to see the words written in pinyin and spoken aloud using this communication board.<br />\n<br />\n<br />\nSome technical details:<br />\n<br />\n- I'm using the built-in SpeechSynthesis browser API, which produces audio that's good enough with the voices in Safari. I'm considering using higher quality TTS, like <a href=\"https://cloud.google.com/text-to-speech\">Google's</a>, which appears to have a generous free tier.<br />\n<br />\n- I used ChatGPT to do much of the hard work, including producing a lot of the vocabulary list. ChatGPT also contributed many of the word-to-emoji pairings. I had to remove many that were too abstract or a bad fit, though.<br />\n<br />\n- For some words, I used iOS's new Genmoji feature to create images. I'm happy with the results!<br />\n<br />\n- For other words, I used the wonderful and free images provided by <a href=\"https://arasaac.org\">ARASAAC</a>. I found this organization by searching for \"AAC images\". AAC stands for \"Augmentative and Alternative Communication\".<br />\n<br />\n- For a few words, I used <a href=\"https://unsplash.com\">Unsplash</a><br />\n<br />\n- There are ~20 words and phrases with no images and I don't think I will find good ones for them<br />\n<br />\n- I want to look into adding the full set of HSK1 and HSK2 vocabulary<br />\n<br />\n- I am targeting Apple devices so it's likely that TTS or the full set of emoji may not show up on other operating systems<br />\n<br />\n- This website can be added to your home screen as a PWA. I'm considering hooking it up to launch when I press the action button on my iPhone for quick reference.<br />\n<br />\n- As a follow-on project, I might use this dataset to create flash cards to use with spaced repetition. Update: check out the <a href=\"/p/mandarin-flashcards.html\">flashcards project</a>!<br />\n\n</div>\n"
    },
    {
         "title" : "Counting Tap Toy",
         "date_published" : "2025-01-01T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/counting.html",
         "url" : "https://memalign.github.io/p/counting.html",
         "image" : "https://memalign.github.io/m/counting/counting.png",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/counting.html'>Counting Tap Toy</a>\n</h2>\n</div>\n<img src=\"/m/counting/counting.png\">\n<div id='postdate'>Posted on 1/1/2025<br />\nTags: <a href='/tags.html'>Programming</a>, <a href='/tags.html'>Art</a>, <a href='/tags.html'>Games</a>, <a href='/tags.html'>Parenting</a></div>\nIntroducing <a href=\"/m/counting/index.html\">Counting Tap Toy</a>, the latest addition to the Tap Toy series.<br />\n<br />\n(See also: <a href=\"/m/slice/index.html\">Slice Tap Toy</a>, <a href=\"/m/fireworks/index.html\">Fireworks Tap Toy</a>, <a href=\"/m/taptoy/index.html\">Tap Toy</a>)<br />\n<br />\nIn Counting Tap Toy, you can tap to count various fish and aquatic creatures. The count is displayed and announced.<br />\n<br />\nI built this game for my 3-year-old son. He's pretty good at counting with one exception: he always skips \"14\". My hope is that seeing and hearing the numbers will reinforce 14's existence and teach the pattern of the teens and beyond.<br />\n<br />\n<br />\nSome technical details:<br />\n<br />\n- I whipped this game up in my spare hours during winter break after shipping <a href=\"/m/spacetrader/index.html\">Space Trader</a><br />\n<br />\n- The count is announced using the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis\">SpeechSynthesis API</a><br />\n<br />\n- Unlike the prior Tap Toys which use Matter.js, I picked <a href=\"https://github.com/KilledByAPixel/LittleJS\">LittleJS</a> by <a href=\"https://frankforce.com\">Frank Force</a>. I've admired Frank's work for a long time and I was dissatisfied with Matter.js's inconsistent behavior on devices with different screen refresh rates. I wasn't able to fix that to my satisfaction in Slice Tap Toy -- frame drops are still sometimes noticeable.<br />\n<br />\n- I'm generally pleased with LittleJS in this project. The example projects gave much of what I needed and the engine provides a lot of cool stuff, including systems for creating sound effects and particle effects.<br />\n<br />\n- I needed to hack in a few behavior changes which were tricky to achieve: a full-screen canvas, simultaneous mouse and touch support, direct callbacks for handling user input (since the SpeechSynthesis API seems to ignore calls without that direct tie to input), support for links overlaid on top of the game canvas. Fortunately, the code is straightforward and easy to modify.<br />\n<br />\n- One quirk: image tiles had a weird \"bleeding\" glitch where I would sometimes see a sliver of the other side of the tile wrapping around. I saw that LittleJS has a hack to solve this (tileFixBleedScale), but that causes other visual glitchiness (to me, it made the tiles look like they were under water, slight stretching and shrinking as the game object moves around). I picked a different solution: having at least a few pixels of padding baked into the image assets.<br />\n<br />\n- As usual, I used <a href=\"/m/pceimage/index.html\">PCEImage Editor</a> to create many graphics. I created the PCEImage format and tools so I could simply store and edit graphics as ASCII art. See them <a href=\"/m/counting/Images.js\">here</a>.<br />\n&nbsp;&nbsp;- I got the <a href=\"https://rapidpunches.itch.io/megamarinepack\">image assets</a> from someone who posted them with a permissive license on itch.io. Then I used PCEImage Editor to import and convert them.<br />\n<br />\n- Music came from <a href=\"https://www.chosic.com/free-music/classical/\">chosic.com</a>. <a href=\"/m/counting/songs/README.txt\">Credits</a> for the songs I used.<br />\n\n</div>\n"
    },
    {
         "title" : "Space Trader",
         "date_published" : "2024-12-24T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/spacetrader.html",
         "url" : "https://memalign.github.io/p/spacetrader.html",
         "image" : "https://memalign.github.io/m/spacetrader/spacetrader-1000.png",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/spacetrader.html'>Space Trader</a>\n</h2>\n</div>\n<img src=\"/m/spacetrader/spacetrader-1000.png\">\n<div id='postdate'>Posted on 12/24/2024<br />\nTags: <a href='/tags.html'>Programming</a>, <a href='/tags.html'>Games</a></div>\nIntroducing my latest game, playable right in your web browser: <a href=\"/m/spacetrader/index.html\">Space Trader</a><br />\n<br />\nIn Space Trader, you can trade goods, hunt bounties, amass a fortune, buy a moon and retire.<br />\n<br />\nSpace Trader can be saved to your home screen as a PWA (Progressive Web App).<br />\n<br />\n<br />\nSpace Trader started as a game written by Pieter Spronck for Palm OS, released in 2002. <a href=\"https://en.wikipedia.org/wiki/Space_Trader_(Palm_OS)\">Wikipedia page</a>. <a href=\"https://www.spronck.net/spacetrader/index.html\">Official website</a> (<a href=\"/m/spacetrader-official-site-mirror/index.html\">mirror</a>).<br />\n<br />\nYou can play the <a href=\"https://archive.org/details/palm3_SpaceTrader\">original</a> on archive.org.<br />\n<br />\nAs one of my favorites, this game holds a special place in my heart. I played a ton in middle school and high school. This is the second port of the game I've made.<br />\n<br />\nLike SFCave (recreated as <a href=\"/m/cr/index.html\">CaveRibbon</a>), I decided to recreate Space Trader as a web app to feed my nostalgia and give the game new life. I hope this version of Space Trader can survive long into the future thanks to the universal availability of web browsers and their devotion to compatibility.<br />\n<br />\n<br />\nSome technical details:<br />\n<br />\n- As usual, I used <a href=\"/m/pceimage/index.html\">PCEImage Editor</a> to create many graphics. I created the PCEImage format and tools so I could simply store and edit graphics as ASCII art. See them <a href=\"/m/spacetrader/Images.js\">here</a>.<br />\n<br />\n- To aid debugging and unit testing, I use a deterministic random number generator called <a href=\"/m/spacetrader/GameRand.js\">GameRand</a>. In debug mode, I can capture the random seed and log of every action taken in the game. Then I can replay that to reproduce a bug or create a test.<br />\n&nbsp;&nbsp;- I've written many unit / integration tests for Space Trader. See them <a href=\"/m/spacetrader/UnitTests.js\">here</a>.<br />\n&nbsp;&nbsp;- Learn more about GameRand in the <a href=\"/p/caveribbon.html\">post</a> for CaveRibbon.<br />\n&nbsp;&nbsp;- A major downside to this technique for testing is that tests become invalid if a bug fix (or a new feature) changes the amount of random numbers consumed. I ended up remaking many tests one or two times. This added a few days of extra work to the project.<br />\n&nbsp;&nbsp;- You can play the game with cheats and access the replay log on a special version of the game: <a href=\"/m/spacetrader/cheats.html\">cheats.html</a>.<br />\n<br />\n- I translated an existing implementation of this game to vanilla JavaScript using ChatGPT. I could translate ~300 lines at a time. I audited every line produced. This worked pretty well and saved me a huge amount of time compared to manually translating the code. This was a somewhat zen activity for me because it was mechanical; tedious but rewarding to see how quickly I could progress through the whole codebase. This was the kind of programming I could do after an exhausting day at work. Major differences/difficulties:<br />\n&nbsp;&nbsp;- The original code relies on integer math, but JavaScript uses float math. I needed to ensure all uses of numbers yielded an expected result. I ended up adding exhaustive runtime asserts and writing automated stress tests to catch problems.<br />\n&nbsp;&nbsp;- ChatGPT would sometimes produce inconsistent translations, especially for enum names. These could lurk, waiting to cause a crash at runtime. I hunted these with stress tests, manual tests, nearly exhaustive code coverage, and replayable game logs (which I turned into tests).<br />\n&nbsp;&nbsp;- Similarly, ChatGPT would inconsistently translate properties and their setters/getters. I left many awkward translations in place to save myself time, even though it makes the code worse.<br />\n&nbsp;&nbsp;- The UI needed to be tailored to the web. I ended up writing almost all new code for the UI.<br />\n&nbsp;&nbsp;- The original code had no tests. I wrote all new tests and a quick-and-dirty system for measuring code coverage. I even discovered several longstanding bugs in the original code.<br />\n<br />\n- Before translating the whole codebase, I investigated using emscripten to reuse as much of the original C code as possible. I decided I wouldn't be satisfied with the result. There wasn't separation of UI and business logic that would have let me easily build new UI tailored to web. There were a lot of Palm OS platform-specific functions that would need to be replaced. I didn't want to struggle to change the existing code where it became necessary.<br />\n\n</div>\n"
    },
    {
         "title" : "MemPlayer",
         "date_published" : "2024-07-25T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/memplayer.html",
         "url" : "https://memalign.github.io/p/memplayer.html",
         "image" : "https://memalign.github.io/m/memplayer/memplayer.png",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/memplayer.html'>MemPlayer</a>\n</h2>\n</div>\n<img src=\"/m/memplayer/memplayer.png\">\n<div id='postdate'>Posted on 7/25/2024<br />\nTags: <a href='/tags.html'>Programming</a>, <a href='/tags.html'>Tools</a></div>\nI recently whipped up a simple audio player dedicated to listening to long audio files across multiple listening sessions.<br />\n<br />\nIt's called MemPlayer and you can try it <a href=\"/m/memplayer/index.html\">here</a>.<br />\n<br />\n<br />\nThe problem MemPlayer solves:<br />\n<br />\nI listen to most audiobooks in the excellent Libby app. It nails the core use case: remembers playback position, gives easy controls for jumping back/forward, and gives granular control over playback speed.<br />\n<br />\nSometimes, though, I have a book (or other long audio recording) as a single standalone audio file. I still need all of those features for easy listening across multiple days.<br />\n<br />\nInstead of finding an existing app with exactly what I need, I experimented to see how quickly I could whip up a simple utility app using ChatGPT. I found the low overhead of web development plus ChatGPT to be a killer combination.<br />\n<br />\nI started with this prompt:<br />\n<div id='code'>Generate HTML, JavaScript, and CSS for a simple web app with these requirements:<br />\n- The user can browse their local disk to select an audio file<br />\n- Alternatively, the user can drag and drop an audio file onto the web app<br />\n- The web app allows the user to play the audio file, change playback speed, and skip forward and back by 10 seconds<br />\n- The web app stores the file in local storage and restores it when the page is refreshed<br />\n- The web app stores the current playback position and restores it when the page is refreshed. This way the user can load the page and resume what they were listening to.<br />\n- There is a clear button which causes the web app to forget the current audio file and playback position</div>\nThis produced code for index.html, scripts.js, and styles.css that gave me 90% of what I needed. The UI was good, but the web app did not work perfectly.<br />\n<br />\nI steered it with a few specific suggestions in subsequent prompts, mainly to use IndexedDB to store the audio file because its original choice, localStorage, can't handle big files. I also needed to fix a bug in restoring playback position. I then made some minor style and user experience tweaks, added PWA metadata and icons, and was done!<br />\n<br />\nOverall, I was able to whip this up in about an hour, with some of the fixes and tweaks done on the go.<br />\n<br />\nI think there's a lot of potential to make custom tiny tool web apps with low effort this way. And one of the best parts of the web is that nearly everyone can use these tools without any setup across their phones, tablets, computers, etc. And they will hopefully continue working for decades to come without any developer intervention.<br />\n\n</div>\n"
    },
    {
         "title" : "Slice Tap Toy",
         "date_published" : "2024-05-13T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/slice.html",
         "url" : "https://memalign.github.io/p/slice.html",
         "image" : "https://memalign.github.io/m/slice/slice.jpg",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/slice.html'>Slice Tap Toy</a>\n</h2>\n</div>\n<img src=\"/m/slice/slice.jpg\">\n<div id='postdate'>Posted on 5/13/2024<br />\nTags: <a href='/tags.html'>Programming</a>, <a href='/tags.html'>Games</a></div>\nIntroducing my latest project, playable right in your web browser: <a href=\"/m/slice/index.html\">Slice Tap Toy</a><br />\n<br />\nSlice Tap Toy can also be saved to your home screen as a PWA (Progressive Web App).<br />\n<br />\nThis project is my spin on the touch screen swipe-to-slice concept. Every pizza can be sliced multiple times, down to tiny slivers. Can you unlock the whole menu?<br />\n<br />\nSwiping across a touch screen to slice objects is a delightful and fun mechanic. You might remember some of the best early games for iPhone: Fruit Ninja and Cut The Rope.<br />\n<br />\nUnfortunately, these formerly wonderful games are no longer delightful, now with constant interruptions and ads. Go try them and see for yourself. These games have been ruined.<br />\n<br />\nSlice Tap Toy is a simple passion project so it can be light, fun, and pristine.<br />\n<br />\nDevelopment details:<br />\n<br />\nI was inspired to make Slice Tap Toy when I came across <a href=\"https://js13kgames.com/entries/samurai-sam\">Samurai Sam</a>, an entry to the 2023 JS13KGames competition. This got me thinking about slicing games.<br />\n<br />\nI decided to do some quick prototyping by hacking on <a href=\"/m/taptoy/index.html\">Tap Toy</a>'s source code. I vetted that I could track slices from touch and mouse input, draw the slices, and detect collisions without much work. Like the original Tap Toy, I use <a href=\"/m/pceimage/index.html\">PCEImage</a> for the art.<br />\n<br />\nLike <a href=\"/m/cr/index.html\">CaveRibbon</a> (<a href=\"/p/caveribbon.html\">project details</a>), I used LLMs to help. I could do some things faster, I was able to get the website to look how I wanted without becoming an expert on CSS, and (new to this project) I was able to get artistic inspiration for the art. I asked DALL-E to generate pizza pixel art. What I got were grotesque abominations that, to this day, have eroded some of my enjoyment of pizza. I stared at flesh colored cheese and glitchy toppings and turned them into my own cleaner pixel art pizzas. I'll spare you the examples.<br />\n\n</div>\n"
    },
    {
         "title" : "CaveRibbon",
         "date_published" : "2024-02-19T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/caveribbon.html",
         "url" : "https://memalign.github.io/p/caveribbon.html",
         "image" : "https://memalign.github.io/m/cr/CaveRibbon-gameplay.png",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/caveribbon.html'>CaveRibbon</a>\n</h2>\n</div>\n<img src=\"/m/cr/CaveRibbon-gameplay.png\">\n<div id='postdate'>Posted on 2/19/2024<br />\nTags: <a href='/tags.html'>Programming</a>, <a href='/tags.html'>Games</a></div>\nIntroducing my latest game, playable right in your web browser: <a href=\"/m/cr/index.html\">CaveRibbon</a><br />\n<br />\nCaveRibbon is a one-button game where you control a ribbon gliding through a shrinking cavern. Avoid the walls and obstacles as long as you can. Compete with yourself and your friends by sharing a replay. Submit your high scores to get into the hall of fame!<br />\n<br />\nCaveRibbon can be saved to your home screen as a PWA (Progressive Web App).<br />\n<br />\n<br />\nThis game is a tribute to <a href=\"http://www.sunflat.net\">Sunflat</a>'s SFCave for Palm OS. You can play the <a href=\"https://archive.org/details/palm3_sfcave\">original</a> on archive.org.<br />\n<br />\nIn fact, it was archive.org that stirred up my nostalgia <a href=\"https://www.theverge.com/2022/11/25/23478396/internet-archive-palm-pilot-emulation-games-apps-dope-wars\">over a year ago</a> by publishing a <a href=\"https://archive.org/details/softwarelibrary_palm\">collection of 565 Palm OS apps</a>, all usable on the web thanks to a Palm OS emulator.<br />\n<br />\nWhen I was in middle school, I would play SFCave on a Palm m130 at night when I was supposed to go to bed. My dad and I had an ongoing competition to see who could get the highest score.<br />\n<br />\nThis was my inspiration to add the replay and share features which let you replay the exact same round, with your previous playthrough visible as a head-to-head competitor.<br />\n<br />\n<br />\nSome technical details:<br />\n<br />\n- I used <a href=\"/m/pceimage/index.html\">PCEImage Editor</a> to create the pixel font and many graphics. I created the PCEImage format and tools so I could simply store and edit graphics as ASCII art. See them <a href=\"/m/cr/Images.js\">here</a>.<br />\n<br />\n- This game is entirely static files. There's no server-side backend. To create replay URLs, I need to serialize the entire game state into the URL itself. This proved to be challenging because there are URL size limits in browsers and messaging apps. In my first approach, I wrote a bunch of code to serialize all of the wall, obstacle, and player positions. This proved to be too much data. I came up with a few tricks to significantly shrink the data:<br />\n<br />\n&nbsp;&nbsp;- I compress player positions lossily and then interpolate them as part of deserialization. I keep only positions at the top of a peak, bottom of a valley, and when the user is close to an obstacle. I only have to keep ~4% of the original data.<br />\n<br />\n&nbsp;&nbsp;- I use a deterministic random number generator called <a href=\"/m/cr/GameRand.js\">GameRand</a>. As long as I reuse the random number generator's seed and don't change the code to use random numbers differently I will get the exact same wall and obstacle positions in a replay.<br />\n<br />\n&nbsp;&nbsp;&nbsp;&nbsp;- I first came across GameRand in <a href=\"https://phoboslab.org/\">phoboslab</a>'s game <a href=\"https://phoboslab.org/underrun/\">underrun</a> (<a href=\"https://github.com/phoboslab/underrun/blob/master/source/random.js\">source</a>).<br />\n<br />\n&nbsp;&nbsp;&nbsp;&nbsp;- I searched for the constant 0x49616E42 to find the origins of this function. This led me down a rabbit hole: a <a href=\"https://stackoverflow.com/questions/1046714/what-is-a-good-random-number-generator-for-a-game\">StackOverflow post</a> which links to a <a href=\"https://web.archive.org/web/20091209122817/http://ianbullard.squarespace.com/journal/2009/4/28/why-you-should-never-use-rand.html\">blog post</a> (now only available on archive.org) which links to this <a href=\"http://www.flipcode.com/archives/07-15-2002.shtml\">post from 2002</a> introducing a faster rand function by Stephan Schaem, who appears to be the original author.<br />\n<br />\n&nbsp;&nbsp;- I couldn't just serialize the replay as JSON. That's not nearly compact enough (every digit is stored as a character!). Instead, I packed raw bytes into a buffer and serialized that into Base64. I did some tweaks to squeeze some additional efficiency (such as replacing characters that need to be percent-encoded in URLs).<br />\n<br />\n&nbsp;&nbsp;- Replay URLs for scores of 700 or higher get a nice image preview (Open Graph image) that includes the score. I generated all of these files statically using PCEImage and a script.<br />\n<br />\n- This is the first project where I've made use of an LLM to help. I used ChatGPT and it had great positive impact:<br />\n<br />\n&nbsp;&nbsp;- It helped me do some things faster, such as writing boilerplate or example code that I would have had to write myself while wading through documentation.<br />\n<br />\n&nbsp;&nbsp;- It helped me do some things I wasn't willing to do myself. I don't have time to learn the right way to get specific UI behaviors using HTML and CSS. I would have compromised the UI design to fit within my current skills. With ChatGPT's help, I was able to get exactly what I wanted much faster than having to learn how to do this on my own.<br />\n<br />\n&nbsp;&nbsp;- In general, I'm energized to work on more projects with these tools. I found the accuracy to be far above what I expected. It's more than good enough for a non-mission-critical side project.<br />\n<br />\n- I'm trying out some design ideas from <a href=\"https://worrydream.com/\">Bret Victor</a>'s <a href=\"https://worrydream.com/MagicInk/\">Magic Ink paper</a> (<a href=\"/m/MagicInk.pdf\">backup</a>). My favorite insights:<br />\n<br />\n&nbsp;&nbsp;- Most software design should focus on information graphic design, not interaction design<br />\n<br />\n&nbsp;&nbsp;- The case study of Amazon's book listings drives that point home<br />\n<br />\n&nbsp;&nbsp;- Try using sentences to describe settings rather than have a list of toggles (illustrated with his BART widget). I use this concept for sound effects settings in CaveRibbon.<br />\n<br />\n&nbsp;&nbsp;- Instead of requiring interaction, make decisions for the user based on context. I use this idea in CaveRibbon by fading out the rest of the UI during gameplay instead of having a \"full screen\" button.<br />\n<br />\n<br />\nSee also:<br />\n<br />\n- Sunflat's latest games for <a href=\"http://www.sunflat.net/iphone/\">iOS</a> and <a href=\"http://www.sunflat.net/android/\">Android</a><br />\n\n</div>\n"
    },
    {
         "title" : "Octogram",
         "date_published" : "2023-12-23T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/octogram.html",
         "url" : "https://memalign.github.io/p/octogram.html",
         "image" : "https://memalign.github.io/m/octogram/octogram.png",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/octogram.html'>Octogram</a>\n</h2>\n</div>\n<img src=\"/m/octogram/octogram.png\">\n<div id='postdate'>Posted on 12/23/2023<br />\nTags: <a href='/tags.html'>Games</a></div>\nIn an <a href=\"https://news.ycombinator.com/item?id=38732804\">HN post</a> about a very cool <a href=\"/p/puzzlescript.html\">PuzzleScript</a> game called <a href=\"https://jacklance.github.io/PuzzleScript/play.html?p=cfdcc6e23f1fb3e9de2fd42fafaf4d4c\">Enigmash</a>, I learned sad news.<br />\n<br />\nJack Lance, the author of the game, died earlier this year.<br />\n<br />\nI went to his website, <a href=\"https://jacklance.github.io\">jacklance.github.io</a>, and saw that it had been updated to refer to him in the past tense.<br />\n<br />\nSeeing that the site is hosted on GitHub, I looked at the <a href=\"https://github.com/JackLance/jacklance.github.io/commit/92fc694347c53c7c87d8d5086aefde10a9a422de\">recent updates</a>. I discovered two things:<br />\n<br />\n- He made this update himself, to show up a few days later<br />\n<br />\n- He published one last game, Octogram, but unfortunately made a typo in the URL to the game<br />\n&nbsp;&nbsp;- Update 12/30/23: I <a href=\"https://github.com/JackLance/jacklance.github.io/commit/92fc694347c53c7c87d8d5086aefde10a9a422de#commitcomment-135624323\">commented</a> on the git commit and one of Jack's siblings saw it. They pushed a fix and now the link on Jack's website is working!<br />\n<br />\nHere's a working link to Jack Lance's last game: <a href=\"https://jacklance.github.io/octogram.html\">Octogram</a>.<br />\n<br />\nIt's a super tricky puzzle game with fun wordplay. Give the <a href=\"https://github.com/JackLance/jacklance.github.io/blob/master/octogram.html\">source code</a> a peek if you get stuck -- but beware this will spoil all of the answers!<br />\n<br />\n<br />\nMore resources:<br />\n<br />\n- Jack's <a href=\"https://jacklance.github.io/games.html\">games</a><br />\n- <a href=\"https://puzzleswiki.miraheze.org/wiki/Jack_Lance\">Jack Lance</a> on Puzzle Wiki<br />\n- A <a href=\"https://joelthefox.github.io/2023-05-04-Jack-Lance/\">blog post</a> about Jack's work<br />\n- Another <a href=\"https://www.puzzlesforprogress.net/post/the-puzzling-xlnc-of-jack-lance-1997-2023\">blog post</a> about Jack's work<br />\n- <a href=\"/m/octogram/jacklance.github.io.zip\">Backup</a> of jacklance.github.io<br />\n&nbsp;&nbsp;- Due to some technical details of PuzzleScript, none of his PuzzleScript games are in this repo. Instead, they are stored as GitHub gists. I've grabbed a separate <a href=\"https://github.com/memalign/memalign.github.io/tree/master/m/octogram\">backup</a> of every gist linked to by his games page for posterity.<br />\n- A YouTube <a href=\"https://www.youtube.com/watch?v=v_xdEIPZ2Po\">video</a> where Jonathan Blow mentions Jack's death. \"...he was 25... he was already one of the best game designers in the world and was on track to be even better\"<br />\n- <a href=\"https://www.douglassfh.com/obituary/zachary-polansky\">Obituary</a> under his real name<br />\n<br />\n\n</div>\n"
    },
    {
         "title" : "Mastodon API",
         "date_published" : "2023-11-27T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/mastodon.html",
         "url" : "https://memalign.github.io/p/mastodon.html",
         "image" : "https://memalign.github.io/m/mastodon-wordmark-black-text.svg",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/mastodon.html'>Mastodon API</a>\n</h2>\n</div>\n<img src=\"/m/mastodon-wordmark-black-text.svg\">\n<div id='postdate'>Posted on 11/27/2023<br />\nTags: <a href='/tags.html'>Programming</a></div>\nIn the same vein as <a href=\"/p/freshrss.html\">FreshRSS</a>, another open source project with a cool API is Mastodon.<br />\n<br />\nMany users I followed on Twitter (now X) have migrated to Mastodon. I found that the Mastodon apps I tried didn't perfect the one thing I want: to read a chronological timeline of posts and reblogs from the accounts I follow - always keeping my spot since the last time I checked.<br />\n<br />\nI had already written my own Twitter client for this, which I've been using for many years, and just finished adapting that for Mastodon.<br />\n<br />\nThe Mastodon API made this really easy! I can tell that a lot of care went into making this core use case straightforward. Thank you Mastodon developers!<br />\n<br />\nHere's the short list of requests needed to make a simple Mastodon timeline viewer app:<br />\n<br />\n<div id='code'>Below, I&#039;m using https://mstdn.party but you should substitute the Mastodon server you use.<br />\n<br />\n1. Register your app.<br />\n- Docs: <a href=\"https://docs.joinmastodon.org/methods/apps/#create\">https://docs.joinmastodon.org/methods/apps/#create</a><br />\n- Replace YOURAPPNAME and YOURWEBSITE below. YOURWEBSITE should be a full url starting with &quot;https://&quot;<br />\n<br />\ncurl -X POST -F &#039;client_name=YOURAPPNAME&#039; -F &#039;redirect_uris=urn:ietf:wg:oauth:2.0:oob&#039; -F &#039;website=YOURWEBSITE&#039; https://mstdn.party/api/v1/apps<br />\n<br />\nThe response is JSON and includes important fields you will need in later steps: client_id and client_secret. I&#039;ll refer to these as YOURCLIENTID and YOURCLIENTSECRET below.<br />\n<br />\n<br />\n2. Give your app permission to read your account information. Open this URL in your browser and authorize it. You&#039;ll be shown an authorization code which I&#039;ll refer to as YOURAUTHCODE below.<br />\n- Docs: <a href=\"https://docs.joinmastodon.org/methods/oauth/#authorize\">https://docs.joinmastodon.org/methods/oauth/#authorize</a><br />\n<br />\nhttps://mstdn.party/oauth/authorize?response_type=code&amp;client_id=YOURCLIENTID&amp;redirect_uri=urn:ietf:wg:oauth:2.0:oob<br />\n<br />\n<br />\n3. Get an access token for your app to use to request your account&#039;s timeline (and make any other helpful API requests).<br />\n- Docs: <a href=\"https://docs.joinmastodon.org/methods/oauth/#token\">https://docs.joinmastodon.org/methods/oauth/#token</a><br />\n<br />\ncurl -X POST \\<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-F &#039;client_id=YOURCLIENTID&#039; \\<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-F &#039;client_secret=YOURCLIENTSECRET&#039; \\<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-F &#039;redirect_uri=urn:ietf:wg:oauth:2.0:oob&#039; \\<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-F &#039;grant_type=authorization_code&#039; \\<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-F &#039;code=YOURAUTHCODE&#039; \\<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-F &#039;scope=read&#039; \\<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;https://mstdn.party/oauth/token<br />\n<br />\nThe response is JSON and includes the access_token. I&#039;ll refer to that as YOURACCESSTOKEN below.<br />\n<br />\n<br />\n4. Now your app can load your timeline.<br />\n- Docs: <a href=\"https://docs.joinmastodon.org/methods/timelines/#home\">https://docs.joinmastodon.org/methods/timelines/#home</a><br />\n<br />\ncurl &#039;https://mstdn.party/api/v1/timelines/home&#039; -H &#039;Authorization: Bearer YOURACCESSTOKEN&#039;<br />\n<br />\nThe result is JSON with everything you need to display the timeline in full. I love that it&#039;s all included in a single API request! This even includes account information (display name, username, the image URL for the poster&#039;s avatar, and more) for the people you follow and the people whose posts they have reblogged.<br />\n<br />\nOne helpful argument to include is &quot;limit&quot;. I like to request the max number of posts supported by the API, 40.<br />\n<br />\ncurl &#039;https://mstdn.party/api/v1/timelines/home?limit=40&#039; -H &#039;Authorization: Bearer YOURACCESSTOKEN&#039;<br />\n<br />\nWhen refreshing my app, I want to request all posts that are new since the last time I refreshed. I accomplish this by using the max_id argument.<br />\n<br />\nI start by requesting the most recent 40 posts:<br />\n<br />\ncurl &#039;https://mstdn.party/api/v1/timelines/home?limit=40&#039; -H &#039;Authorization: Bearer YOURACCESSTOKEN&#039;<br />\n<br />\nI check if this includes the last post my app is aware of. If not, I request farther back by including &quot;max_id=&quot; the id of the oldest post in the response I just got. Example:<br />\n<br />\ncurl &#039;https://mstdn.party/api/v1/timelines/home?limit=40&amp;max_id=123456789&#039; -H &#039;Authorization: Bearer YOURACCESSTOKEN&#039;<br />\n<br />\nI continue loading back like this until any of these conditions are true:<br />\n- I find posts that my app already knows about<br />\n- I get no posts in response<br />\n- I get posts older than 1 month (I don&#039;t want to accidentally load back too far)<br />\n- I&#039;ve made more than 5 requests (I don&#039;t want to create excess traffic)</div>\nAnd that's it! My app only needs to use a single API to refresh my timeline. I did steps 1 through 3 manually and hard-coded the access token into my app, using it to perform step 4 every time I want to refresh. This is ok because this app is just for me so I don't need a more dynamic authentication flow.<br />\n\n</div>\n"
    },
    {
         "title" : "AirDesk",
         "date_published" : "2023-11-26T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/airdesk.html",
         "url" : "https://memalign.github.io/p/airdesk.html",
         "image" : "https://memalign.github.io/m/airdesk.jpg",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/airdesk.html'>AirDesk</a>\n</h2>\n</div>\n<img src=\"/m/airdesk.jpg\">\n<div id='postdate'>Posted on 11/26/2023<br />\nTags: <a href='/tags.html'>Parenting</a>, <a href='/tags.html'>Tools</a>, <a href='/tags.html'>Leisure</a></div>\nThere's not enough time in the day for everything I want and need to do. Parenting, work, exercise, hobbies, sleep, etc.<br />\n<br />\nI've found that even optimizing a few minutes here and there can add up to make life easier and more enjoyable. I still use tools for consuming <a href=\"/p/tts-download-into-brain.html\">text</a> and <a href=\"/p/speed-up-av.html\">audio/video</a> faster.<br />\n<br />\nHere's one of the biggest new optimizations I was able to make this year.<br />\n<br />\nI had a bunch of work time and a bunch of hobby time I wanted to spend in front of a keyboard. This is thoughtful writing or programming time that couldn't be stolen a few minutes at a time while waiting in line, walking between meetings, etc.<br />\n<br />\nI also had a bunch of underutilized time on a stationary exercise bike. I mostly spent that time reading news feeds or watching TV/movies. I enjoyed that a lot, but it wasn't the right balance of time spent doing that when I had other things I wanted to prioritize.<br />\n<br />\nI searched for a product that would let me use a laptop or iPad + keyboard case while exercising on the stationary bike.<br />\n<br />\nI came across <a href=\"https://airdesks.com\">airdesks.com</a> and bought their <a href=\"https://airdesks.com/products/laptop/laptop-desk/\">laptop desk</a>. I got the 64\" tall, \"Average Size Laptop\", No AirShelves config. It's been awesome. I use it on the bike every day and occasionally as a standing desk.<br />\n<br />\nRight now, I'm writing this post while exercising on the bike while my son is napping -- something I couldn't have squeezed in without this desk!<br />\n\n</div>\n"
    },
    {
         "title" : "FreshRSS",
         "date_published" : "2023-11-19T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/freshrss.html",
         "url" : "https://memalign.github.io/p/freshrss.html",
         "image" : "https://memalign.github.io/m/FreshRSS-logo.png",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/freshrss.html'>FreshRSS</a>\n</h2>\n</div>\n<img src=\"/m/FreshRSS-logo.png\">\n<div id='postdate'>Posted on 11/19/2023<br />\nTags: <a href='/tags.html'>Programming</a>, <a href='/tags.html'>RSS</a></div>\nThis year has been rocky for free APIs I've enjoyed adopting in personal projects. Twitter (now X) killed 3rd party clients, Reddit made similarly killer API pricing changes, and now Feedly has started charging too.<br />\n<br />\nFortunately, Feedly's API pricing is very reasonable right now: $8/mo or $72/year!<br />\n<br />\nFeedly provides a great service, as I <a href=\"/p/feedly.html\">wrote</a> in March 2020. It's worth paying for at this price.<br />\n<br />\nI've depended on Feedly ever since Google Reader shut down in 2013. I seamlessly migrated and never had problems for 10 years of use. Feedly is a great way to keep up to date with RSS feeds and there are several great RSS reader apps that support it. Feedly is very reliable and \"just works\".<br />\n<br />\nBut this is an era of paid subscription overload. Even though the price is reasonable, I sought out alternatives that wouldn't carry the risk of incremental price increases over the coming years.<br />\n<br />\nAnd I found one that, for the past few weeks, has proven to be good enough to replace Feedly for me: <a href=\"https://www.freshrss.org\">FreshRSS</a> (<a href=\"https://github.com/FreshRSS/FreshRSS\">GitHub</a>).<br />\n<br />\nIt's a free and open source project but using it came with the cost of time. I spent the past few weeks writing a bunch of code, finding a reliable host, and cross-checking with Feedly to ensure I'm getting good results.<br />\n<br />\nHere are some notes on adopting FreshRSS in a personal project. The complexity and uncertainty are the downsides of using this instead of Feedly. The benefits include its price (free), that it is open source, and the option to self-host.<br />\n<br />\n- Export existing feeds from Feedly as an OPML file. <a href=\"https://docs.feedly.com/article/52-how-can-i-export-my-sources-and-feeds-through-opml\">Instructions</a>.<br />\n<br />\n- Find a FreshRSS host or host it yourself. Here's a list of <a href=\"https://freshrss.org/cloud-providers.html\">official hosts</a>. I tried one, but found it to be unreliable -- it seemed to purge my history after ~1 week. I switched to a different one and have had better results.<br />\n<br />\n- Once logged into the FreshRSS host, update some settings:<br />\n&nbsp;&nbsp;- Profile: create an Authentication token. This will be used to automate updating all feeds. Create an API password. This will be used when you adopt the API to load feed information, news entries, and mark them as read. Take note of the API URL (example: https://host.tld/p/api/).<br />\n&nbsp;&nbsp;- Archiving: change settings to keep longer history. I think this helps avoid old articles reappearing as unread in your feeds. These settings do not appear to be honored by all hosts.<br />\n<br />\n- Import OPML file into FreshRSS: In the web UI, click the folder icon, then Subscription Management, then the folder icon (again), then Import / Export. Then you can pick a file to upload to import.<br />\n<br />\n- To reliably refresh all feeds from the source, I've found it necessary to set up a cron job on a server I own to force FreshRSS to refresh. I'm running this every 4 minutes, but FreshRSS will only honor it every ~15-20 minutes. Use your username and the authentication token configured in FreshRSS settings. Make sure to URL encode them (space will need to be replaced by +, special characters will need to be %-encoded).<br />\n<div id='code'>*/4 * * * * /usr/bin/sh /path/to/updateFreshRSS.sh</div>\nupdateFreshRSS.sh:<br />\n<div id='code'>/usr/bin/curl &#039;https://host.tld/p/i/?c=feed&amp;a=actualize&amp;ajax=1&amp;force=1&amp;user=YOURUSERNAME&amp;token=AUTHENTICATIONTOKENSETABOVE&#039;</div>\n&nbsp;&nbsp;- Most RSS feeds keep enough history that you won't miss entries even if you refresh infrequently. For me, one feed in particular lost entries in FreshRSS compared to Feedly: the unofficial Hacker News front page feed from <a href=\"https://hnrss.github.io/\">hnrss.org</a>. Because this feed seems to provide a current snapshot rather than full history, FreshRSS's less frequent refreshes ended up missing entries that Feedly would catch. My frequent cron job plus changing the feed url from https://hnrss.org/frontpage to https://hnrss.org/frontpage?count=100 worked well enough to nearly match Feedly's results (and any discrepancies were actually desirable, like missing posts that were quickly flagged to death).<br />\n<br />\n- Now, you're ready to adopt the API. FreshRSS's API is identical to Google Reader's! The official documentation even links to old web pages that detail the Google Reader API. I found a few docs helpful:<br />\n&nbsp;&nbsp;- The <a href=\"http://freshrss.github.io/FreshRSS/en/developers/06_GoogleReader_API.html\">official documentation</a><br />\n&nbsp;&nbsp;- The server-side <a href=\"https://github.com/FreshRSS/FreshRSS/blob/edge/p/api/greader.php\">code</a> that implements the API<br />\n&nbsp;&nbsp;- This <a href=\"https://web.archive.org/web/20130710044440/http://undoc.in/api.html\">old archived webpage</a> that details the Google Reader API<br />\n<br />\nSome important requests:<br />\n<br />\n<div id='code'>Authenticate:<br />\ncurl &#039;https://host.tld/p/api/greader.php/accounts/ClientLogin?Email=YOURUSERNAME&amp;Passwd=YOURAPIPASSWORD&#039;<br />\n<br />\nThis gives a response that looks like:<br />\nSID=YOURUSERNAME/123456123456123456abcdefabcdef1234561234<br />\nLSID=null<br />\nAuth=YOURUSERNAME/123456123456123456abcdefabcdef1234561234<br />\n<br />\nSave the string that comes after &quot;Auth=&quot;. I&#039;ll call that YOURAUTH below.<br />\n<br />\nGet a &quot;write token&quot; that will allow you to mark entries as read:<br />\ncurl -H &quot;Authorization:GoogleLogin auth=YOURAUTH&quot; &#039;https://host.tld/p/api/greader.php/reader/api/0/token&#039;<br />\n<br />\nThe response is a string. Use the string as WRITETOKEN below.<br />\n<br />\nGet all news entries in JSON form:<br />\ncurl -H &quot;Authorization:GoogleLogin auth=YOURAUTH&quot; &#039;https://host.tld/p/api/greader.php/reader/api/0/stream/contents/reading-list&#039;<br />\n<br />\nGet all unread news entries in JSON form:<br />\ncurl -H &quot;Authorization:GoogleLogin auth=YOURAUTH&quot; &#039;https://host.tld/p/api/greader.php/reader/api/0/stream/contents/reading-list?xt=user/-/state/com.google/read&#039;<br />\n<br />\nMark an entry (or multiple entries) as read using their entry IDs. In this example, I&#039;ve put ENTRYID1, ENTRYID2, and ENTRYID3 as example placeholders:<br />\ncurl -H &quot;Authorization:GoogleLogin auth=YOURAUTH&quot; &#039;https://host.tld/p/api/greader.php/reader/api/0/edit-tag&#039; -X POST -d &#039;T=WRITETOKEN&amp;a=user/-/state/com.google/read&amp;i=ENTRYID1&amp;i=ENTRYID2&amp;i=ENTRYID3&#039;<br />\n<br />\nGet your subscription list, which gives you an icon image URL for each feed:<br />\ncurl -H &quot;Authorization:GoogleLogin auth=YOURAUTH&quot; &#039;https://host.tld/p/api/greader.php/reader/api/0/subscription/list?output=json&#039;</div>\n\n</div>\n"
    },
    {
         "title" : "Fireworks Tap Toy",
         "date_published" : "2023-09-17T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/fireworks.html",
         "url" : "https://memalign.github.io/p/fireworks.html",
         "image" : "https://memalign.github.io/m/fireworks/fireworks.png",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/fireworks.html'>Fireworks Tap Toy</a>\n</h2>\n</div>\n<img src=\"/m/fireworks/fireworks.png\">\n<div id='postdate'>Posted on 9/17/2023<br />\nTags: <a href='/tags.html'>Programming</a>, <a href='/tags.html'>Art</a>, <a href='/tags.html'>Games</a></div>\nIntroducing my latest project: <a href=\"/m/fireworks/index.html\">Fireworks Tap Toy</a><br />\n<br />\nOn this year's Fourth of July, my toddler son discovered a love of fireworks. With Fireworks Tap Toy, I'm trying to bring some of that magic to the touch screen.<br />\n<br />\nTap, click, type, or go into \"auto launch\" mode.<br />\n<br />\nThis project is a remix of a few other projects:<br />\n<br />\n- <a href=\"/m/taptoy/index.html\">Tap Toy</a>, which has its own <a href=\"/p/taptoy.html\">story</a><br />\n&nbsp;&nbsp;- I copied and modified index.html and progressive web app pieces<br />\n&nbsp;&nbsp;- I copied over touch, mouse, and keyboard support<br />\n&nbsp;&nbsp;- I copied over sound effects and music utilities<br />\n<br />\n- An old <a href=\"https://codepen.io/whqet/pen/abooRX\">codepen</a> (<a href=\"/m/fireworks/codepen.html\">backup</a>) someone created to teach others how to animate fireworks using JavaScript canvas<br />\n&nbsp;&nbsp;- I chose this over fireworks JavaScript frameworks people have shared because it's so much simpler. I don't like the hassle of dependencies. I don't want to install some tool or import an opaque blob. I just want to write some (ideally self-contained, vanilla) code for fun. Here's the <a href=\"https://github.com/crashmax-dev/fireworks-js/\">top hit</a> for 'fireworks javascript' which I looked into and chose not to use. Where even is the code??<br />\n<br />\n<br />\nSome tips:<br />\n<br />\n- You can add Fireworks Tap Toy to your home screen on iOS or Android. If you do that, it'll behave more like a normal app. (I did the extra bit of work to make this a \"progressive web app\")<br />\n<br />\n- If you give this to a kid, you can use <a href=\"https://support.apple.com/en-us/HT202612\">Guided Access</a> to prevent them from leaving the app<br />\n\n</div>\n"
    },
    {
         "title" : "Remember Forgotten Names",
         "date_published" : "2023-05-21T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/remember.html",
         "url" : "https://memalign.github.io/p/remember.html",
         "image" : "https://memalign.github.io/m/space-alphabet.jpg",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/remember.html'>Remember Forgotten Names</a>\n</h2>\n</div>\n<img src=\"/m/space-alphabet.jpg\">\n<div id='postdate'>Posted on 5/21/2023<br />\nTags: <a href='/tags.html'>Brain Hacking</a></div>\nI use this trick when I can't remember a name I used to know. It works for names of actors, teachers, friends of friends, etc.<br />\n<br />\nThe trick:<br />\n<br />\nFirst, try to remember as much as you can about the person. Imagine their face, appearance, and other biographical information.<br />\n<br />\nThen go through the alphabet saying a name for each letter. Try to pick names that are as plausible as possible for the person you're trying to remember.<br />\n<br />\nExample:<br />\n<br />\nWhat was my old roommate's girlfriend's name?<br />\n<br />\nShe was from Connecticut, they dated for a few years, she had long dark hair, she was allergic to dogs, she worked as an accountant, ...<br />\n<br />\nA... Ashley<br />\nB... Blaire<br />\nC... Chelsea<br />\nD... Daphne<br />\nE... Eliza<br />\nF... Frances<br />\nG... Genevieve<br />\nH... Hillary<br />\nI... Irene<br />\nJ... Jessica<br />\nK... Katherine<br />\nL... Laura<br />\nM... Monica<br />\nN... Nancy<br />\nO... Olivia<br />\nP... Penny<br />\nQ... Queenie<br />\nR... Rachel<br />\nS... Stephanie! That's it!<br />\n<br />\nI can almost feel the old dusty neural pathways light up when it finally clicks!\n</div>\n"
    },
    {
         "title" : "Emscripten on Raspberry Pi 400",
         "date_published" : "2023-01-15T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/pi-emscripten.html",
         "url" : "https://memalign.github.io/p/pi-emscripten.html",
         "image" : "https://memalign.github.io/m/raspberry-pi-logo.png",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/pi-emscripten.html'>Emscripten on Raspberry Pi 400</a>\n</h2>\n</div>\n<img src=\"/m/raspberry-pi-logo.png\">\n<div id='postdate'>Posted on 1/15/2023<br />\nTags: <a href='/tags.html'>Programming</a>, <a href='/tags.html'>Raspberry Pi</a></div>\nI recently completed a harrowing journey to install Emscripten on a Raspberry Pi 400. There were many hiccups along the way that brought back bad memories from the ~8 years that I used Linux (4 on Gentoo, 4 on Debian) as my daily driver OS.<br />\n<br />\nIf you're running a well-trodden configuration, things work pretty smoothly. If you're running anything else, you'll spend hours, days, or even years with systems that aren't working 100%.<br />\n<br />\nFor Emscripten, Raspberry Pi 400 is not a well-trodden configuration.<br />\n<br />\nEmscripten provides official binaries for many configurations and I bet the <a href=\"https://emscripten.org/docs/getting_started/downloads.html#sdk-download-and-install\">official tutorial</a> goes really quickly and smoothly if you are running an x64 CPU.<br />\n<br />\nThey even provide binaries if you're running an arm64 CPU, just install using this command (see <a href=\"https://github.com/emscripten-core/emsdk/issues/547\">this ticket</a> for more info):<br />\n<div id='code'>./emsdk install latest-arm64-linux</div>\nBut if you are running a 32-bit Intel-based (x86) or ARM CPU, then you will need to build from source.<br />\n<br />\nRaspberry Pi 400 is a 32-bit ARM CPU so I found myself needing to build from source.<br />\n<br />\nAnd, at least on my machine, the default commands did not work.<br />\n<br />\n(I also tried to get Emscripten installed in the iSH iOS app, which emulates an x86 CPU. The emsdk script spent hours cloning the LLVM repository and then started building from source but iSH consistently crashed early in the build process. I gave up. It's possible this will work in the future.)<br />\n<br />\nHere are the steps I followed, what failed, and how I got it working:<br />\n<br />\nMy initial configuration: Raspberry Pi 400 running the Buster (Debian 10) version of Raspbian that came with the SD card. I had installed some packages for other purposes so it's possible I won't mention some packages vital to making these steps work.<br />\n<br />\nI needed to install one package:<br />\n<div id='code'>sudo apt-get install cmake</div>\nI think that the resources emscripten pulls plus the intermediate build products can end up taking tens of gigs of storage (I only checked once during build and it was 22GB). I didn't have that much free space on the Raspberry Pi's SD card so I used a USB-C external drive. My external drive is formatted exfat.<br />\n<br />\nThe exfat filesystem doesn't support symlinks and building will fail hours into the process because of that:<br />\n<div id='code'>[ 50%] Linking CXX shared library ../../lib/libLTO.so<br />\nCMake Error: failed to create symbolic link &#039;../../lib/libLTO.so&#039;: operation not permitted<br />\nCMake Error: cmake_symlink_library: System Error: Operation not permitted<br />\nmake[2]: *** [tools/lto/CMakeFiles/LTO.dir/build.make:168: lib/libLTO.so.16git] Error 1<br />\nmake[2]: *** Deleting file &#039;lib/libLTO.so.16git&#039;<br />\nmake[1]: *** [CMakeFiles/Makefile2:17719: tools/lto/CMakeFiles/LTO.dir/all] Error 2<br />\nmake: *** [Makefile:152: all] Error 2<br />\nBuild failed due to exception!</div>\nInstead of reformatting my external drive, I created a very large disk image on it which I formatted as ext4:<br />\n<div id='code'># 200GB image - I think this is overkill but I wasn&#039;t willing to fail because of insufficient disk space<br />\n# Some guides suggest using the fallocate command to create a disk image but I found that command does not work when writing to an exfat drive<br />\ndd if=/dev/zero of=image.iso bs=1G count=200<br />\n<br />\n# Format the image ext4<br />\nmkfs.ext4 -j image.iso</div>\nThen I mounted the disk image and gave the pi user full ownership:<br />\n<div id='code'>cd /media/<br />\nsudo mkdir emscripten-disk<br />\nsudo mount /path/to/image.iso emscripten-disk<br />\ncd emscripten-disk<br />\nsudo chown -R pi:pi .</div>\nWithin that directory, I ran this:<br />\n<div id='code'>git clone https://github.com/emscripten-core/emsdk.git<br />\ncd emsdk<br />\n./emsdk install sdk-upstream-main-32bit -j1</div>\nThe \"-j1\" argument forces the build to use only one CPU. When I originally attempted to install without that argument, the build failed with very little feedback. Just this generic error, no specific compiler errors:<br />\n<div id='code'>Error 2<br />\nBuild failed due to exception!</div>\nI think this is caused by the machine running out of memory (or maybe some other kind of compiler crash).<br />\n<br />\nOf course, building with only one CPU makes this whole process take much longer. It took ~16 hours for everything to build.<br />\n<br />\nWhen the build completes, run this:<br />\n<div id='code'>./emsdk activate sdk-upstream-main-32bit</div>\nPay attention to the output of that command because it tells you how to add the right directories to PATH for emcc to be found.<br />\n<br />\nAfter all that, following the <a href=\"https://emscripten.org/docs/getting_started/Tutorial.html#tutorial\">official tutorial</a>, I created hello_world.c and tested the compiler:<br />\n<div id='code'>emcc hello_world.c<br />\nnode a.out.js</div>\nAnd I got this error:<br />\n<div id='code'>/path/to/a.out.js:144<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw ex;<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;^<br />\nReferenceError: globalThis is not defined</div>\nThis is because Buster's version of nodejs is 10.24.0, a version before globalThis is supported.<br />\n<br />\nThis command did produce hello.html which worked as expected in my browser:<br />\n<div id='code'>emcc hello_world.c -o hello.html</div>\nTo get node working, I needed to update my Raspberry Pi to Bullseye (Debian 11). I followed <a href=\"https://raspberrytips.com/update-raspberry-pi-latest-version/\">this guide</a>.<br />\n<br />\nThis was an arduous process of running apt-get update, apt-get upgrade, rebooting, manually editing /etc/apt/sources.list, apt-get update, apt-get upgrade, rebooting, apt-get update, apt-get upgrade, apt-get install nodejs, babysitting all of these commands because some of them require user input, losing SSH access as a result of some updates (make sure to run these commands inside screen or tmux!), physically accessing the device to restart sshd, etc.<br />\n<br />\nFinally at the end of it, this command worked:<br />\n<div id='code'>node a.out.js<br />\n(output) Hello, world!</div>\nHopefully these steps work for you!<br />\n<br />\n<br />\n<h3>Other Useful Info</h3><br />\nIf at any point you need to clean build, you can do this:<br />\n<div id='code'>rm -rf llvm/git/build_main_32</div>\nI had to do this once when figuring out the workaround for the exfat symlink issue. If you change the directory emsdk is running in between attempts, the build scripts will not let you pick up where you left off.<br />\n<br />\n<br />\nHere's what got me up to the compiling phase in the iSH app on iPad:<br />\n<br />\napk add cmake<br />\napk add make<br />\napk add clang<br />\napk add binutils<br />\napk add libc-dev<br />\napk add gcc<br />\napk add libstdc++6<br />\napk add g++<br />\ngit clone https://github.com/emscripten-core/emsdk.git<br />\ncd emsdk<br />\n./emsdk install sdk-upstream-master-32bit<br />\n(note that this will take HOURS to clone LLVM)<br />\nProgress compiling got to 2% and then iSH crashes.<br />\n<br />\n(I filed an <a href=\"https://github.com/ish-app/ish/issues/2016\">issue</a>.)\n</div>\n"
    },
    {
         "title" : "Simplify Picking a Restaurant",
         "date_published" : "2022-11-22T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/simplify-picking-restaurant.html",
         "url" : "https://memalign.github.io/p/simplify-picking-restaurant.html",
         "image" : "https://memalign.github.io/m/food-sheet.png",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/simplify-picking-restaurant.html'>Simplify Picking a Restaurant</a>\n</h2>\n</div>\n<img src=\"/m/food-sheet.png\">\n<div id='postdate'>Posted on 11/22/2022<br />\nTags: <a href='/tags.html'>Food</a>, <a href='/tags.html'>Parenting</a>, <a href='/tags.html'>Tools</a></div>\nWith a toddler at home, we've come to rely on DoorDash as a quick way for the adults to eat tasty food.<br />\n<br />\nWe're lucky to live in an area densely packed with restaurants. Despite the wealth of options, we often struggle to choose when dinnertime arrives.<br />\n<br />\nMy spouse and I will end up naming restaurants, taking turns rejecting options one-by-one. On some days, nothing sounds good. On some days, we're exhausted from a night of interrupted sleep and lack the energy to pick. Often both.<br />\n<br />\nI got the idea to make picking a restaurant more mechanical on the hard days.<br />\n<br />\nAt first, I considered building a web app with a database and a nice UI for listing restaurants and saving our history. I spend most of my non-work hours taking care of the baby, exercising, or doing chores so even a simple side-project takes months and comes at the cost of precious sleep hours. I needed a lower-effort way to test the idea.<br />\n<br />\nI realized I could make this tool in a shared spreadsheet. I used Numbers on iPhone/iPad and shared the sheet with my spouse using iCloud. Google Sheets could've worked too. Spreadsheets are a great low-effort way to solve problems without writing code. I bet a lot of software engineers underutilize spreadsheets.<br />\n<br />\nHere's how it works:<br />\n- Add a row for every restaurant<br />\n- Have a column for the last time we ate there<br />\n- Have a column for each person with an estimate of how often they are willing to eat at each particular restaurant<br />\n- Have a column to note any restaurants someone is actively in the mood to eat at<br />\n- The sheet calculates a recommendation for each row:<br />\n&nbsp;&nbsp;&nbsp;&nbsp;- Too soon: neither person is ready to eat there again<br />\n&nbsp;&nbsp;&nbsp;&nbsp;- Let's eat (green): both people are ready OR someone is in the mood<br />\n&nbsp;&nbsp;&nbsp;&nbsp;- Maybe eat (yellow): one person is ready<br />\n- At dinnertime, peruse the green and yellow rows to pick efficiently<br />\n<br />\nGrab my <a href=\"/m/Food-Example.numbers\">example sheet</a> to create your own.\n</div>\n"
    },
    {
         "title" : "Trippy Art",
         "date_published" : "2022-11-20T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/trippy-art.html",
         "url" : "https://memalign.github.io/p/trippy-art.html",
         "image" : "https://memalign.github.io/m/trippyart/doorway.png",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/trippy-art.html'>Trippy Art</a>\n</h2>\n</div>\n<img src=\"/m/trippyart/doorway.png\">\n<div id='postdate'>Posted on 11/20/2022<br />\nTags: <a href='/tags.html'>Art</a></div>\nHere's a collection of trippy art from various corners of the internet. Some is generated with the help of neural networks. Some is human-made.<br />\n<br />\n<h4><a href=\"https://memalign.github.io/p/trippy-art.html\">View the collection</a></h4>\n</div>\n"
    },
    {
         "title" : "Tap Toy",
         "date_published" : "2022-05-30T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/taptoy.html",
         "url" : "https://memalign.github.io/p/taptoy.html",
         "image" : "https://memalign.github.io/m/taptoy/taptoy.jpg",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/taptoy.html'>Tap Toy</a>\n</h2>\n</div>\n<img src=\"/m/taptoy/taptoy.jpg\">\n<div id='postdate'>Posted on 5/30/2022<br />\nTags: <a href='/tags.html'>Programming</a>, <a href='/tags.html'>Art</a>, <a href='/tags.html'>Games</a></div>\nIntroducing my latest project: <a href=\"/m/taptoy/index.html\">Tap Toy</a><br />\n<br />\nTap Toy is a fun little web app for relaxation. Tap the screen to launch some characters which then bounce off each other. Turn on sound for satisfying sound effects and relaxing public-domain background music. In some ways, I think this toy brings the catharsis of popping bubble wrap to your touch screen.<br />\n<br />\nI got the idea for this project after watching my then-9-month-old's fascination with my iPhone and iPad. Note that the CDC guidelines recommend \"no screen time for children younger than 2 years\" (<a href=\"https://www.cdc.gov/obesity/downloads/15_256312-A_May_LicensingDocument_Final_508_508tagged.pdf\">source</a>, <a href=\"/m/cdc_screentime.pdf\">backup</a>) but these kids will still find a way to grab your device for a fleeting moment before you take it back.<br />\n<br />\nI wondered if I could make an app to soothe and distract our baby if we ever became truly desperate for a moment of peace. (Fortunately, we still haven't reached this point yet!)<br />\n<br />\nI modeled some of the behavior after <a href=\"https://www.amazon.com/Baby-Einstein-Along-Tunes-Musical/dp/B000YDDF6O\">Baby Einstein Take Along Tunes</a>, one of the more pleasant sound-making toys we have:<br />\n<br />\n<img src=\"/m/babyeinsteintunes.jpg\"><br />\nThe result, as my wife described it, is \"crack\". She was having a bad day when Tap Toy was first ready to play with and she ended up zoning out, addicted, tapping it for 30 minutes while some of her stress melted away.<br />\n<br />\nAs is usual for me, this side-project is a remix of a few other projects:<br />\n<br />\n- <a href=\"http://magickeyboard.io\">MagicKeyboard.io</a> (<a href=\"/m/magickeyboard/index.html\">backup</a>, <a href=\"https://github.com/feross/magickeyboard.io\">source</a>) by <a href=\"http://feross.org\">Feross Aboukhadijeh</a><br />\n&nbsp;&nbsp;&nbsp;&nbsp;- Which in turn is inspired by a <a href=\"https://www.reddit.com/r/gifs/comments/3t5ssx/magic_keyboard/\">reddit post</a> about this <a href=\"https://momentfactory.com/lab/keyboard-magic\">art project</a> by Moment Factory<br />\n&nbsp;&nbsp;&nbsp;&nbsp;- In fact, I kept the keyboard triggers to launch sprites from the right location along the bottom of the screen<br />\n&nbsp;&nbsp;&nbsp;&nbsp;- I fixed the sound effect code and added background music<br />\n&nbsp;&nbsp;&nbsp;&nbsp;- I also added real multi-touch and mouse support<br />\n<br />\n- <a href=\"/p/pceimage.html\">PCEImage</a> (note that the Koffing, Pikachu in Tap Toy show up in <a href=\"/m/pceimage/index.html\">PCEImage Editor</a>'s list of examples)<br />\n<br />\nSome tips:<br />\n<br />\n- You can add this web page to your home screen on iOS or Android. If you do that, it'll behave more like a normal app. (I did the extra bit of work to make this a \"progressive web app\")<br />\n<br />\n- If you give this to a kid, you can use <a href=\"https://support.apple.com/en-us/HT202612\">Guided Access</a> to prevent them from leaving the app<br />\n<br />\nAn idea to take this further:<br />\n<br />\n- Holiday-themed Tap Toys: Halloween, Thanksgiving, Christmas, Chanukah, New Year's Eve, etc<br />\n\n</div>\n"
    },
    {
         "title" : "PCEImage Editor",
         "date_published" : "2022-02-13T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/pceimage-editor.html",
         "url" : "https://memalign.github.io/p/pceimage-editor.html",
         "image" : "https://memalign.github.io/m/pceimage/koffing-code.png",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/pceimage-editor.html'>PCEImage Editor</a>\n</h2>\n</div>\n<img src=\"/m/pceimage/koffing-code.png\">\n<div id='postdate'>Posted on 2/13/2022<br />\nTags: <a href='/tags.html'>Programming</a>, <a href='/tags.html'>Art</a>, <a href='/tags.html'>Tools</a></div>\nAfter defining the <a href=\"/p/pceimage.html\">PCEImage specification</a>, I wanted to create a great code editor that can color each character in the image.<br />\n<br />\n<a href=\"/m/pceimage/index.html\">Try out the editor in your browser</a> or read on for more details.<br />\n<br />\nI was inspired by the <a href=\"https://www.puzzlescript.net/editor.html?hack=6994394\">PuzzleScript editor</a> (mentioned in my <a href=\"/p/puzzlescript.html\">post about PuzzleScript</a>), especially how sprites are defined and styled. Whereas PuzzleScript sprites use <a href=\"https://en.wikipedia.org/wiki/Indexed_color\">indexed color</a>, PCEImage can use almost any ASCII character as a pixel so I couldn't just reuse the same editor.<br />\n<br />\nI could reuse the same foundations, though! PuzzleScript's editor is built using <a href=\"https://codemirror.net/\">CodeMirror</a>, an open-source text editor implemented in JavaScript for the browser.<br />\n<br />\nCodeMirror is super customizable and I was able to add the coloring support I needed by writing a <a href=\"/m/pceimage/editor/parser.js\">parser</a> and making some changes to <a href=\"/m/pceimage/editor/codemirror.js\">codemirror.js</a>.<br />\n<br />\nI also added support to the editor to automatically generate PNGs and, to add a little fun, wobbling GIFs.<br />\n<br />\n<img src=\"/m/pceimage/koffing.gif\"><br />\nFor the wobble effect, I was inspired by <a href=\"https://www.lexaloffle.com/bbs/?tid=40058\">Wobblepaint</a> (mentioned in my <a href=\"/p/pico8.html\">PICO-8 post</a>) and did my best to try to capture the same organic and charming wobble <a href=\"https://www.lexaloffle.com/bbs/?uid=1\">zep</a> invented.<br />\n<br />\nI also included some \"Color Utilites\" on the editor page: a simple color picker, a button to invoke your system color picker, and some example palettes (including PICO-8's). Check out <a href=\"https://lospec.com/palette-list\">Lospec's Palette List</a> for even more ideas.<br />\n<br />\nIf you create any cool PCEImages, I hope you'll consider <a href=\"https://github.com/memalign/memalign.github.io/edit/master/m/pceimage/Images.js\">submitting a pull request</a> to add your example! I'll find some way to credit the submitters on the page if I get any!<br />\n\n</div>\n"
    },
    {
         "title" : "PCEImage",
         "date_published" : "2022-02-13T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/pceimage.html",
         "url" : "https://memalign.github.io/p/pceimage.html",
         "image" : "https://memalign.github.io/m/pceimage/koffing.gif",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/pceimage.html'>PCEImage</a>\n</h2>\n</div>\n<img src=\"/m/pceimage/koffing.gif\">\n<div id='postdate'>Posted on 2/13/2022<br />\nTags: <a href='/tags.html'>Programming</a>, <a href='/tags.html'>Art</a></div>\nI recently needed to make pixel art for a game and wanted to define the images in code rather than having separate image asset files.<br />\n<br />\nDefining the images in code comes with some benefits:<br />\n- I don't need separate versions of the images for different resolutions. I can easily scale them up automatically.<br />\n- I can easily slice the <a href=\"https://en.wikipedia.org/wiki/Sprite_(computer_graphics)\">sprites</a> to animate them programmatically<br />\n- I can make minor tweaks with a text editor (my tool of choice! I am much more at home in a text editor than image editing software)<br />\n- I get useful diffs when changing images in <a href=\"/p/source-control.html\">source control</a><br />\n<br />\nTo achieve this, I created a simple format I'm calling \"PCEImage\" (which is short for \"Pixel-Character Encoded Image\"). Here's what it looks like:<br />\n<br />\n<div id='code'>.:#00000000<br />\n@:#444444<br />\n#:#5555FF<br />\n<br />\n.......<br />\n.@.@...<br />\n.@.@...<br />\n.@.@...<br />\n.@@@.#.<br />\n.@.@...<br />\n.@.@.#.<br />\n.@.@.#.<br />\n.@.@.#.<br />\n.......</div>\nHere's that image as a PNG (drawn with scale 10):<br />\n<img src=\"/m/pceimage/hi.png\">A neat benefit of this encoding is that the images are also ASCII art -- it's easy to see what a PCEImage looks like even without coloring. In fact, this format is a combination of ASCII art and <a href=\"https://en.wikipedia.org/wiki/Indexed_color\">indexed color</a>.<br />\n<br />\n<br />\n<h3>PCEImage Format Specification</h3><br />\nThe first section of a PCEImage defines what color each character represents. Each line in this section looks like: CHARACTER:HEXCOLOR<br />\nThen there's one blank line.<br />\nThen the second section is the image itself. Every character in this section (except for the newline at the end of each line) represents a pixel in the image. Every line in this section should be the same length (the width of the image).<br />\nThere should not be a newline character after the last pixel character on the last line.<br />\n<br />\n<br />\n<h3>PCEImage Reference Implementation</h3><br />\nI wrote a reference implementation of this specification in JavaScript <a href=\"/m/pceimage/PCEImage.js\">here</a>.<br />\n<br />\nI had a little fun and also added a wobble mode (similar to <a href=\"https://www.lexaloffle.com/bbs/?tid=40058\">Wobblepaint</a>, mentioned in my <a href=\"/p/pico8.html\">PICO-8 post</a>).<br />\n<br />\nSee it in action in my <a href=\"/m/pceimage/index.html\">PCEImage Editor</a>.<br />\n<br />\nRead more about the editor <a href=\"/p/pceimage-editor.html\">here</a>.<br />\n<br />\nRelated: <a href=\"https://en.wikipedia.org/wiki/X_PixMap\">The X PixMap (XPM) format</a>.<br />\n\n</div>\n"
    },
    {
         "title" : "My Beatles Picks",
         "date_published" : "2022-02-10T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/beatles.html",
         "url" : "https://memalign.github.io/p/beatles.html",
         "image" : "https://memalign.github.io/m/applerecords.jpg",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/beatles.html'>My Beatles Picks</a>\n</h2>\n</div>\n<img src=\"/m/applerecords.jpg\">\n<div id='postdate'>Posted on 2/10/2022<br />\nTags: <a href='/tags.html'>Music</a></div>\nI've had the Beatles on my mind recently thanks to the buzz around Peter Jackson's \"<a href=\"https://en.wikipedia.org/wiki/The_Beatles:_Get_Back\">The Beatles: Get Back</a>\" documentary.<br />\n<br />\nI grew up long after the Beatles had broken up and I had never listened to a full Beatles album despite liking a lot of their songs. I decided to listen to every album in order, looking up interesting details about the albums and songs on Wikipedia along the way. (I wish there were more <a href=\"https://en.wikipedia.org/wiki/Pop-Up_Video\">pop-up videos</a>!)<br />\n<br />\nI now have a lot more appreciation for the Beatles members as people, how hard-working they were, and how their music evolved.<br />\n<br />\nHere are my Beatles picks (in no particular order). Many of these songs are so popular that I already knew them; others I heard for the first time during this listen-through. I left off some songs (Hey Jude, Lucy in the Sky With Diamonds, and many more) that are objectively good but that I don't like enough to consider \"my picks\". Some of these songs are funny (such as Norwegian Wood, Michelle, Girl (how a pained John Lennon sucks in air through his teeth), Getting Better), some are just fun, and others are among the most beautiful songs I've ever heard.<br />\n<br />\n- In My Life<br />\n- Here Comes the Sun<br />\n- Something<br />\n- All My Loving<br />\n- Love Me Do<br />\n- Please Please Me<br />\n- I'm So Tired<br />\n- Dear Prudence<br />\n- While My Guitar Gently Weeps<br />\n- You Never Give Me Your Money<br />\n- And I Love Her<br />\n- Eight Days a Week<br />\n- Help!<br />\n- The Night Before<br />\n- Yesterday<br />\n- You've Got to Hide Your Love Away<br />\n- Drive My Car<br />\n- Norwegian Wood<br />\n- The Word<br />\n- Michelle<br />\n- Girl<br />\n- Eleanor Rigby<br />\n- Sgt. Pepper's Lonely Hearts Club Band<br />\n- With a Little Help From My Friends<br />\n- Lucy In the Sky with Diamonds<br />\n- Getting Better<br />\n- Fixing a Hole<br />\n- Lovely Rita<br />\n- I Am the Walrus<br />\n- Strawberry Fields Forever<br />\n- Penny Lane<br />\n- The Continuing Story of Bungalow Bill<br />\n- Sexy Sadie<br />\n- I Want You (She's So Heavy)<br />\n- Because<br />\n- Across the Universe<br />\n- A Day In The Life (the version from \"The Beatles / 1967-1970\"; the original has creepy audio at the end that's not pleasant in a playlist)<br />\n<br />\nPost-Beatles honorable mentions:<br />\n<br />\n- John Lennon - How Do You Sleep?<br />\n- John Lennon - Jealous Guy<br />\n- Paul McCartney - Maybe I'm Amazed<br />\n- Paul McCartney & Michael Jackson - Say Say Say<br />\n- Paul McCartney & Wings - Live and Let Die<br />\n- Paul McCartney & Kanye West - Only One<br />\n- Rihanna & Kanye West & Paul McCartney - FourFiveSeconds<br />\n- George Harrison - My Sweet Lord<br />\n- George Harrison - Got My Mind Set On You<br />\n- George Harrison - Marwa Blues<br />\n- Traveling Wilburys - Handle with Care<br />\n<br />\nI also watched the movies <a href=\"https://en.wikipedia.org/wiki/Yesterday_(2019_film)\">Yesterday</a> and <a href=\"https://en.wikipedia.org/wiki/Across_the_Universe_(film)\">Across the Universe</a> and enjoyed them more than I could've if I hadn't heard these albums and learned some of the history beforehand.<br />\n\n</div>\n"
    },
    {
         "title" : "SoundsJustLike",
         "date_published" : "2021-12-26T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/soundsjustlike.html",
         "url" : "https://memalign.github.io/p/soundsjustlike.html",
         "image" : "https://memalign.github.io/m/appleheadphones.png",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/soundsjustlike.html'>SoundsJustLike</a>\n</h2>\n</div>\n<img src=\"/m/appleheadphones.png\">\n<div id='postdate'>Posted on 12/26/2021<br />\nTags: <a href='/tags.html'>Music</a></div>\nI still enjoy <a href=\"/p/similar-songs.html\">finding songs that sound similar</a>.<br />\n<br />\nI recently listened to <a href=\"https://www.youtube.com/watch?v=wQA59IkCF5I\">Dear Prudence</a> by The Beatles and could've sworn I had heard the chord progression somewhere before. I searched online and found that I probably heard it in <a href=\"https://www.youtube.com/watch?v=eAfyFTzZDMM\">Beautiful</a> by Christina Aguilera. The website that gave me this connection is <a href=\"https://www.soundsjustlike.com/\">SoundsJustLike.com</a>.<br />\n<br />\nSoundsJustLike.com is pretty cool with a long list of user-submitted song connections. Unfortunately, it's hard to search for a specific song. To make it easier, I created <a href=\"/m/similarsongs.html\">this one-page snapshot</a> of all the songs users have submitted.<br />\n<br />\nThere are a lot of great songs on there to explore!<br />\n\n</div>\n"
    },
    {
         "title" : "PuzzleScript",
         "date_published" : "2021-12-24T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/puzzlescript.html",
         "url" : "https://memalign.github.io/p/puzzlescript.html",
         "image" : "https://memalign.github.io/m/puzzlescript/atlasshrank/atlasshrank.gif",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/puzzlescript.html'>PuzzleScript</a>\n</h2>\n</div>\n<img src=\"/m/puzzlescript/atlasshrank/atlasshrank.gif\">\n<div id='postdate'>Posted on 12/24/2021<br />\nTags: <a href='/tags.html'>Games</a>, <a href='/tags.html'>Programming</a></div>\n<a href=\"https://www.puzzlescript.net/\">PuzzleScript</a> is a way to make tile-based games that run on the web. It was <a href=\"https://www.puzzlescript.net/Documentation/about.html\">created</a> by <a href=\"https://www.increpare.com/\">increpare</a>.<br />\n<br />\nAn interesting tidbit from the <a href=\"https://www.puzzlescript.net/Documentation/credits.html\">credits</a> page: PuzzleScript's creator is/was flatmates with <a href=\"https://terrycavanaghgames.com/\">Terry Cavanagh</a>, who made a bunch of popular and creative games: <a href=\"http://thelettervsixtim.es/\">VVVVVV</a>, <a href=\"http://superhexagon.com/\">Super Hexagon</a>, and (my favorite) <a href=\"https://apps.apple.com/us/app/dont-look-back/id568668228\">Don't Look Back</a>.<br />\n<br />\nThe PuzzleScript games I've seen usually have <a href=\"https://en.wikipedia.org/wiki/Sokoban\">Sokoban</a> elements: pushing/moving crates to solve puzzles. The wrong moves can make a level unbeatable so another core element of PuzzleScript games is unlimited undo by pressing 'z'. Explore the <a href=\"https://www.puzzlescript.net/Gallery/index.html\">gallery</a> and check out increpare's <a href=\"https://www.increpare.com/\">portfolio of games</a>.<br />\n<br />\n<h3>Notable Games</h3><br />\n<br />\n<a href=\"https://www.puzzlescript.net/play.html?p=d210a5248fa713153950\"><img src=\"/m/puzzlescript/sokoboros/sokoboros.gif\"></a><br />\n<h4><a href=\"https://www.puzzlescript.net/play.html?p=d210a5248fa713153950\">Sokoboros</a></h4> (<a href=\"/m/puzzlescript/sokoboros/index.html\">backup</a>)<br />\nI enjoyed this game the most. Sokoboros combines elements of Sokoban and <a href=\"https://en.wikipedia.org/wiki/Snake_(video_game_genre)\">Snake</a>. The game's name is a clever pun that combines \"Sokoban\" and \"<a href=\"https://en.wikipedia.org/wiki/Ouroboros\">Ouroboros</a>\"!<br />\n<br />\n<br />\n<a href=\"https://www.puzzlescript.net/play.html?p=6994394\"><img src=\"/m/puzzlescript/atlasshrank/atlasshrank.gif\"></a><br />\n<h4><a href=\"https://www.puzzlescript.net/play.html?p=6994394\">Atlas Shrank</a></h4> (<a href=\"/m/puzzlescript/atlasshrank/index.html\">backup</a>)<br />\nI enjoyed this game where you play as the Greek Titan <a href=\"https://en.wikipedia.org/wiki/Atlas_(mythology)\">Atlas</a> who has been shrunken down and needs to escape a series increasingly complex of rooms.<br />\n<br />\n<br />\n<a href=\"https://www.puzzlescript.net/play.html?p=6880313\"><img src=\"/m/puzzlescript/legendofzokoban/legendofzokoban.gif\"></a><br />\n<h4><a href=\"https://www.puzzlescript.net/play.html?p=6880313\">Legend of Zokoban</a></h4> (<a href=\"/m/puzzlescript/legendofzokoban/index.html\">backup</a>)<br />\nThis <a href=\"https://pixelverse.org/files/06c9d85eae32d864c4788e40a1882614-10.html\">Zelda-inspired</a> game is made by <a href=\"https://pixelverse.org/\">Joshua Minor</a>. Joshua's <a href=\"http://twitter.com/jminor\">twitter</a> feed has led me to many interesting projects and ideas, including PuzzleScript and <a href=\"/p/pico8.html\">PICO-8</a>! If not for him, these posts wouldn't exist. According to <a href=\"https://www.linkedin.com/in/joshua-minor-972851\">LinkedIn</a>, Joshua's been an engineer at Pixar for 21 years at the time of writing. How cool!<br />\n<br />\n<br />\n<a href=\"https://www.puzzlescript.net/play.html?p=11358856\"><img src=\"/m/puzzlescript/collapse/collapse.gif\"></a><br />\n<h4><a href=\"https://www.puzzlescript.net/play.html?p=11358856\">Collapse</a></h4> (<a href=\"/m/puzzlescript/collapse/index.html\">backup</a>)<br />\nTerry Cavanagh made this game. I'm reminded slightly of <a href=\"https://apps.apple.com/us/app/dont-look-back/id568668228\">Don't Look Back</a>: the main character is navigating a hellish and dangerous world to retrieve something beautiful.<br />\n<br />\n<br />\n<a href=\"https://www.puzzlescript.net/play.html?p=6846450\"><img src=\"/m/puzzlescript/loveandpieces/loveandpieces.gif\"></a><br />\n<h4><a href=\"https://www.puzzlescript.net/play.html?p=6846450\">Love and Pieces</a></h4> (<a href=\"/m/puzzlescript/loveandpieces/index.html\">backup</a>)<br />\nLove and Pieces is made by Lexaloffle / Zep, the creator of <a href=\"/p/pico8.html\">PICO-8</a>!<br />\n<br />\n<br />\n<h3>Some Technical Details</h3><br />\n<br />\nPuzzleScript <a href=\"https://github.com/increpare/PuzzleScript\">source code</a> (<a href=\"/m/puzzlescript/puzzlescript.zip\">backup</a>) reveals some cool details:<br />\n- PuzzleScript has its own web-based <a href=\"https://www.puzzlescript.net/editor.html?hack=6994394\">code editor</a>. I particularly like how it displays colors for the sprite pixels defined in text.<br />\n- Instead of hosting its own database of games, it integrates with GitHub's gist API. Every game is just stored in a gist in a user's GitHub account. For example, Atlas Shrank's gist is <a href=\"https://api.github.com/gists/6994394\">here</a>. This is an interesting and clever way to avoid hosting your own server.<br />\n&nbsp;&nbsp;- The code to post a new gist can be found in the shareClick function <a href=\"https://github.com/increpare/PuzzleScript/blob/master/src/js/toolbar.js\">here</a>.<br />\n&nbsp;&nbsp;- The code to load a gist can be found in the getData function <a href=\"https://github.com/increpare/PuzzleScript/blob/master/src/play.html\">here</a>.<br />\n&nbsp;&nbsp;- play.html loads whatever gist id is appended to the url (which looks like: <a href=\"https://www.puzzlescript.net/play.html?p=6994394\">https://www.puzzlescript.net/play.html?p=6994394</a>)<br />\n&nbsp;&nbsp;- I think there's a risk loading content this way: it could look like the website owner published content when really it was published by someone else. The content could be offensive or harmful. To mitigate this, if I use this technique in a project I will probably show a disclaimer on the website that this content is from an external user with a direct link to that user's gist.\n</div>\n"
    },
    {
         "title" : "Wheat Chex",
         "date_published" : "2021-12-19T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/wheat-chex.html",
         "url" : "https://memalign.github.io/p/wheat-chex.html",
         "image" : "https://memalign.github.io/m/wheat-chex.jpg",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/wheat-chex.html'>Wheat Chex</a>\n</h2>\n</div>\n<img src=\"/m/wheat-chex.jpg\">\n<div id='postdate'>Posted on 12/19/2021<br />\nTags: <a href='/tags.html'>Food</a></div>\nThe Chex cereal pieces in official store-bought Chex Mix are not the same as the pieces you get in cereal boxes!<br />\n<br />\nJust take a look at the photo above. The Wheat Chex on the left is from a bag of Chex Mix. The Wheat Chex on the right is from a cereal box.<br />\n<br />\nNotice how the cereal box one is flatter, denser, has little rectangular holes instead of little square ones.<br />\n<br />\nThe taste and texture of the Chex are different too. The one from the Chex Mix tastes better and has a more pleasant crunch.<br />\n<br />\nOne may be optimized for delicious dry snackiness while the other is optimized for being eaten in milk.<br />\n<br />\nIt's interesting to know we can't replicate store-bought Chex Mix at home because the Chex we can buy make for an inferior snack!\n</div>\n"
    },
    {
         "title" : "PICO-8",
         "date_published" : "2021-12-12T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/pico8.html",
         "url" : "https://memalign.github.io/p/pico8.html",
         "image" : "https://memalign.github.io/m/pico8/celeste/celesterevenge1.gif",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/pico8.html'>PICO-8</a>\n</h2>\n</div>\n<img src=\"/m/pico8/celeste/celesterevenge1.gif\">\n<div id='postdate'>Posted on 12/12/2021<br />\nTags: <a href='/tags.html'>Games</a></div>\n<a href=\"https://www.lexaloffle.com/pico-8.php\">PICO-8</a> is a way to make \"retro\"-style games and then play them anywhere, including on the web.<br />\n<br />\nPICO-8 initially caught my eye with a few beautiful pixelated games and graphics. Just look at the delightful screen capture of <a href=\"https://www.lexaloffle.com/bbs/?tid=2145\">Celeste</a> above.<br />\n<br />\nHere's what I love about this platform:<br />\n<br />\n- Thanks to web technologies, these games can be played anywhere. They work great on touchscreens on iOS and Android. They work great with keyboard and mouse.<br />\n<br />\n- I love the aesthetic of these games: the low resolution, the 16-color palette. It's inspiring to see how expressive people have been despite (and thanks to) these limitations.<br />\n<br />\n- Another limitation is code size. This usually means the games are bite-sized and can be played and beaten in a sitting.<br />\n<br />\n- These limitations are chosen on purpose and are part of the magic. From the <a href=\"https://www.lexaloffle.com/info.php\">about</a> page for PICO-8's website: \"Lexaloffle is the home of computer games and fantasy consoles made by <a href=\"https://www.lexaloffle.com/bbs/?uid=1\">Joseph White</a>, whose principle mission is to seek out and explore mathematically cute sets of rules that somehow give rise to thematically cute game worlds.\"<br />\n<br />\n- My taste in games is trapped in the past, probably the SNES era. Even though SNES was slightly before my time, I've had a blast playing those games. In comparison, games that push the limits of today's hardware are impressive but they are too complex for me. What truly brings me joy are simple \"retro\"-style games.<br />\n<br />\n- PICO-8 introduced me to the concept of a game \"<a href=\"https://en.wikipedia.org/wiki/Video_game_remake#Demakes\">demake</a>\". When creating a demake, people boil a game down to its essence. They create a game with the same feel or personality as the original game but smaller and much simpler, usually with simpler graphics. My favorite right now is <a href=\"https://www.lexaloffle.com/bbs/?tid=29590\">Picopolis</a>, a demake of Sim City.<br />\n<br />\n- PICO-8 games are distributed as PNG \"virtual cartridges\" with the code embedded in the cartridge image itself. The images look like the physical game cartridges of the 1980s and 90s. How delightful! You can see examples below.<br />\n<br />\n- The creator of PICO-8, <a href=\"https://www.lexaloffle.com/bbs/?uid=1\">Joseph White</a> aka \"zep\" (<a href=\"https://twitter.com/lexaloffle\">twitter</a>), is a prolific software developer. He came up with the idea for PICO-8 and then built all of the development tools for editing code, music, sound effects, graphics, etc. In addition to creating PICO-8, he also built the BBS website where users post, comment on, and collaborate on games. The community is very creative and positive. He's made his own games such as <a href=\"https://www.lexaloffle.com/bbs/?tid=40058\">Wobblepaint</a>. He has other projects too, which you can learn about on <a href=\"https://www.lexaloffle.com/\">lexaloffle.com</a>.<br />\n<br />\nLearn more about PICO-8:<br />\n<br />\n- <a href=\"https://en.wikipedia.org/wiki/PICO-8\">PICO-8</a> on Wikipedia<br />\n- Official <a href=\"https://www.lexaloffle.com/pico-8.php?page=faq\">FAQ</a><br />\n- <a href=\"https://www.lexaloffle.com/bbs/?cat=7&carts_tab=1&#sub=2&mode=carts&orderby=featured\">Featured cartridges</a><br />\n- <a href=\"https://www.lexaloffle.com/bbs/?cat=7#sub=2\">Cartridge BBS</a><br />\n<br />\nHere are some of my favorite games so far:<br />\n<br />\n<h3>Demakes and Remakes</h3><br />\n<br />\n<a href=\"https://www.lexaloffle.com/bbs/?tid=29590\"><img src=\"/m/pico8/picopolis/42427.p8.png\"></a><br />\n<h4><a href=\"https://www.lexaloffle.com/bbs/?tid=29590\">Picopolis</a></h4> (<a href=\"/m/pico8/picopolis/index.html\">backup</a>)<br />\nDemake of Sim City. Usually Sim City has no win condition and I like how the author gave us some way to declare victory: by building a $10 million \"Victory Monument\". Playing this scratched the itch I had to play classic Sim City. Picopolis is made by <a href=\"https://en.wikipedia.org/wiki/Jens_Bergensten\">Jens Bergensten</a> (aka Jeb) who's best known for significant contributions to Minecraft.<br />\n<br />\n<br />\n<a href=\"https://www.lexaloffle.com/bbs/?pid=mb_advent2019\"><img src=\"/m/pico8/snowfight/mb_advent2019-2.p8.png\"></a><br />\n<h4><a href=\"https://www.lexaloffle.com/bbs/?pid=mb_advent2019\">Snowfight</a></h4> (<a href=\"/m/pico8/snowfight/index.html\">backup</a>)<br />\nThis is a remake of an old Flash game winter holidays greeting card. Even the same winning strategy works as it did on the original game. Major nostalgic fun :)<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />\n<br />\n<a href=\"https://www.lexaloffle.com/bbs/?pid=97365\"><img src=\"/m/pico8/sonic16x16/8JwsJq.gif\"></a><br />\n<h4><a href=\"https://www.lexaloffle.com/bbs/?pid=97365\">Sonic16x16</a></h4> (<a href=\"/m/pico8/sonic16x16/index.html\">backup</a>)<br />\nI love this! Great example of a demake. Sonic is only 2 pixels and yet anyone who's played a side-scrolling Sonic game will recognize the feel of the game, the music, and the iconic <a href=\"https://en.wikipedia.org/wiki/Green_Hill_Zone\">Green Hill Zone</a>.<br />\n<br />\n<br />\n<a href=\"https://www.lexaloffle.com/bbs/?pid=98070\"><img src=\"/m/pico8/rtype/rtype-2.p8.png\"></a><br />\n<h4><a href=\"https://www.lexaloffle.com/bbs/?pid=98070\">R-Type</a></h4> (<a href=\"/m/pico8/rtype/index.html\">backup</a>)<br />\nIntensely challenging remake of the classic side-scrolling shoot'em up game. Fortunately there's a cheat mode! <br />\n&nbsp;&nbsp;<br />\n<br />\n<a href=\"https://www.lexaloffle.com/bbs/?pid=11437\"><img src=\"/m/pico8/picoman/22937.p8.png\"></a><br />\n<h4><a href=\"https://www.lexaloffle.com/bbs/?pid=11437\">Pico-Man</a></h4> (<a href=\"/m/pico8/picoman/index.html\">backup</a>)<br />\nA clone of Pac-Man. Thoroughly enjoyable just like the original. One user commented, \"more proof that games just look cuter on the PICO :3\".<br />\n<br />\n<br />\n<a href=\"https://pahammond.itch.io/phoenix\"><img src=\"/m/pico8/phoenix/phoenix08-0.p8.png\"></a><br />\n<h4><a href=\"https://pahammond.itch.io/phoenix\">Phoenix</a></h4> (<a href=\"/m/pico8/phoenix/index.html\">backup</a>)<br />\nMy introduction to Phoenix-style games was in <a href=\"/p/draw-shapes.html\">MirageOS on a TI calculator</a>. It turns out Phoenix was originally an arcade game and this is a more faithful remake.<br />\n<br />\n<br />\n<a href=\"https://pahammond.itch.io/lode-runner\"><img src=\"/m/pico8/loderunner/loderunner08-1.p8.png\"></a><br />\n<h4><a href=\"https://pahammond.itch.io/lode-runner\">Lode Runner</a></h4> (<a href=\"/m/pico8/loderunner/index.html\">backup</a>)<br />\nA clone of Lode Runner. Classic :)<br />\n<br />\n<br />\n<a href=\"https://freds72.itch.io/poom\"><img src=\"/m/pico8/poom/poom.png\"></a><br />\n<h4><a href=\"https://freds72.itch.io/poom\">Poom</a></h4> (<a href=\"/m/pico8/poom/index.html\">backup</a>)<br />\nA port of Doom. No platform is complete without one of these! This port really pushes the limits of PICO-8 and works around some of the limitations by splitting its code across several cartridges and then seamlessly jumping between them.<br />\n<br />\n<br />\n<a href=\"https://www.lexaloffle.com/bbs/?tid=43692\"><img src=\"/m/pico8/picones/picones_0_0_1-0.p8.png\"></a><br />\n<h4><a href=\"https://www.lexaloffle.com/bbs/?tid=43692\">Picones</a></h4> (<a href=\"/m/pico8/picones/index.html\">backup</a>)<br />\nThis is a work-in-progress demake of Lumines. The mechanics aren't perfect and the iconic and addictive music and sound effects are missing but this still satisfied my craving for some Lumines action! That's particularly helpful because Lumines is one of those games that has been released several times as a new iOS app only to be abandoned and broken a few years later.<br />\n<br />\n<br />\n<a href=\"https://twitter.com/johanpeitz/status/1438898759484780547?s=20\"><video muted loop autoplay playsinline disablepictureinpicture=\"\" src=\"/m/pico8/pico8_metroid.mp4\" type=\"video/mp4\"></video></a><br />\n<h4>Teaser: <a href=\"https://twitter.com/johanpeitz/status/1438898759484780547?s=20\">Metroid</a></h4><br />\nThis demake isn't available to play (yet?) but it looks SO GOOD!<br />\n<br />\n<br />\n<h3>Platformer/Metroidvania</h3><br />\n<br />\n<a href=\"https://www.lexaloffle.com/bbs/?pid=81448\"><img src=\"/m/pico8/meascastle/meas_castle-12.p8.png\"></a><br />\n<h4><a href=\"https://www.lexaloffle.com/bbs/?pid=81448\">Mea's Castle</a></h4> (<a href=\"/m/pico8/meascastle/index.html\">backup</a>)<br />\nReally fun Metroid-style game. I played through in one sitting and had a blast :) There were some jumps that were tricky (and frustrating) using the touch controls which might be easier with a keyboard.<br />\n<br />\n<br />\n<a href=\"https://www.lexaloffle.com/bbs/?tid=38333\"><img src=\"/m/pico8/spellouttahere/witchescape3-5.p8.png\"></a><br />\n<h4><a href=\"https://www.lexaloffle.com/bbs/?tid=38333\">Get Me the Spell Outta Here!!</a></h4> (<a href=\"/m/pico8/spellouttahere/index.html\">backup</a>)<br />\nAnother fun Metroid-style game. You're a witch who uses a growing repertoire of spells to navigate a castle.<br />\n<br />\n<br />\n<a href=\"https://www.lexaloffle.com/bbs/?tid=2145\"><img src=\"/m/pico8/celeste/15133.p8.png\"></a><br />\n<h4><a href=\"https://www.lexaloffle.com/bbs/?tid=2145\">Celeste</a></h4> (<a href=\"/m/pico8/celeste/index.html\">backup</a>)<br />\nHardcore platformer that was made in four days as part of a game jam. Very impressive! It was ultimately fleshed out into a <a href=\"https://en.wikipedia.org/wiki/Celeste_(video_game)\">full commercially successful game</a>.<br />\n<br />\n<br />\n<a href=\"https://www.lexaloffle.com/bbs/?pid=86783\"><img src=\"/m/pico8/celeste2/celeste_classic_2-5.p8.png\"></a><br />\n<h4><a href=\"https://www.lexaloffle.com/bbs/?pid=86783\">Celeste 2</a></h4> (<a href=\"/m/pico8/celeste2/index.html\">backup</a>)<br />\nA follow-up game with slightly different mechanics. Also tricky and fun like the original.<br />\n<br />\n<br />\n<a href=\"https://www.lexaloffle.com/bbs/?pid=48475\"><img src=\"/m/pico8/metrocubevania/cubevania12-0.p8.png\"></a><br />\n<h4><a href=\"https://www.lexaloffle.com/bbs/?pid=48475\">MetroCUBEvania</a></h4> (<a href=\"/m/pico8/metrocubevania/index.html\">backup</a>)<br />\nPlay as a bouncing cube gaining new abilities as the game progresses.<br />\n<br />\n<br />\n<a href=\"https://www.lexaloffle.com/bbs/?tid=34088\"><img src=\"/m/pico8/blocksforlife/blocks_for_life-0.p8.png\"></a><br />\n<h4><a href=\"https://www.lexaloffle.com/bbs/?tid=34088\">Blocks For Life</a></h4> (<a href=\"/m/pico8/blocksforlife/index.html\">backup</a>)<br />\nMade by zep, the creator of PICO-8!<br />\n<br />\n<br />\n<h3>Fast platformer</h3><br />\n<br />\n<a href=\"https://www.lexaloffle.com/bbs/?tid=40717\"><img src=\"/m/pico8/sprintagift/eyn_sprintagift-2.p8.png\"></a><br />\n<h4><a href=\"https://www.lexaloffle.com/bbs/?tid=40717\">Sprint'a'Gift</a></h4> (<a href=\"/m/pico8/sprintagift/index.html\">backup</a>)<br />\nEndless runner. Made for the 2020 PICO-8 Advent Calendar.<br />\n<br />\n<br />\n<a href=\"https://www.lexaloffle.com/bbs/?tid=3421\"><img src=\"/m/pico8/mistigri/21603.p8.png\"></a><br />\n<h4><a href=\"https://www.lexaloffle.com/bbs/?tid=3421\">Mistigri</a></h4> (<a href=\"/m/pico8/mistigri/index.html\">backup</a>)<br />\nSuper polished graphics with many different enemies. Fun to play but hard to beat!<br />\n<br />\n<br />\n<a href=\"https://eggnog.itch.io/u-dead\"><img src=\"/m/pico8/udead/udead.gif\"></a><br />\n<h4><a href=\"https://eggnog.itch.io/u-dead\">U Dead</a></h4> (<a href=\"/m/pico8/udead/index.html\">backup</a>)<br />\nNot technically a platformer but requires precise reaction time. Reminds me of Flappy Bird. The first game like this I ever played was <a href=\"http://www.sunflat.net\">SFCave</a> in black and white on PalmOS (made in <a href=\"http://www.sunflat.net/android/app/sfcave/?lang=en\">1998</a>!).<br />\n<br />\n<br />\n<h3>RPG</h3><br />\n<br />\n<a href=\"https://www.lexaloffle.com/bbs/?pid=88259\"><img src=\"/m/pico8/lostnight/the_lost_night-5.p8.png\"></a><br />\n<h4><a href=\"https://www.lexaloffle.com/bbs/?pid=88259\">The Lost Night</a></h4> (<a href=\"/m/pico8/lostnight/index.html\">backup</a>)<br />\nFairly complete RPG! I like the world and the quests. I don't like how many times I had to play the mini-game. I almost gave up when I was just about to beat the game because I found the mini-game so tedious. It reminded me of how many Zubat you have to fight in Pokémon caves. Grind through and you'll beat the game.<br />\n<br />\n<br />\n<h3>Turn-based</h3><br />\n<br />\n<a href=\"https://www.lexaloffle.com/bbs/?tid=38236\"><img src=\"/m/pico8/virush/virush-3.p8.png\"></a><br />\n<h4><a href=\"https://www.lexaloffle.com/bbs/?tid=38236\">Virush</a></h4> (<a href=\"/m/pico8/virush/index.html\">backup</a>)<br />\nWith some tower-defense mechanics too. Fun!<br />\n<br />\n<br />\n<h3>Dungeon Crawler</h3><br />\n<br />\n<a href=\"https://www.lexaloffle.com/bbs/?tid=29788\"><img src=\"/m/pico8/fourtoparty/43288.p8.png\"></a><br />\n<h4><a href=\"https://www.lexaloffle.com/bbs/?tid=29788\">It Takes Four to Party</a></h4> (<a href=\"/m/pico8/fourtoparty/index.html\">backup</a>)<br />\nAnother game made by Jens Bergensten. This one has a similar feel to the dungeons in classic <a href=\"https://en.wikipedia.org/wiki/The_Legend_of_Zelda:_Link%27s_Awakening\">Zelda</a> games with <a href=\"https://en.wikipedia.org/wiki/Roguelike\">roguelike</a> flavor.<br />\n<br />\n<br />\n<h3>3D</h3><br />\n<br />\n<a href=\"https://www.lexaloffle.com/bbs/?pid=mot_grandprix-3\"><img src=\"/m/pico8/motgrandprix/mot_grandprix-8.p8.png\"></a><br />\n<h4><a href=\"https://www.lexaloffle.com/bbs/?pid=mot_grandprix-3\">Mot's Grand Prix</a></h4> (<a href=\"/m/pico8/motgrandprix/index.html\">backup</a>)<br />\nBeautiful in low-res 3D. Amazing this is possible in PICO-8!<br />\n<br />\n<br />\n<a href=\"https://www.lexaloffle.com/bbs/?tid=43833\"><img src=\"/m/pico8/trialofthesorcerer/mot_sorcerer-9.p8.png\"></a><br />\n<h4><a href=\"https://www.lexaloffle.com/bbs/?tid=43833\">Trial of the Sorcerer</a></h4> (<a href=\"/m/pico8/trialofthesorcerer/index.html\">backup</a>)<br />\n3D dungeon crawler. Reminiscent of the old Windows 95 3D Maze screensaver (recreated by someone in JavaScript <a href=\"https://ibid-11962.github.io/Windows-95-3D-Maze-Screensaver/maze.html\">here</a> (<a href=\"/m/Windows3DMaze/maze.html\">backup</a>)). I remember watching this on the PCs in <a href=\"https://en.wikipedia.org/wiki/CompUSA\">CompUSA</a>.<br />\n<br />\n&nbsp;&nbsp;<br />\n<h3>App</h3><br />\n<br />\n<a href=\"https://www.lexaloffle.com/bbs/?tid=40058\"><img src=\"/m/pico8/wobblepaint/wobblekirb.gif\"></a><br />\n<h4><a href=\"https://www.lexaloffle.com/bbs/?tid=40058\">Wobblepaint</a></h4> (<a href=\"/m/pico8/wobblepaint/index.html\">backup</a>)<br />\nThis is a charming drawing app. The wobble effect adds a lot of personality to the drawings. Another cartridge made by zep -- he has a knack for coming up with charming ideas! Some <a href=\"https://news.ycombinator.com/item?id=24927001\">interesting discussion</a>.<br />\n<br />\n<br />\n<a href=\"https://johanpeitz.itch.io/picocad\"><video muted loop autoplay playsinline disablepictureinpicture=\"\" src=\"/m/pico8/picoCAD_gastly.mp4\" type=\"video/mp4\"></video></a><br />\n<h4><a href=\"https://johanpeitz.itch.io/picocad\">picoCAD</a></h4><br />\n3D modeling! This cartridge is available on itch.io as \"name your own price\" so I didn't grab a backup. Really impressive work and I love the aesthetic. The Gastly above was posted by an artist <a href=\"https://twitter.com/RadioFlower/status/1437838558463598592\">here<a href=\".<br />\n<br />\n<br />\n\">.<br />\n<br />\n<br />\n<h3>Simple</h3><br />\n<br />\n<a href=\"https://www.lexaloffle.com/bbs/?pid=11111\"><img src=\"/m/pico8/froggleoid/11253.p8.png\"></a><br />\n<h4><a href=\"https://www.lexaloffle.com/bbs/?pid=11111\">Froggleoid</a></h4> (<a href=\"/m/pico8/froggleoid/index.html\">backup</a>)<br />\nA cute little mini-game by zep. Supports multiple players!<br />\n<br />\n<br />\n<a href=\"https://soundole.itch.io/spoider-boi\"><img src=\"/m/pico8/spoiderboi/spoiderboi.png\"></a><br />\n<h4><a href=\"https://soundole.itch.io/spoider-boi\">Spoiderboi</a></h4> (<a href=\"/m/pico8/spoiderboi/index.html\">backup</a>)<br />\nA one-button Spider-Man-inspired game. I like the feel of the game!<br />\n<br />\n<br />\n<a href=\"https://joeschmoeish.itch.io/falling-balls\"><img src=\"/m/pico8/fallingballs/fallingballs.png\"></a><br />\n<h4><a href=\"https://joeschmoeish.itch.io/falling-balls\">Falling Balls</a></h4> (<a href=\"/m/pico8/fallingballs/index.html\">backup</a>)<br />\nI find this concept really funny!<br />\n<br />\n&nbsp;&nbsp;&nbsp;<br />\n<a href=\"https://www.lexaloffle.com/bbs/?tid=35349\"><img src=\"/m/pico8/dungeonguy/dungeonguy-1.p8.png\"></a><br />\n<h4><a href=\"https://www.lexaloffle.com/bbs/?tid=35349\">Dungeon Guy</a></h4> (<a href=\"/m/pico8/dungeonguy/index.html\">backup</a>)<br />\nA work-in-progress with a similar feel to Lode Runner. It's really cool that these levels are procedurally generated.\n</div>\n"
    },
    {
         "title" : "Fussy Baby Checklist",
         "date_published" : "2021-11-14T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/fussy-checklist.html",
         "url" : "https://memalign.github.io/p/fussy-checklist.html",
         "image" : "https://memalign.github.io/m/webmd-baby-cry.jpg",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/fussy-checklist.html'>Fussy Baby Checklist</a>\n</h2>\n</div>\n<img src=\"/m/webmd-baby-cry.jpg\">\n<div id='postdate'>Posted on 11/14/2021<br />\nTags: <a href='/tags.html'>Parenting</a></div>\nDo you have a fussy infant?<br />\n<br />\nHere's my checklist for trying to resolve fussiness:<br />\n<br />\n- Does the baby need a diaper change? Check for diaper rash - make sure to slather on extra diaper paste if you see redness/bumps. I saw one website say you should spread it on as if \"icing a cake\". Our first few diaper rashes were caused by the diaper being too small - check whether the next size up is a better fit!<br />\n<br />\n- Does the baby want a pacifier?<br />\n<br />\n- Is the baby hungry? Try offering a bottle even if they recently ate. They might be going through a growth spurt.<br />\n<br />\n- Does the baby need to burp? Try holding them upright and patting their back.<br />\n<br />\n- They might be uncomfortable. Try holding the baby in different positions.<br />\n<br />\n- The baby might be overstimulated after a long and interesting day. Try darkening the room and make it quiet. Try putting them down for sleep. Try putting them in a bouncer. Try putting them on your chest for a rest.<br />\n<br />\n- If you're feeling overwhelmed or desperate, tag your partner in for help!<br />\n<br />\n- Echoing advice from our pediatrician: If your baby won't stop crying no matter what you try and you're at your wit's end, call your pediatrician. Your baby could be telling you something more serious. WebMD has some <a href=\"https://www.webmd.com/parenting/baby/why-baby-cries#1\">additional advice</a>.\n</div>\n"
    },
    {
         "title" : "Fall Asleep",
         "date_published" : "2021-11-13T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/zen-sleep.html",
         "url" : "https://memalign.github.io/p/zen-sleep.html",
         "image" : "https://memalign.github.io/m/japan-men-bridge.jpg",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/zen-sleep.html'>Fall Asleep</a>\n</h2>\n</div>\n<img src=\"/m/japan-men-bridge.jpg\">\n<div id='postdate'>Posted on 11/13/2021<br />\nTags: <a href='/tags.html'>Brain Hacking</a></div>\nI've always had a hard time <a href=\"/p/emoji-conway.html\">falling asleep</a>. Closing my eyes invites a whirlwind of thoughts. I can't stop thinking so I can't fall asleep.<br />\n<br />\nThen I found a way to clear my head and fall asleep quickly. It's been working for months now!<br />\n<br />\nHere's what I do:<br />\n<br />\nAs I shower and brush my teeth before bed, I spend that ~30 minutes clearing my head. When I notice a thought, I think \"ah\" and let the thought go, let it dissipate and fade. This isn't the time for thinking and problem solving, it's the time to empty my mind so I can fall asleep.<br />\n<br />\nI repeat this for every thought that creeps in. I've found it also helps to focus on my immediate senses to keep my head emptier: the sound of the toothbrush, the soap/water/friction on my hands. I'm grounded in the present. I'm not thinking about these sounds and feelings; I'm just experiencing them without commentary.<br />\n<br />\nSometimes this helps me notice a feeling of muscle tightness. Maybe I'm furrowing my brow or frowning. Maybe I have tightness in my shoulders. I release the tension and physically relax.<br />\n<br />\nI continue this meditation as I slide into bed until I fall asleep. And I continue it if I wake up in the middle of the night.<br />\n<br />\n<img src=\"/m/horizontalseparator.png\"><br />\nI don't know if this technique is real \"meditation\" in the Zen Buddhism sense but I was inspired to try it after, months ago, stumbling upon <a href=\"https://nkanaev.com/zen101/en/\">101 Zen Stories</a> (<a href=\"https://en.wikipedia.org/wiki/101_Zen_Stories\">Wikipedia</a>). (Warning: these are old and may contain antiquated or even racist terms)<br />\n<br />\nI don't understand them even though they are simple. I tried to search for answers about one of the more famous stories: <a href=\"https://nkanaev.com/zen101/en/021/\">The Sound of One Hand</a> (<a href=\"/m/sound-of-one-hand.html\">mirror</a>).<br />\n<br />\nI found a <a href=\"https://www.quora.com/What-is-the-meaning-behind-What-is-the-sound-of-one-hand-clapping\">Quora thread</a> with some discussion. No answer was perfectly satisfying but two similar posts stood out:<br />\n<br />\nKhiêm Bảo Thiện:<br />\n<blockquote>However, when one asks you about one hand clapping - which is extraordinary, uncommon, unseen, not understandable - your mind starts to set on a quest for answer, which raises a lot of noises, like you throw a big rock into a tranquil lake. ... So, using this koan and similar, for certain situations, helps the learner realize his/her mind's activities.</blockquote>\nChris Peters:<br />\n<blockquote>The idea behind this phrase is not literal, but is meant to \"blend\" your mind Matrix-style and hopefully trick you into observing your mind as it kinda freaks out.</blockquote>\nIs the key to enlightenment learning to notice your thoughts and then clear your head? Who knows. I certainly feel lighter when my head is clear, my muscles are relaxed, and I float off to sleep.<br />\n\n</div>\n"
    },
    {
         "title" : "Shape Your Destiny",
         "date_published" : "2021-10-03T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/shape-your-destiny.html",
         "url" : "https://memalign.github.io/p/shape-your-destiny.html",
         "image" : "https://memalign.github.io/m/brain.jpg",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/shape-your-destiny.html'>Shape Your Destiny</a>\n</h2>\n</div>\n<img src=\"/m/brain.jpg\">\n<div id='postdate'>Posted on 10/3/2021<br />\nTags: <a href='/tags.html'>Writing</a>, <a href='/tags.html'>Brain Hacking</a></div>\nA friend of ours shared the eulogy he gave for his dad. In it, he quoted a lesson his father taught him as a kid:<br />\n<blockquote>Watch your thoughts, they become words;<br />\nwatch your words, they become actions;<br />\nwatch your actions, they become habits;<br />\nwatch your habits, they become character;<br />\nwatch your character, for it becomes your destiny.</blockquote>\n(This quote and ones with a similar sentiment are often attributed to many different sources. Ultimately, the original is by Frank Outlaw based on <a href=\"https://quoteinvestigator.com/2013/01/10/watch-your-thoughts/\">Quote Investigator</a>'s research.)<br />\n<br />\nI don't think I was taught to watch my thoughts as a kid. At least not in a way that was effective for me.<br />\n<br />\nI was taught that particular actions are bad and why they are bad.<br />\n<br />\nI was taught that jealousy, intolerance, hate, etc are bad.<br />\n<br />\nBut I didn't realize that the way I choose to think about things can have a big impact on long-term happiness and fulfillment in life. On friendships and relationships too.<br />\n<br />\nI realized in adulthood that being happy is a choice much of the time. A choice made every day. Focusing on the positive (and even helping to amplify it) can do a lot to diminish the negative: disappointment, annoyance, frustration, misfortune.<br />\n<br />\nOf course, really bad things happen sometimes and you can't just ignore them. It wouldn't be healthy to try to force yourself to be happy when you're truly hurting. But for all the small bad things, with practice it's possible to decide how much energy to spend thinking about them -- and whether to think about them at all. Sometimes negativity can be self-fulfilling: expecting to have a bad time can lead to having a bad time.<br />\n<br />\nThis is similar to what I'm trying to say in <a href=\"/p/day-and-night.html\">Day and Night</a>. Thinking envious thoughts leads to envious actions. Comparing yourself to others leads to unempathetic behaviors. And envious actions, unempathetic behaviors lead to a lonely life.<br />\n<br />\nOn the other hand, looking for the good and trying to be truly empathetic can lead to happiness, more positivity, and supportive friendships.\n</div>\n"
    },
    {
         "title" : "Tim's Vermeer",
         "date_published" : "2021-09-25T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/tims-vermeer.html",
         "url" : "https://memalign.github.io/p/tims-vermeer.html",
         "image" : "https://memalign.github.io/m/tim-final-painting-closeup.jpg",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/tims-vermeer.html'>Tim's Vermeer</a>\n</h2>\n</div>\n<img src=\"/m/tim-final-painting-closeup.jpg\">\n<div id='postdate'>Posted on 9/25/2021<br />\nTags: <a href='/tags.html'>Art</a>, <a href='/tags.html'>Leisure</a></div>\nI recently saw <a href=\"https://arstechnica.com/science/2021/09/restored-vermeer-painting-finally-reveals-hidden-cupid-in-background/\">news</a> that a painting from the 1650s had been restored to unhide a painting-within-a-painting in the background.<br />\n<br />\nHere's what the \"after\" and \"before\" look like:<br />\n<br />\n<img src=\"/m/vermeer-after-and-before.jpg\"><br />\nIt's fascinating that modern technology can both find the hidden painted-over image and confirm that it was painted over by someone other than the artist.<br />\n<br />\nI showed my wife who asked \"Is that a Vermeer?\" which then sent me down another <a href=\"/p/rabbit-hole.html\">rabbit hole</a>.<br />\n<br />\nI asked \"Whoah how could you tell?\" and she said that all Vermeer paintings look exactly like this due to similar composition and photo-realistic lighting.<br />\n<br />\nI found that I was already familiar with one of Vermeer's paintings, <a href=\"https://en.wikipedia.org/wiki/Girl_with_a_Pearl_Earring\">Girl with a Pearl Earring</a>, possibly due to its use as an example image in computer vision.<br />\n<br />\n<img src=\"/m/912px-1665_Girl_with_a_Pearl_Earring.jpg\"><br />\nThen I stumbled upon <a href=\"https://en.wikipedia.org/wiki/Tim%27s_Vermeer\">Tim's Vermeer</a>, a documentary made by Penn and Teller about an inventor (and successful company founder) named Tim Jenison who had a side-project (bordering on obsession) to understand how Vermeer captured such realistic lighting in paintings and then do so himself.<br />\n<br />\nHe ultimately figured out a combination of two mirrors that enable you to color match what's painted exactly to the real scene. It turns the process of painting a brilliant masterpiece into something mechanical, essentially a manual photograph machine with a person holding a paintbrush in the middle.<br />\n<br />\nHe starts out copying an old black-and-white photograph this way:<br />\n<br />\n<img src=\"/m/tim-photograph.jpg\"><br />\nThe results are phenomenal! Tim says this was the first painting he's ever made and it was a wholly mechanical process of copying the color he saw in the mirror.<br />\n<br />\nAfter that successful proof of concept, Tim sets out to completely recreate one of Vermeer's most detailed paintings.<br />\n<br />\nCheck out the full documentary (it's only 80 minutes long and you can <a href=\"/p/speed-up-av.html\">watch it faster than 1x</a>) to see how he first replicates the physical space and then reproduces the painting. The painting itself takes 130 days.<br />\n<br />\nHere are some snapshots of the mirror setup and the final painting:<br />\n<br />\n<img src=\"/m/tim-mirror-setup.jpg\"><br />\n<img src=\"/m/tim-final-painting-closeup.jpg\"><br />\n<img src=\"/m/tim-with-painting.jpg\"><br />\nBy the end of the documentary, I'm convinced that Vermeer used a setup like Tim's. Here's why:<br />\n<br />\n- At one point, Tim realizes that the mirrors cause slight visual distortion in the form of curving of straight lines. He looks at the original Vermeer and discovers the same distortion!<br />\n- The lighting in Vermeer paintings goes beyond what the human visual system can detect across the size of the rooms in the paintings<br />\n- The fine detail in the rug in the painting is not perceivable from the artist's distance without the magnifying help of the mirrors<br />\n- And several more visual quirks of Vermeer's paintings shown in the documentary<br />\n<br />\nBut don't take my word for it - check it out yourself!<br />\n\n</div>\n"
    },
    {
         "title" : "Day and Night",
         "date_published" : "2021-09-18T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/day-and-night.html",
         "url" : "https://memalign.github.io/p/day-and-night.html",
         "image" : "https://memalign.github.io/m/FullMoon2010.jpg",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/day-and-night.html'>Day and Night</a>\n</h2>\n</div>\n<img src=\"/m/FullMoon2010.jpg\">\n<div id='postdate'>Posted on 9/18/2021<br />\nTags: <a href='/tags.html'>Writing</a>, <a href='/tags.html'>Poetry</a></div>\nSaul made a friend or two<br />\nA friend was successful, Saul celebrated<br />\nA friend had misfortune, Saul felt their pain and supported them with kindness<br />\nSaul had success, the friends celebrated<br />\nSaul had misfortune, they came to the rescue<br />\nSometimes they didn't see each other but could always pick up where they left off<br />\nFriendships were sometimes superficial and sometimes deep<br />\nThey looked past the worst in each other and focused on the best<br />\nConsciously managing impulses, starving envy, amplifying empathy<br />\nTheir warmth welcomed others and their circle grew<br />\n<br />\nLuna had some friends<br />\nA friend had professional success, but Luna could have done that job better<br />\nA friend had a relationship, but their partner wasn't very intelligent or funny or interesting or attractive or...<br />\nA friend tried to stay in touch, but it was just superficial. Why are they even bothering?<br />\nA friend was happy to catch up and chat, but they were never the one to initiate. Forget them.<br />\nLuna and a friend had an argument. Luna was still upset later and said some hurtful things, as hurtful as possible. Later, with regret, Luna asked, \"Why can't we pick back up where we left off? Can't you see I need you? Can't you see I need compassion?\"<br />\nBut no one was left to respond\n</div>\n"
    },
    {
         "title" : "Lights Off",
         "date_published" : "2021-08-14T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/lights-off.html",
         "url" : "https://memalign.github.io/p/lights-off.html",
         "image" : "https://memalign.github.io/m/lightsoff.jpg",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/lights-off.html'>Lights Off</a>\n</h2>\n</div>\n<img src=\"/m/lightsoff.jpg\">\n<div id='postdate'>Posted on 8/14/2021<br />\nTags: <a href='/tags.html'>Games</a>, <a href='/tags.html'>Programming</a></div>\nTap or click and take a trip down memory lane with the historic Lights Off. Exactly fourteen years ago today Wired got the scoop: <a href=\"https://www.wired.com/2007/08/lights-off-first-iphone-native-game-arrives/\">Lights Off: First iPhone Native Game Arrives</a>.<br />\n<br />\nAnd today I'm sharing a new implementation that everyone can play in their web browser:<br />\n<br />\n<a href=\"/m/lightsoff/index.html\">Play here!</a><br />\n<br />\n<br />\nLights Off's story begins with Tiger Electronics who launched their game <a href=\"https://en.wikipedia.org/wiki/Lights_Out_(game)\">Lights Out</a> in 1995. Then in 2007 Lucas Newman and Adam Betts cloned the game for the iPhone's touch screen. Notably, they built the game before there was an official iPhone SDK or App Store. It was only available to jailbreakers!<br />\n<br />\nA year later, <a href=\"https://twitter.com/chockenberry\">Craig Hockenberry</a> wrote a <a href=\"https://furbo.org/2008/09/19/lights-off/\">post</a> to commemorate the milestone and share the <a href=\"https://github.com/chockenberry/LightsOffTouch/\">source code</a> (<a href=\"/m/lightsoff-orig.zip\">my backup</a>).<br />\n<br />\nSince then the app was rebuilt and modernized by <a href=\"https://twitter.com/stroughtonsmith\">Steve Troughton-Smith</a> as possibly the <a href=\"https://twitter.com/bennettk/status/880175781057445888?s=20\">oldest</a> <a href=\"https://twitter.com/gruber/status/880462796286291968?s=20\">still-actively-maintained app</a> on the App Store. You can find his version <a href=\"https://apps.apple.com/us/app/lights-off/id292025150\">here</a>.<br />\n<br />\nFor more history on the App Store and its first killer apps, check out <a href=\"https://techcrunch.com/2018/03/06/the-day-that-changed-your-phone-forever/\">this article</a> (also written by Craig Hockenberry - <a href=\"https://blog.iconfactory.com/2018/03/a-lot-can-happen-in-a-decade/\">mirror</a> on the iconfactory website).<br />\n<br />\n<br />\nIn the process of building the web version, I wrote <a href=\"/m/lightsoff/unitTests.html\">tests</a> (<a href=\"/m/lightsoff/UnitTests.js\">source code</a>) to ensure every level is solvable. To my surprise almost half of the original levels <a href=\"https://github.com/chockenberry/LightsOffTouch/issues/1\">cannot be solved</a>! How cruel! This was probably a mistake in how the levels were generated - maybe by flipping certain lights on without checking that the overall puzzle was valid.<br />\n<br />\nTo replace the bad levels, I generated my own levels of increasing difficulty by ramping up the minimum number of taps required to solve each puzzle. My algorithm can be found in the unit tests code in the \"test_generateLevels\" method. This could even be hooked into the game itself for an \"endless\" mode.<br />\n<br />\nIf ever you can't figure out how to solve a level in the fewest taps, there's a guaranteed method to win called \"light chasing\" or \"chase the lights\":<br />\n- Start on the top row<br />\n- For every lit button in the row, turn it off by tapping the button in the row right below it<br />\n- Repeat until you get to the bottom row<br />\n- At this point, the bottom row will have one of seven patterns. Based on the pattern, tap the specific circled cells on the top row and repeat these steps. By the time you reach the bottom row again, every light will be off!<br />\n<div id='code'>⬛⬛⬛⬛⬛      ⬛⭕️⬛⬛⬛<br />\n⬛⬛⬛⬛⬛      ⬛⬛⬛⬛⬛<br />\n⬛⬛⬛⬛⬛  =&gt;  ⬛⬛⬛⬛⬛<br />\n⬛⬛⬛⬛⬛      ⬛⬛⬛⬛⬛<br />\n🟡🟡🟡⬛⬛      🟡🟡🟡⬛⬛<br />\n<br />\n<br />\n⬛⬛⬛⬛⬛      ⬛⬛⬛⭕️⬛<br />\n⬛⬛⬛⬛⬛      ⬛⬛⬛⬛⬛<br />\n⬛⬛⬛⬛⬛  =&gt;  ⬛⬛⬛⬛⬛<br />\n⬛⬛⬛⬛⬛      ⬛⬛⬛⬛⬛<br />\n⬛⬛🟡🟡🟡      ⬛⬛🟡🟡🟡<br />\n<br />\n<br />\n⬛⬛⬛⬛⬛      ⬛⬛⭕️⬛⬛<br />\n⬛⬛⬛⬛⬛      ⬛⬛⬛⬛⬛<br />\n⬛⬛⬛⬛⬛  =&gt;  ⬛⬛⬛⬛⬛<br />\n⬛⬛⬛⬛⬛      ⬛⬛⬛⬛⬛<br />\n🟡🟡⬛🟡🟡      🟡🟡⬛🟡🟡<br />\n<br />\n<br />\n⬛⬛⬛⬛⬛      ⬛⬛⬛⬛⭕️<br />\n⬛⬛⬛⬛⬛      ⬛⬛⬛⬛⬛<br />\n⬛⬛⬛⬛⬛  =&gt;  ⬛⬛⬛⬛⬛<br />\n⬛⬛⬛⬛⬛      ⬛⬛⬛⬛⬛<br />\n🟡⬛🟡🟡⬛      🟡⬛🟡🟡⬛<br />\n<br />\n<br />\n⬛⬛⬛⬛⬛      ⭕️⬛⬛⬛⬛<br />\n⬛⬛⬛⬛⬛      ⬛⬛⬛⬛⬛<br />\n⬛⬛⬛⬛⬛  =&gt;  ⬛⬛⬛⬛⬛<br />\n⬛⬛⬛⬛⬛      ⬛⬛⬛⬛⬛<br />\n⬛🟡🟡⬛🟡      ⬛🟡🟡⬛🟡<br />\n<br />\n<br />\n⬛⬛⬛⬛⬛      ⭕️⭕️⬛⬛⬛<br />\n⬛⬛⬛⬛⬛      ⬛⬛⬛⬛⬛<br />\n⬛⬛⬛⬛⬛  =&gt;  ⬛⬛⬛⬛⬛<br />\n⬛⬛⬛⬛⬛      ⬛⬛⬛⬛⬛<br />\n🟡⬛⬛⬛🟡      🟡⬛⬛⬛🟡<br />\n<br />\n<br />\n⬛⬛⬛⬛⬛      ⭕️⬛⬛⭕️⬛<br />\n⬛⬛⬛⬛⬛      ⬛⬛⬛⬛⬛<br />\n⬛⬛⬛⬛⬛  =&gt;  ⬛⬛⬛⬛⬛<br />\n⬛⬛⬛⬛⬛      ⬛⬛⬛⬛⬛<br />\n⬛🟡⬛🟡⬛      ⬛🟡⬛🟡⬛</div>\nWhile every level can be beaten mechanically like this, it's still more fun (and often faster) to find the fewest taps needed! That's the real challenge.<br />\n<br />\nHave fun! :)<br />\n\n</div>\n"
    },
    {
         "title" : "Batman Curve",
         "date_published" : "2021-08-07T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/batman-curve.html",
         "url" : "https://memalign.github.io/p/batman-curve.html",
         "image" : "https://memalign.github.io/m/batman-curve.jpg",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/batman-curve.html'>Batman Curve</a>\n</h2>\n</div>\n<img src=\"/m/batman-curve.jpg\">\n<div id='postdate'>Posted on 8/7/2021<br />\nTags: <a href='/tags.html'>Math</a></div>\nWith <a href=\"/m/formulagraph/index.html\">FormulaGraph</a> now available, it's easier than ever to explore more <a href=\"/p/shape-catalog.html\">math shapes</a>.<br />\n<br />\nAn interesting one is the \"Batman Curve\".<br />\n<br />\nA professor named J. Matthew Register created this formula to make math fun. Here's what he says about the history in a <a href=\"https://www.quora.com/Who-wrote-the-Batman-equation\">post on Quora</a>:<br />\n\"I wrote it many, many years ago. I was teaching at a few art schools throughout the greater Sacramento area, and I used it to engage my students in the topic of graphing. One of my coolest students (Mr. Wilkinson aka i_luv_ur_mom) <a href=\"https://www.reddit.com/r/pics/comments/j2qjc/do_you_like_batman_do_you_like_math_my_math/\">posted it to Reddit</a> back in 2011 and it went viral. I'm a full time professor over at American River College, doing every thing I can to make math as enjoyable as possible.\"<br />\n<br />\nThere's a nice breakdown of how the formula's separate pieces come together to make the full shape on <a href=\"https://math.stackexchange.com/questions/54506/is-this-batman-equation-for-real\">Math StackExchange</a>.<br />\n<br />\nWhile the 6-formula version graphs ok (<a href=\"/m/formulagraph/index.html?f1(x,t)=(abs(x/2)-((3*sqrt(33)-7)/112)*(x%5E2)-3+sqrt(1-(abs(abs(x)-2)-1)%5E2)-y)=0&v1=true&f2(x,t)=(9*sqrt(abs((abs(x)-1)*(abs(x)-0.75))/((1-abs(x))*(abs(x)-0.75)))-8*abs(x)-y)=0&v2=true&f3(x,t)=(3*abs(x)+0.75*sqrt(abs((abs(x)-0.75)*(abs(x)-0.5))/((0.75-abs(x))*(abs(x)-0.5)))-y)=0&v3=true&f4(x,t)=%20%20(2.25*sqrt(abs((x-0.5)*(x+0.5))/((0.5-x)*(0.5+x)))-y)=0&v4=true&f5(x,t)=%20%20(6*sqrt(10)/7+(1.5-0.5*abs(x))*sqrt(abs(abs(x)-1)/(abs(x)-1))-6*sqrt(10)/14*sqrt(4-(abs(x)-1)%5E2)-y)=0&v5=true&f6(x,t)=(((x/7)%5E2)*sqrt((abs(abs(x)-3))/(abs(x)-3))+((y/3)%5E2)*sqrt((abs(y+3*sqrt(33)/7))/(y+3*sqrt(33)/7))-1)=0&v6=true&grid=true&coords=0,0,12&paused=true\">see here</a> or <a href=\"https://www.desmos.com/calculator/dnzfajfpym\">on Desmos</a>), I noticed that the original single formula version does not work in FormulaGraph or Desmos (it forms a <a href=\"/m/formulagraph/index.html?f1(x,t)=(abs(x/2)-((3*sqrt(33)-7)/112)*(x%5E2)-3+sqrt(1-(abs(abs(x)-2)-1)%5E2)-y)*%20(9*sqrt(abs((abs(x)-1)*(abs(x)-0.75))/((1-abs(x))*(abs(x)-0.75)))-8*abs(x)-y)*%20(3*abs(x)+0.75*sqrt(abs((abs(x)-0.75)*(abs(x)-0.5))/((0.75-abs(x))*(abs(x)-0.5)))-y)*%20(2.25*sqrt(abs((x-0.5)*(x+0.5))/((0.5-x)*(0.5+x)))-y)*%20(6*sqrt(10)/7+(1.5-0.5*abs(x))*sqrt(abs(abs(x)-1)/(abs(x)-1))-6*sqrt(10)/14*sqrt(4-(abs(x)-1)%5E2)-y)*%20(((x/7)%5E2)*sqrt((abs(abs(x)-3))/(abs(x)-3))+((y/3)%5E2)*sqrt((abs(y+3*sqrt(33)/7))/(y+3*sqrt(33)/7))-1)=0&v1=true&f2(x,t)=&v2=true&f3(x,t)=&v3=true&f4(x,t)=&v4=true&f5(x,t)=&v5=true&f6(x,t)=&v6=true&grid=true&coords=0,0,12&paused=true\">blank graph</a> showing no solutions). User copper.hat on Math StackExchange notes why: there are several terms which introduce an imaginary number (by taking sqrt of a negative number). For this reason, the combined formula does not have the solutions required for the necessary range of x and y values. (Wolfram also has a <a href=\"https://mathworld.wolfram.com/BatmanCurve.html\">writeup</a> that notes that the Batman Curve is defined piecewise.)<br />\n<br />\nThe original formula uses the trick of undefined/imaginary values to truncate shapes to a specific range of x values. Since this trick breaks the formula, I wondered if it's possible to find a different gadget that could constrain x values without introducing undefined/imaginary values.<br />\n<br />\nHere's what I came up with:<br />\n<div id='code'>For a formula F, constrain its x values to the interval [L, U] with:<br />\n<br />\n((F)^2 + min(1, ceil(abs(min(0, U-x)))) + min(1, ceil(abs(max(0, L-x))))) = 0</div>\nTo fix the Batman Curve, I went segment-by-segment applying the gadget. First, I needed to resolve any undefined/imaginary results. Second, I needed to apply my gadget for the relevant x (and sometimes y) ranges.<br />\n<br />\nHere's the crazy formula I ended up with:<br />\n<div id='code'>(((2.25-y)^2+min(1, ceil(abs(min(0, 0.5-x))))+min(1, ceil(abs(max(0, -0.5-x))))) * ((abs(x/2)-((3*sqrt(33)-7)/112)*(x^2)-3+sqrt(abs(1-(abs(abs(x)-2)-1)^2))-y)^2 + min(1, ceil(abs(min(0, 4-x))))+min(1, ceil(abs(max(0, -4-x)))))) * (((min(1, ceil(abs(max(0, 3-x))))+min(1, ceil(abs(min(0, 7-x))))) + min(1, ceil(abs(max(0, 0-y))))+ (((x/7)^2)+((y/3)^2)-1)) * ((min(1, ceil(abs(max(0, 4-x))))+min(1, ceil(abs(min(0, 7-x))))) + min(1, ceil(abs(min(0, 0-y))))+ (((x/7)^2)+((y/3)^2)-1)) * ((min(1, ceil(abs(max(0, 3-(-x)))))+min(1, ceil(abs(min(0, 7-(-x)))))) + min(1, ceil(abs(max(0, 0-y))))+ (((-x/7)^2)+((y/3)^2)-1)) * ((min(1, ceil(abs(max(0, 4-(-x)))))+min(1, ceil(abs(min(0, 7-(-x)))))) + min(1, ceil(abs(min(0, 0-y))))+ (((-x/7)^2)+((y/3)^2)-1))  +  min(1, ceil(abs(max(0, 1-abs(x)))))) * ((min(1, ceil(abs(min(0, 3-x))))+min(1, ceil(abs(max(0, 1-x))))) +  ((6*sqrt(10)/7+(1.5-0.5*abs(x))  -6*sqrt(10)/14*sqrt(abs(4-(abs(x)-1)^2))-y))^2) * ((min(1, ceil(abs(min(0, 3+x))))+min(1, ceil(abs(max(0, 1+x))))) +  ((6*sqrt(10)/7+(1.5-0.5*abs(-x))  -6*sqrt(10)/14*sqrt(abs(4-(abs(-x)-1)^2))-y))^2) * ((min(1, ceil(abs(max(0, 1-y))))+min(1, ceil(abs(min(0, 3-y))))) + (9-8*abs(x)-y)^2) * ((min(1, ceil(abs(max(0, 2.25-y))))+min(1, ceil(abs(min(0, 3-y))))) +  (3*abs(x)+0.75-y)^2) = 0</div>\n<a href=\"/m/formulagraph/index.html?f1(x,t)=(((2.25-y)%5E2+min(1,%20ceil(abs(min(0,%200.5-x))))+min(1,%20ceil(abs(max(0,%20-0.5-x)))))%20*%20((abs(x/2)-((3*sqrt(33)-7)/112)*(x%5E2)-3+sqrt(abs(1-(abs(abs(x)-2)-1)%5E2))-y)%5E2%20+%20min(1,%20ceil(abs(min(0,%204-x))))+min(1,%20ceil(abs(max(0,%20-4-x))))))%20*%20(((min(1,%20ceil(abs(max(0,%203-x))))+min(1,%20ceil(abs(min(0,%207-x)))))%20+%20min(1,%20ceil(abs(max(0,%200-y))))+%20(((x/7)%5E2)+((y/3)%5E2)-1))%20*%20((min(1,%20ceil(abs(max(0,%204-x))))+min(1,%20ceil(abs(min(0,%207-x)))))%20+%20min(1,%20ceil(abs(min(0,%200-y))))+%20(((x/7)%5E2)+((y/3)%5E2)-1))%20*%20((min(1,%20ceil(abs(max(0,%203-(-x)))))+min(1,%20ceil(abs(min(0,%207-(-x))))))%20+%20min(1,%20ceil(abs(max(0,%200-y))))+%20(((-x/7)%5E2)+((y/3)%5E2)-1))%20*%20((min(1,%20ceil(abs(max(0,%204-(-x)))))+min(1,%20ceil(abs(min(0,%207-(-x))))))%20+%20min(1,%20ceil(abs(min(0,%200-y))))+%20(((-x/7)%5E2)+((y/3)%5E2)-1))%20%20+%20%20min(1,%20ceil(abs(max(0,%201-abs(x)))))%20%20%20)%20*%20((min(1,%20ceil(abs(min(0,%203-x))))+min(1,%20ceil(abs(max(0,%201-x)))))%20+%20%20((6*sqrt(10)/7+(1.5-0.5*abs(x))%20%20-6*sqrt(10)/14*sqrt(abs(4-(abs(x)-1)%5E2))-y))%5E2)%20*%20((min(1,%20ceil(abs(min(0,%203+x))))+min(1,%20ceil(abs(max(0,%201+x)))))%20+%20%20((6*sqrt(10)/7+(1.5-0.5*abs(-x))%20%20-6*sqrt(10)/14*sqrt(abs(4-(abs(-x)-1)%5E2))-y))%5E2)%20*%20((min(1,%20ceil(abs(max(0,%201-y))))+min(1,%20ceil(abs(min(0,%203-y)))))%20+%20(9-8*abs(x)-y)%5E2)%20*%20((min(1,%20ceil(abs(max(0,%202.25-y))))+min(1,%20ceil(abs(min(0,%203-y)))))%20+%20%20(3*abs(x)+0.75-y)%5E2)%20=%200&v1=true&f2(x,t)=&v2=true&f3(x,t)=&v3=true&f4(x,t)=&v4=true&f5(x,t)=&v5=true&f6(x,t)=&v6=true&grid=true&coords=0,0,12&paused=true\">FormulaGraph link</a><br />\n<br />\nThis curve is pictured at the top of this post!<br />\n<br />\n(See my raw <a href=\"/m/batman-notes.html\">stream of consciousness notes</a> as I went step-by-step)<br />\n<br />\n<br />\nThere are a few more Batman Curves that I found on the pages linked above:<br />\n<br />\nHere's a different and simpler formula (though I don't think it looks as good) from copper.hat's post on Math StackExchange:<br />\n<div id='code'>0 = -1 +<br />\n(1/36)*x^2+(1/9)*y^2 +<br />\nmax(0, 2-(1.5*(x+3)^2+1*(y+2.7)^2)) +<br />\nmax(0, 2-(1.5*(x-3)^2+1*(y+2.7)^2)) +<br />\nmax(0, 2 - (1.9*((5*(x+1)+(y+3.5))/sqrt(26))^2 + 1/1.7 * ((-(x+1)+5*(y+3.5))/sqrt(26)))^2)) -<br />\nmax(0, 2 - (1.9*((5*(x-1)-(y+3.5))/sqrt(26))^2 + (1/1.7) * (((x-1)+5*(y+3.5))/sqrt(26)))^2) -<br />\nmax(0,2-((1.1*(x-2))^4-(y-2.1))) -<br />\nmax(0,2-((1.1*(x+2))^4-(y-2.1))) + <br />\nmax(0,2-((1.5*x)^8-(y-3.5)))</div>\n<a href=\"/m/formulagraph/index.html?f1(x,t)=0%20=%20-1%20+%20(1/36)*x%5E2+(1/9)*y%5E2+%20max(0,%202-(1.5*(x+3)%5E2+1*(y+2.7)%5E2))%20+%20max(0,%202-(1.5*(x-3)%5E2+1*(y+2.7)%5E2))%20+%20max(0,%202%20-%20(1.9*((5*(x+1)+(y+3.5))/sqrt(26))%5E2%20+%201/1.7%20*%20((-(x+1)+5*(y+3.5))/sqrt(26)))%5E2))%20-%20max(0,%202%20-%20(1.9*((5*(x-1)-(y+3.5))/sqrt(26))%5E2%20+%20(1/1.7)%20*%20(((x-1)+5*(y+3.5))/sqrt(26)))%5E2)%20-%20max(0,2-((1.1*(x-2))%5E4-(y-2.1)))%20-%20max(0,2-((1.1*(x+2))%5E4-(y-2.1)))%20-%20max(0,2-((1.5*x)%5E8-(y-3.5)))&v1=true&f2(x,t)=&v2=true&f3(x,t)=&v3=true&f4(x,t)=&v4=true&f5(x,t)=&v5=true&f6(x,t)=&v6=true&grid=true&coords=0,0,12&paused=true\">FormulaGraph link</a><br />\n<br />\nJ. Matthew Register shared a newer formula on his Quora post:<br />\n<div id='code'>(3*sqrt(4-(abs(x)-2)^2)+abs(x)-20-4*y)<br />\n*<br />\n(3*sqrt(4-(abs(x)-6)^2)+abs(x)-20-4*y)<br />\n*<br />\n(x^2+4*(y^2)-100*sqrt(abs((7-abs(2*y-1)))/(7-abs(2*y-1))))<br />\n*<br />\n(2*((abs(x)-3)^2)-9*y+18*sqrt(abs((2-abs((abs(x)-4))))/(2-abs((abs(x)-4)))))<br />\n*<br />\n(-68*abs((abs(x)-3/2))-9*y+54*sqrt(abs((43-abs((136*abs(x)-229))))/(43-abs((136*abs(x)-229)))))<br />\n*<br />\n(y-5*sqrt(abs((1-abs(x)))/(1-abs(x)))) = 0</div>\n<a href=\"/m/formulagraph/index.html?f1(x,t)=(3*sqrt(4-(abs(x)-2)%5E2)+abs(x)-20-4*y)=0&v1=true&f2(x,t)=(3*sqrt(4-(abs(x)-6)%5E2)+abs(x)-20-4*y)=0&v2=true&f3(x,t)=(x%5E2+4*(y%5E2)-100*sqrt(abs((7-abs(2*y-1)))/(7-abs(2*y-1))))=0&v3=true&f4(x,t)=(2*((abs(x)-3)%5E2)-9*y+18*sqrt(abs((2-abs((abs(x)-4))))/(2-abs((abs(x)-4)))))=0&v4=true&f5(x,t)=(-68*abs((abs(x)-3/2))-9*y+54*sqrt(abs((43-abs((136*abs(x)-229))))/(43-abs((136*abs(x)-229)))))=0&v5=true&f6(x,t)=(y-5*sqrt(abs((1.4-abs(x)))/(1.4-abs(x))))=0&v6=true&grid=true&coords=0,0,12&paused=true<br />\n\">FormulaGraph link</a><br />\n<br />\n(I made one substantive change as I re-transcribed the formula so the top of head line would be long enough to touch the ears)<br />\n<br />\nCompare his original and new Batman Curves <a href=\"/m/formulagraph/index.html?f1(x,t)=(3*sqrt(4-(abs(x)-2)%5E2)+abs(x)-20-4*y)=0&v1=true&f2(x,t)=(3*sqrt(4-(abs(x)-6)%5E2)+abs(x)-20-4*y)=0&v2=true&f3(x,t)=(x%5E2+4*(y%5E2)-100*sqrt(abs((7-abs(2*y-1)))/(7-abs(2*y-1))))=0&v3=true&f4(x,t)=(2*((abs(x)-3)%5E2)-9*y+18*sqrt(abs((2-abs((abs(x)-4))))/(2-abs((abs(x)-4)))))=0&v4=true&f5(x,t)=(-68*abs((abs(x)-3/2))-9*y+54*sqrt(abs((43-abs((136*abs(x)-229))))/(43-abs((136*abs(x)-229)))))=0&v5=true&f6(x,t)=(((2.25-y)%5E2+min(1,%20ceil(abs(min(0,%200.5-x))))+min(1,%20ceil(abs(max(0,%20-0.5-x)))))%20*%20((abs(x/2)-((3*sqrt(33)-7)/112)*(x%5E2)-3+sqrt(abs(1-(abs(abs(x)-2)-1)%5E2))-y)%5E2%20+%20min(1,%20ceil(abs(min(0,%204-x))))+min(1,%20ceil(abs(max(0,%20-4-x))))))%20*%20(((min(1,%20ceil(abs(max(0,%203-x))))+min(1,%20ceil(abs(min(0,%207-x)))))%20+%20min(1,%20ceil(abs(max(0,%200-y))))+%20(((x/7)%5E2)+((y/3)%5E2)-1))%20*%20((min(1,%20ceil(abs(max(0,%204-x))))+min(1,%20ceil(abs(min(0,%207-x)))))%20+%20min(1,%20ceil(abs(min(0,%200-y))))+%20(((x/7)%5E2)+((y/3)%5E2)-1))%20*%20((min(1,%20ceil(abs(max(0,%203-(-x)))))+min(1,%20ceil(abs(min(0,%207-(-x))))))%20+%20min(1,%20ceil(abs(max(0,%200-y))))+%20(((-x/7)%5E2)+((y/3)%5E2)-1))%20*%20((min(1,%20ceil(abs(max(0,%204-(-x)))))+min(1,%20ceil(abs(min(0,%207-(-x))))))%20+%20min(1,%20ceil(abs(min(0,%200-y))))+%20(((-x/7)%5E2)+((y/3)%5E2)-1))%20%20+%20%20min(1,%20ceil(abs(max(0,%201-abs(x))))))%20*%20((min(1,%20ceil(abs(min(0,%203-x))))+min(1,%20ceil(abs(max(0,%201-x)))))%20+%20%20((6*sqrt(10)/7+(1.5-0.5*abs(x))%20%20-6*sqrt(10)/14*sqrt(abs(4-(abs(x)-1)%5E2))-y))%5E2)%20*%20((min(1,%20ceil(abs(min(0,%203+x))))+min(1,%20ceil(abs(max(0,%201+x)))))%20+%20%20((6*sqrt(10)/7+(1.5-0.5*abs(-x))%20%20-6*sqrt(10)/14*sqrt(abs(4-(abs(-x)-1)%5E2))-y))%5E2)%20*%20((min(1,%20ceil(abs(max(0,%201-y))))+min(1,%20ceil(abs(min(0,%203-y)))))%20+%20(9-8*abs(x)-y)%5E2)%20*%20((min(1,%20ceil(abs(max(0,%202.25-y))))+min(1,%20ceil(abs(min(0,%203-y)))))%20+%20%20(3*abs(x)+0.75-y)%5E2)%20=%200&v6=true&grid=true&coords=0,0,12&paused=true\">here</a>.\n</div>\n"
    },
    {
         "title" : "FormulaGraph",
         "date_published" : "2021-08-04T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/formulagraph.html",
         "url" : "https://memalign.github.io/p/formulagraph.html",
         "image" : "https://memalign.github.io/m/formulagraph.jpg",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/formulagraph.html'>FormulaGraph</a>\n</h2>\n</div>\n<img src=\"/m/formulagraph.jpg\">\n<div id='postdate'>Posted on 8/4/2021<br />\nTags: <a href='/tags.html'>Programming</a>, <a href='/tags.html'>Math</a></div>\nI'm excited to introduce <a href=\"/m/formulagraph/index.html\">FormulaGraph</a>, a graphing calculator for general formulas (not just functions of x)!<br />\n<br />\nWhereas many graphing calculators require an equation like <a href=\"/m/formulagraph/index.html?f1(x,t)=y%20=%20sqrt(1-x%5E2)&v1=true&f2(x,t)=y%20=%20-sqrt(1-x%5E2)&v2=true&f3(x,t)=&v3=true&f4(x,t)=&v4=true&f5(x,t)=&v5=true&f6(x,t)=&v6=true&grid=true&coords=0,0,12&paused=true\">y = sqrt(1 - x^2)</a>, FormulaGraph can handle formulas like <a href=\"/m/formulagraph/index.html?f1(x,t)=y%5E2%20+%20x%5E2%20=%201&v1=true&f2(x,t)=&v2=true&f3(x,t)=&v3=true&f4(x,t)=&v4=true&f5(x,t)=&v5=true&f6(x,t)=&v6=true&grid=true&coords=0,0,12&paused=true\">y^2 + x^2 = 1</a>. You don't have to solve for y to use FormulaGraph.<br />\n<br />\nHere's what else it can do:<br />\n<br />\n- Polar formulas in terms of r and theta, such as <a href=\"/m/formulagraph/index.html?f1(x,t)=r%20=%202*sin(2*theta)&v1=true&f2(x,t)=&v2=true&f3(x,t)=&v3=true&f4(x,t)=&v4=true&f5(x,t)=&v5=true&f6(x,t)=&v6=true&grid=true&coords=0,0,12&paused=true\">r = 2*sin(2*theta)</a><br />\n- Animate based on time t: <a href=\"/m/formulagraph/index.html?f1(x,t)=y=%20x%5E(t%254)&v1=true&f2(x,t)=&v2=true&f3(x,t)=&v3=true&f4(x,t)=&v4=true&f5(x,t)=&v5=true&f6(x,t)=&v6=true&grid=true&coords=0,0,12&paused=false\">y = x^(t % 4)</a><br />\n- Inequalities: <a href=\"/m/formulagraph/index.html?f1(x,t)=x%5E100%20+%20y%5E100%20%3C=%202&v1=true&f2(x,t)=&v2=true&f3(x,t)=&v3=true&f4(x,t)=&v4=true&f5(x,t)=&v5=true&f6(x,t)=&v6=true&grid=true&coords=0,0,12&paused=true\">x^100 + y^100 <= 2</a><br />\n- Handle panning and zooming using mouse and touch/pinch<br />\n- Share links<br />\n<br />\n<br />\nWhile FormulaGraph lacks features other graphing calculators have (such as precisely calculating y- and x-intercepts), it has some unique benefits:<br />\n(I introduced this list of calculators <a href=\"/p/draw-shapes.html\">previously</a>)<br />\n<br />\n- TI-83 Plus<br />\n&nbsp;&nbsp;- Features only in FormulaGraph: interactive graphs, animate with time, available in any web browser, graph formulas (not just functions)<br />\n<br />\n- WolframAlpha<br />\n&nbsp;&nbsp;- Features only in FormulaGraph: interactive graphs, animate with time<br />\n&nbsp;&nbsp;- WolframAlpha won't graph some formulas, e.g. <a href=\"/m/formulagraph/index.html?f1(x,t)=y%5E2+x%5Ex=1&v1=true&f2(x,t)=&v2=true&f3(x,t)=&v3=true&f4(x,t)=&v4=true&f5(x,t)=&v5=true&f6(x,t)=&v6=true&grid=true&coords=0,0,12&paused=true\">y^2+x^x=1</a> and <a href=\"/m/formulagraph/index.html?f1(x,t)=x%5Ey=x%5Ex%5Ex%5Ex%5Ex%5Ex&v1=true&f2(x,t)=&v2=true&f3(x,t)=&v3=true&f4(x,t)=&v4=true&f5(x,t)=&v5=true&f6(x,t)=&v6=true&grid=true&coords=0,0,12&paused=true\">x^y=x^x^x^x^x^x</a><br />\n<br />\n- Meta-Calculator<br />\n&nbsp;&nbsp;- Features only in FormulaGraph: interactive graphs, animate with time, graph formulas (not just functions), modulo operator<br />\n<br />\n- FooPlot<br />\n&nbsp;&nbsp;- Features only in FormulaGraph: animate with time, graph formulas (not just functions), graph inequalities<br />\n<br />\n- GeoGebra Graphing Calculator<br />\n&nbsp;&nbsp;- Features only in FormulaGraph: available in any web browser, graph polar formulas, modulo operator<br />\n&nbsp;&nbsp;- GeoGebra Graphing Calculator won't graph some formulas, e.g. <a href=\"/m/formulagraph/index.html?f1(x,t)=x*y*(x-y)*(x+y)%20%3C%201&v1=true&f2(x,t)=&v2=true&f3(x,t)=&v3=true&f4(x,t)=&v4=true&f5(x,t)=&v5=true&f6(x,t)=&v6=true&grid=true&coords=0,0,12&paused=true\">x*y*(x-y)*(x+y) < 1</a><br />\n<br />\n- Desmos<br />\n&nbsp;&nbsp;- Desmos is really great. It's the best graphing calculator in this list. It can handle formulas, animations, polar formulas, and more!<br />\n&nbsp;&nbsp;- One thing FormulaGraph handles better: Desmos doesn't support polar equations which aren't linear in r. Example: <a href=\"/m/formulagraph/index.html?f1(x,t)=r%5E2=cos(theta)&v1=true&f2(x,t)=&v2=true&f3(x,t)=&v3=true&f4(x,t)=&v4=true&f5(x,t)=&v5=true&f6(x,t)=&v6=true&grid=true&coords=0,0,12&paused=true\">r^2 = cos(theta)</a><br />\n&nbsp;&nbsp;- Desmos has another quirky inconvenience: it's not possible to copy/paste formulas or easily edit their text. FormulaGraph's formula input boxes are super convenient in comparison. This feature is a must-have to make complex shapes like the <a href=\"/p/batman-curve.html\">Batman Curve</a>.<br />\n<br />\n- NumWorks Graphing Calculator<br />\n&nbsp;&nbsp;- Features only in FormulaGraph: interactive graphs, convenient UI, animate with time, available in any web browser, graph formulas (not just functions), graph polar formulas, graph inequalities<br />\n<br />\n- Relplot<br />\n&nbsp;&nbsp;- Features only in FormulaGraph: interactive graphs, animate with time<br />\n&nbsp;&nbsp;- Relplot has some graphing correctness bugs. Examples: <a href=\"/m/formulagraph/index.html?f1(x,t)=y=x%252&v1=true&f2(x,t)=&v2=true&f3(x,t)=&v3=true&f4(x,t)=&v4=true&f5(x,t)=&v5=true&f6(x,t)=&v6=true&grid=true&coords=0,0,12&paused=true\">y = x mod 2</a>, <a href=\"/m/formulagraph/index.html?f1(x,t)=y=x%5Ex&v1=true&f2(x,t)=&v2=true&f3(x,t)=&v3=true&f4(x,t)=&v4=true&f5(x,t)=&v5=true&f6(x,t)=&v6=true&grid=true&coords=0,0,12&paused=true\">y = x^x</a>, <a href=\"/m/formulagraph/index.html?f1(x,t)=y%5Ey=x%5Ex&v1=true&f2(x,t)=&v2=true&f3(x,t)=&v3=true&f4(x,t)=&v4=true&f5(x,t)=&v5=true&f6(x,t)=&v6=true&grid=true&coords=0,0,12&paused=true\">y^y = x^x</a>, <a href=\"/m/formulagraph/index.html?f1(x,t)=r=2*sin(4*theta)&v1=true&f2(x,t)=&v2=true&f3(x,t)=&v3=true&f4(x,t)=&v4=true&f5(x,t)=&v5=true&f6(x,t)=&v6=true&grid=true&coords=0,0,12&paused=true\">r = 2*sin(4*theta)</a>, <a href=\"/m/formulagraph/index.html?f1(x,t)=r=theta&v1=true&f2(x,t)=&v2=true&f3(x,t)=&v3=true&f4(x,t)=&v4=true&f5(x,t)=&v5=true&f6(x,t)=&v6=true&grid=true&coords=0,0,12&paused=true\">r = theta</a> covers a small range of theta values<br />\n&nbsp;&nbsp;- I'm reporting these bugs and I hope they get fixed!<br />\n<br />\n- Graphtoy<br />\n&nbsp;&nbsp;- Features only in FormulaGraph: graph formulas (not just functions), graph polar formulas, graph inequalities<br />\n&nbsp;&nbsp;- Graphtoy has visual glitches (missing segments) when drawing circles and other similar shapes (e.g. <a href=\"/m/formulagraph/index.html?f1(x,t)=y=sqrt(1-x%5E2)&v1=true&f2(x,t)=y=-sqrt(1-x%5E2)&v2=true&f3(x,t)=&v3=true&f4(x,t)=&v4=true&f5(x,t)=&v5=true&f6(x,t)=&v6=true&grid=true&coords=0,0,12&paused=true\">y = sqrt(1-x^2) and y = -sqrt(1-x^2)</a>)<br />\n<br />\n- Bonus: FormulaGraph has tons of test coverage, including checks that graphs render accurately. You can run the tests <a href=\"/m/formulagraph/unitTests.html\">here</a>. Beware: they take ~1 minute to run!<br />\n<br />\n<br />\nFormulaGraph's origins:<br />\n<br />\nThis is a hobby project I made by combining code and ideas from other peoples' cool projects.<br />\n<br />\nIt all started with <a href=\"https://www.cs.cornell.edu/w8/~andru/relplot/\">Relplot</a>, a project by Cornell's <a href=\"https://www.cs.cornell.edu/andru/\">Andrew Myers</a>. In Professor Myers' functional programming class, we implemented formula plotters using interval arithmetic.<br />\n<br />\nOver a decade later, I stumbled upon <a href=\"https://www.iquilezles.org\">Inigo Quilez</a>'s <a href=\"https://graphtoy.com/\">Graphtoy</a>. I had fun <a href=\"/p/shape-catalog.html\">making shapes</a> and I thought it'd be even more fun to bring Relplot's general formula capabilities to Graphtoy's interactive UI.<br />\n<br />\nSo that's what I did: I ported Relplot's implementation of interval arithmetic from SML to JavaScript and spliced it into Graphtoy. I really appreciate all the work Professor Myers and Inigo did, especially publishing the source code for these projects.<br />\n<br />\nThere was one remaining difficulty: While Graphtoy uses JavaScript's built-in parser for inputted expressions, I needed to completely replace the implementations of operators like +, -, *, /, %. JavaScript doesn't have operator overloading so I needed my own expression parser.<br />\n<br />\nThat's where <a href=\"https://www.teamten.com/\">Lawrence Kesteloot</a>'s awesome web implementation of <a href=\"https://github.com/lkesteloot/turbopascal\">Turbo Pascal</a> (<a href=\"/m/turbopascal.zip\">my backup</a>) comes in (see his interesting <a href=\"https://www.teamten.com/lawrence/projects/turbo_pascal_compiler/\">writeup</a> about the project). I simply copied and reused his expression parser. Thank you Lawrence for building and sharing that passion project! I particularly like that this project has very few dependencies. And I was able to remove the few 3rd party dependencies it had in the portion of code I reused.<br />\n<br />\nKey integration points where these projects are glued together:<br />\n- <a href=\"/m/formulagraph/relplot.js\">relplot.js</a> - look for \"MAIntervalMath\" for a reimplementation of Relplot's interval arithmetic<br />\n- <a href=\"/m/formulagraph/graphtoy.js\">graphtoy.js</a> - look for \"Draw Relplot graphs\" to see where Relplot was added to Graphtoy<br />\n- <a href=\"/m/formulagraph/utilities.js\">utilities.js</a> - look for \"_convertFormulaToFnSyntax\" to see where the parser comes into play<br />\n<br />\n<br />\nHere are some miscellaneous things I've learned during this project:<br />\n<br />\n- Some equations have solutions that are not clearly visible on most graphing calculators. For example, <a href=\"/m/formulagraph/index.html?f1(x,t)=y=x%5Ex&v1=true&f2(x,t)=&v2=true&f3(x,t)=&v3=true&f4(x,t)=&v4=true&f5(x,t)=&v5=true&f6(x,t)=&v6=true&grid=true&coords=0,0,12&paused=true\">y = x^x</a> has valid solutions for negative values of x which are single points (e.g. (-1, -1)).<br />\n<br />\n- New shapes:<br />\n&nbsp;&nbsp;- <a href=\"/m/formulagraph/index.html?f1(x,t)=y%5E100%20+%20x%5E100%20%3C%201&v1=true&f2(x,t)=&v2=true&f3(x,t)=&v3=true&f4(x,t)=&v4=true&f5(x,t)=&v5=true&f6(x,t)=&v6=true&grid=true&coords=0,0,12&paused=true\">Square</a><br />\n&nbsp;&nbsp;- <a href=\"/m/formulagraph/index.html?f1(x,t)=x%5E2+(y-(x%5E2)%5E(1/3))%5E2%20%3C%201&v1=true&f2(x,t)=&v2=true&f3(x,t)=&v3=true&f4(x,t)=&v4=true&f5(x,t)=&v5=true&f6(x,t)=&v6=true&grid=true&coords=0,0,12&paused=true\">Heart</a><br />\n&nbsp;&nbsp;- <a href=\"/m/formulagraph/index.html?f1(x,t)=((x*y*(x-y)*(x+y)*(x%5E2+y%5E2-4))%5E2-1)%3C1&v1=true&f2(x,t)=&v2=true&f3(x,t)=&v3=true&f4(x,t)=&v4=true&f5(x,t)=&v5=true&f6(x,t)=&v6=true&grid=true&coords=0,0,12&paused=true\">Crazy lotus</a><br />\n<br />\n- Modulo<br />\n&nbsp;&nbsp;- Create <a href=\"/m/formulagraph/index.html?f1(x,t)=(x%5E2+y%5E2)%2540=1&v1=true&f2(x,t)=&v2=true&f3(x,t)=&v3=true&f4(x,t)=&v4=true&f5(x,t)=&v5=true&f6(x,t)=&v6=true&grid=true&coords=0,0,12&paused=true\">concentric shapes</a> using modulo<br />\n&nbsp;&nbsp;- Create <a href=\"/m/formulagraph/index.html?f1(x,t)=y%20=%20x%5E(t%20%25%203)&v1=true&f2(x,t)=&v2=true&f3(x,t)=&v3=true&f4(x,t)=&v4=true&f5(x,t)=&v5=true&f6(x,t)=&v6=true&grid=true&coords=0,0,12&paused=false\">repeating animations</a> using modulo<br />\n&nbsp;&nbsp;- There are different definitions of <a href=\"https://en.wikipedia.org/wiki/Modulo_operation\">modulo</a> for negative numbers<br />\n&nbsp;&nbsp;&nbsp;&nbsp;- Many programming languages implement modulo as \"truncated division\"<br />\n&nbsp;&nbsp;&nbsp;&nbsp;- Desmos, Relplot, and Graphtoy use \"floored division\" so I use that in FormulaPlot too<br />\n<br />\n- How to convert Cartesian coordinates to polar<br />\n&nbsp;&nbsp;- Based on Relplot's implementation, I thought I just had to replace \"r\" with \"sqrt(x^2+y^2)\" and \"theta\" with \"atan2(y, x)\".<br />\n&nbsp;&nbsp;- This turned out to be much harder than I expected in part because Relplot's polar coodinate support is incomplete (noted above in my comparison of FormulaGraph and Relplot).<br />\n&nbsp;&nbsp;- After what I thought would be a 20 minute feature consumed several weekends, I'm reminded of the tongue-in-cheek <a href=\"https://twitter.com/Pinboard/status/761656824202276864\">Programmers' Credo</a>: \"We do these things not because they are easy, but because we thought they were going to be easy\"<br />\n&nbsp;&nbsp;- I solved this with 3 techniques: graph positive r and negative r (with theta shifted by pi), translate atan2's result range to [0, 2pi] (instead of [-pi, pi]), and iteratively render with theta += 2pi.<br />\n<br />\n- Debugging an incorrect graph is similar to general debugging. Try to find the simplest case that reproduces the issue. I was relieved when a glitch in <a href=\"/m/formulagraph/index.html?f1(x,t)=y%20=%20(mod(floor(x),2))*(x-floor(x))+(1-mod(floor(x),2))*(-x-floor(-x))+(1-mod(floor(x),2))*(1-ceil(x-floor(x)))&v1=true&f2(x,t)=&v2=true&f3(x,t)=&v3=true&f4(x,t)=&v4=true&f5(x,t)=&v5=true&f6(x,t)=&v6=true&grid=true&coords=0,0,12&paused=true\">y = (mod(floor(x),2))*(x-floor(x))+(1-mod(floor(x),2))*(-x-floor(-x))+(1-mod(floor(x),2))*(1-ceil(x-floor(x)))</a> reproduced in the far simpler <a href=\"/m/formulagraph/index.html?f1(x,t)=y=ceil(x-floor(x))&v1=true&f2(x,t)=&v2=true&f3(x,t)=&v3=true&f4(x,t)=&v4=true&f5(x,t)=&v5=true&f6(x,t)=&v6=true&grid=true&coords=0,0,12&paused=true\">y = ceil(x-floor(x))</a>.<br />\n<br />\n- When using interval arithmetic to graph formulas, it's ok to return wide intervals when the input is wide as long as the result intervals converge as the inputs get smaller. I use this technique to avoid the incorrect vertical line segments some graphing calculators (including Relplot and Graphtoy) show for <a href=\"/m/formulagraph/index.html?f1(x,t)=y=floor(x)&v1=true&f2(x,t)=&v2=true&f3(x,t)=&v3=true&f4(x,t)=&v4=true&f5(x,t)=&v5=true&f6(x,t)=&v6=true&grid=true&coords=0,0,12&paused=true\">y = floor(x)</a>.<br />\n<br />\n<br />\nTo conclude, here's an improved version of the <a href=\"/m/formulagraph/index.html?f1(x,t)=&v1=true&f2(x,t)=-(x-0.7)+sqrt(.1)+abs(sin(PI*-(x-0.7)))&v2=false&f3(x,t)=&v3=true&f4(x,t)=y%3C-floor(x)&v4=true&f5(x,t)=(y-(-((t%2519-8)-0.7)+sqrt(.1)+abs(sin(PI*-((t%2519-8)-0.7)))))%5E2+(x-(t%2519-8))%5E2%3C=0.1&v5=true&f6(x,t)=&v6=true&grid=true&coords=0,0,12&paused=false\">bouncing ball animation</a> (original <a href=\"/p/bouncing-ball.html\">here</a>).<br />\n<br />\nHappy graphing :)<br />\n\n</div>\n"
    },
    {
         "title" : "Bouncing Ball",
         "date_published" : "2021-03-28T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/bouncing-ball.html",
         "url" : "https://memalign.github.io/p/bouncing-ball.html",
         "image" : "https://memalign.github.io/m/bouncing-ball.jpg",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/bouncing-ball.html'>Bouncing Ball</a>\n</h2>\n</div>\n<img src=\"/m/bouncing-ball.jpg\">\n<div id='postdate'>Posted on 3/28/2021<br />\nTags: <a href='/tags.html'>Math</a></div>\nI mentioned <a href=\"/p/draw-shapes.html\">here</a> that TI calculators can make some simple animations:<br />\n\"An upperclassman graphed some functions together which made it look like this circle was a ball bouncing down stairs.\"<br />\n<br />\nI also mentioned something special about <a href=\"https://graphtoy.com/\">Graphtoy</a>:<br />\n\"Graphtoy has a variable for elapsed time (t) which can be used to create animations\"<br />\n<br />\nIn this post, I'll recreate the bouncing ball animation using mathematical formulas in Graphtoy.<br />\n<br />\nBrowsing our <a href=\"/p/shape-catalog.html\">shape catalog</a> gives us a few useful components:<br />\n<br />\nSteps: y = floor(x)<br />\n<br />\nDiagonal sine wave: y = x + 3 + sin(3*x)<br />\n&nbsp;&nbsp;- This looks similar to the path of a ball as it bounces down steps<br />\n<br />\n<a href=\"/m/graphtoy/index.html?f1(x,t)=floor(x)&v1=true&f2(x,t)=x+3+sin(3*x)&v2=true&f3(x,t)=&v3=false&f4(x,t)=&v4=false&f5(x,t)=&v5=false&f6(x,t)=&v6=false&grid=true&coords=0,0,12\">Graphtoy link</a><br />\n<br />\nHere's what those look like together:<br />\n<br />\n<img src=\"/m/mathshapes/steps-sine-wave.jpg\"><br />\nOne aesthetic tweak: have the stairs go down to the right.<br />\nAdjust the sine wave to match the direction and slope of the stairs.<br />\n<br />\nSteps: y = -floor(x)+5<br />\nBall's path: y = -x + 5 + sin(3*-x)<br />\n<a href=\"/m/graphtoy/index.html?f1(x,t)=-floor(x)+5&v1=true&f2(x,t)=-x+5+sin(3*-x)&v2=true&f3(x,t)=&v3=false&f4(x,t)=&v4=false&f5(x,t)=&v5=false&f6(x,t)=&v6=false&grid=true&coords=0,0,12\">Graphtoy link</a><br />\n<br />\nWith a normal (non-diagonal) sine wave, every other hump is negative and below the x-axis. In our diagonal sine wave, every other hump is going under a step instead of bouncing off it.<br />\n<br />\nLet's figure out how to have a normal sine wave bounce off the x-axis and then bring that same modification to our more complex diagonal sine wave.<br />\n<br />\nTo simply make all negative values positive, we can take the absolute value with the abs() function:<br />\n<br />\ny = abs(sin(x))<br />\n<br />\nHere's what that looks like:<br />\n<br />\n<img src=\"/m/mathshapes/sine-abs.jpg\"><br />\nLooks promising! Let's try using abs on the diagonal sine wave:<br />\n<br />\ny = -x + 5 + abs(sin(3*-x))<br />\n<a href=\"/m/graphtoy/index.html?f1(x,t)=-floor(x)+5&v1=true&f2(x,t)=-x+5+abs(sin(3*-x))&v2=true&f3(x,t)=abs(sin(x))&v3=false&f4(x,t)=&v4=false&f5(x,t)=&v5=false&f6(x,t)=&v6=false&grid=true&coords=0,0,12\">Graphtoy link</a><br />\n<br />\nHere's what that looks like:<br />\n<br />\n<img src=\"/m/mathshapes/sine-abs-bounce.jpg\"><br />\nThere are a few problems still:<br />\n<br />\n- The bounce should happen in the middle of the step (not in the corner)<br />\n- It looks like the width of each period of the sine wave is not the same as the length of each step so there's visible drift<br />\n<br />\nWe can fix both of these using techniques noted in the <a href=\"/p/shape-catalog.html\">shape catalog</a>.<br />\n<br />\nShift the bounce to happen farther right:<br />\n<br />\ny = -(x-0.5) + 5 + abs(sin(3*-(x-0.5)))<br />\n<a href=\"/m/graphtoy/index.html?f1(x,t)=-floor(x)+5&v1=true&f2(x,t)=-(x-0.5)+5+abs(sin(3*-(x-0.5)))&v2=true&f3(x,t)=abs(sin(x))&v3=false&f4(x,t)=&v4=false&f5(x,t)=&v5=false&f6(x,t)=&v6=false&grid=true&coords=0,0,12\">Graphtoy link</a><br />\n<br />\nFix the sine wave's period:<br />\n<br />\ny = -(x-0.5) + 5 + abs(sin(PI*-(x-0.5)))<br />\n<a href=\"/m/graphtoy/index.html?f1(x,t)=-floor(x)+5&v1=true&f2(x,t)=-(x-0.5)+5+abs(sin(PI*-(x-0.5)))&v2=true&f3(x,t)=abs(sin(x))&v3=false&f4(x,t)=&v4=false&f5(x,t)=&v5=false&f6(x,t)=&v6=false&grid=true&coords=0,0,12\">Graphtoy link</a><br />\n<br />\nHere's what that looks like:<br />\n<br />\n<img src=\"/m/mathshapes/fixed-period.jpg\"><br />\nNow let's add our bouncing ball. We want to draw a circle that's centered on the diagonal bouncing sine wave.<br />\n<br />\nFrom the shape catalog, here is the equation for a circle centered at (-3, 2):<br />\n<br />\ny = sqrt(1 - (x+3)^2) + 2<br />\ny = -sqrt(1 - (x+3)^2) + 2<br />\n<br />\nTo have the ball move to the right with time, we'll replace the -3 with t. t is the special parameter Graphtoy provides; its value is the number of seconds that have passed since the webpage refreshed.<br />\n<br />\ny = sqrt(1 - (x-t)^2) + 2<br />\ny = -sqrt(1 - (x-t)^2) + 2<br />\n<a href=\"/m/graphtoy/index.html?f1(x,t)=-floor(x)+5&v1=true&f2(x,t)=-(x-0.5)+5+abs(sin(PI*-(x-0.5)))&v2=true&f3(x,t)=sqrt(1-(x-t)%5E2)+2&v3=true&f4(x,t)=-sqrt(1-(x-t)%5E2)+2&v4=true&f5(x,t)=&v5=false&f6(x,t)=&v6=false&grid=true&coords=0,0,12\">Graphtoy link</a><br />\n<br />\nThe y-value at time t is the value of our bouncing sine wave when x=t.<br />\n<br />\nBouncing sine wave: y = -(x-0.5) + 5 + abs(sin(PI*-(x-0.5)))<br />\n<br />\nValue when x=t:<br />\ny = -(t-0.5) + 5 + abs(sin(PI*-(t-0.5)))<br />\n<br />\nNow, we'll replace the 2 in our circle equations with this y expression:<br />\n<br />\ny = sqrt(1 - (x-t)^2) + (-(t-0.5) + 5 + abs(sin(PI*-(t-0.5))))<br />\ny = -sqrt(1 - (x-t)^2) + (-(t-0.5) + 5 + abs(sin(PI*-(t-0.5))))<br />\n<a href=\"/m/graphtoy/index.html?f1(x,t)=-floor(x)+5&v1=true&f2(x,t)=-(x-0.5)+5+abs(sin(PI*-(x-0.5)))&v2=true&f3(x,t)=sqrt(1%20-%20(x-t)%5E2)%20+%20(-(t-0.5)%20+%205%20+%20abs(sin(PI*-(t-0.5))))&v3=true&f4(x,t)=-sqrt(1%20-%20(x-t)%5E2)%20+%20(-(t-0.5)%20+%205%20+%20abs(sin(PI*-(t-0.5))))&v4=true&f5(x,t)=&v5=false&f6(x,t)=&v6=false&grid=true&coords=0,0,12\">Graphtoy link</a><br />\n<br />\nWow! This is getting really close!<br />\n<br />\nThe ball is way too big. Let's shrink its radius:<br />\n<br />\ny = sqrt(0.1 - (x-t)^2) + (-(t-0.5) + 5 + abs(sin(PI*-(t-0.5))))<br />\ny = -sqrt(0.1 - (x-t)^2) + (-(t-0.5) + 5 + abs(sin(PI*-(t-0.5))))<br />\n<a href=\"/m/graphtoy/index.html?f1(x,t)=-floor(x)+5&v1=true&f2(x,t)=-(x-0.5)+5+abs(sin(PI*-(x-0.5)))&v2=true&f3(x,t)=sqrt(0.1-(x-t)%5E2)+(-(t-0.5)+5+abs(sin(PI*-(t-0.5))))&v3=true&f4(x,t)=-sqrt(0.1-(x-t)%5E2)+(-(t-0.5)+5+abs(sin(PI*-(t-0.5))))&v4=true&f5(x,t)=&v5=false&f6(x,t)=&v6=false&grid=true&coords=0,0,12\">Graphtoy link</a><br />\n<br />\n(Note: once the circle moves off-screen, don't forget to reset t (or refresh the page) to make it reappear)<br />\n<br />\nMore tweaks needed:<br />\n<br />\n- The ball bounces through the step. Need to shift the bouncing curve up by the ball's radius.<br />\n- The ball is too close to the edge of the step. Need to shift the bouncing curve farther to the right.<br />\n<br />\nShifting up and to the right:<br />\n<br />\nSine wave:<br />\ny = -(x-0.7) + 5 + sqrt(.1) + abs(sin(PI*-(x-0.7)))<br />\n<br />\nCircle:<br />\ny = sqrt(0.1 - (x-t)^2) + (-(t-0.7) + 5 + sqrt(.1) + abs(sin(PI*-(t-0.7))))<br />\ny = -sqrt(0.1 - (x-t)^2) + (-(t-0.7) + 5 + sqrt(.1) + abs(sin(PI*-(t-0.7))))<br />\n<br />\n<a href=\"/m/graphtoy/index.html?f1(x,t)=-floor(x)+5&v1=true&f2(x,t)=-(x-0.7)+5%20+%20sqrt(.1)+abs(sin(PI*-(x-0.7)))&v2=true&f3(x,t)=sqrt(0.1-(x-t)%5E2)+(-(t-0.7)+5+sqrt(.1)+abs(sin(PI*-(t-0.7))))&v3=true&f4(x,t)=-sqrt(0.1-(x-t)%5E2)+(-(t-0.7)+5+sqrt(.1)+abs(sin(PI*-(t-0.7))))&v4=true&f5(x,t)=&v5=false&f6(x,t)=&v6=false&grid=true&coords=0,0,12\">Graphtoy link</a><br />\n<br />\nLooks perfect!<br />\n<br />\n<img src=\"/m/mathshapes/bouncing-ball-with-line.jpg\"><br />\nBonus just for fun, here's the ball bouncing off a square wave, losing height with every bounce:<br />\n<br />\n<a href=\"/m/graphtoy/index.html?f1(x,t)=sign(sin(x*2*PI))/4+0.25&v1=true&f2(x,t)=((-x/5+4)%5E2/8)*(abs(sin(PI/2*-(x*2-0.5))))+0.5+sqrt(.1)&v2=true&f3(x,t)=sqrt(0.1-(x-(t-12))%5E2)%20+%20((-(t-12)/5+4)%5E2/8)*(abs(sin(PI/2*-((t-12)*2-0.5))))+0.5+sqrt(.1)&v3=true&f4(x,t)=-sqrt(0.1-(x-(t-12))%5E2)%20+%20((-(t-12)/5+4)%5E2/8)*(abs(sin(PI/2*-((t-12)*2-0.5))))+0.5+sqrt(.1)&v4=true&f5(x,t)=&v5=false&f6(x,t)=&v6=false&grid=true&coords=0,0,12\">Graphtoy link</a><br />\n<br />\n\n</div>\n"
    },
    {
         "title" : "Catalog of Math Shapes",
         "date_published" : "2021-03-27T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/shape-catalog.html",
         "url" : "https://memalign.github.io/p/shape-catalog.html",
         "image" : "https://memalign.github.io/m/graphtoy-smile.jpg",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/shape-catalog.html'>Catalog of Math Shapes</a>\n</h2>\n</div>\n<img src=\"/m/graphtoy-smile.jpg\">\n<div id='postdate'>Posted on 3/27/2021<br />\nTags: <a href='/tags.html'>Math</a></div>\nI enjoy <a href=\"/p/draw-shapes.html\">drawing shapes using math</a>. Much of the fun is exploring what formulas look like and figuring out how to warp them to look different.<br />\n<br />\nTo be able to build more complex shapes and animations, in this post I'll explore some formulas and create a catalog of shapes.<br />\n<br />\n<br />\nCircles:<br />\n<br />\nx^2 + y^2 = 1<br />\n<br />\nGraphtoy requires that we solve for y to create a function of x: f(x)<br />\n<br />\ny^2 = 1 - x^2<br />\ny = ± sqrt(1 - x^2)<br />\nf(x) = y = ± sqrt(1 - x^2)<br />\n<br />\n<br />\nGraphtoy doesn't understand ± so we need to write two separate formulas:<br />\ny = sqrt(1 - x^2)<br />\ny = -sqrt(1 - x^2)<br />\n<a href=\"/m/graphtoy/index.html?f1(x,t)=sqrt(1%20-%20x%5E2)&v1=true&f2(x,t)=-sqrt(1%20-%20x%5E2)&v2=true&f3(x,t)=&v3=false&f4(x,t)=&v4=false&f5(x,t)=&v5=false&f6(x,t)=&v6=false&grid=true&coords=0,0,12\">Graphtoy link</a><br />\n<br />\nHere's what that looks like:<br />\n<br />\n<img src=\"/m/mathshapes/circle.jpg\"><br />\nIn general, we can shift formulas up/down by adding/subtracting to/from the function. Here, we shift the circle up the y-axis by 2:<br />\ny = sqrt(1 - x^2) + 2<br />\ny = -sqrt(1 - x^2) + 2<br />\n<a href=\"/m/graphtoy/index.html?f1(x,t)=sqrt(1-x%5E2)+2&v1=true&f2(x,t)=-sqrt(1-x%5E2)+2&v2=true&f3(x,t)=&v3=false&f4(x,t)=&v4=false&f5(x,t)=&v5=false&f6(x,t)=&v6=false&grid=true&coords=0,0,12\">Graphtoy link</a><br />\n<br />\nAnd we can shift left/right similarly by adding/subtracting from every instance of \"x\". Here, we shift the circle left on the x-axis by 3:<br />\n<br />\ny = sqrt(1 - (x+3)^2)<br />\ny = -sqrt(1 - (x+3)^2)<br />\n<a href=\"/m/graphtoy/index.html?f1(x,t)=sqrt(1-(x+3)%5E2)&v1=true&f2(x,t)=-sqrt(1-(x+3)%5E2)&v2=true&f3(x,t)=&v3=false&f4(x,t)=&v4=false&f5(x,t)=&v5=false&f6(x,t)=&v6=false&grid=true&coords=0,0,12\">Graphtoy link</a><br />\n<br />\nWe can combine these two techniques to shift left and up at the same time:<br />\n<br />\ny = sqrt(1 - (x+3)^2) + 2<br />\ny = -sqrt(1 - (x+3)^2) + 2<br />\n<a href=\"/m/graphtoy/index.html?f1(x,t)=sqrt(1-(x+3)%5E2)+2&v1=true&f2(x,t)=-sqrt(1-(x+3)%5E2)+2&v2=true&f3(x,t)=&v3=false&f4(x,t)=&v4=false&f5(x,t)=&v5=false&f6(x,t)=&v6=false&grid=true&coords=0,0,12\">Graphtoy link</a><br />\n<br />\n<br />\nLines:<br />\n<br />\ny = mx + b<br />\nm is the slope (change in y divided by change in x)<br />\nb is the y-intercept (notice that adding b is the same technique we used to shift the circle up)<br />\n<br />\nHere's a steep line that goes up 3 in the y direction for every increase of 1 in the x direction. I shifted it to intersect with the y-axis at y=1<br />\n<br />\ny = 3*x + 1<br />\n<a href=\"/m/graphtoy/index.html?f1(x,t)=3*x%20+%201&v1=true&f2(x,t)=&v2=false&f3(x,t)=&v3=false&f4(x,t)=&v4=false&f5(x,t)=&v5=false&f6(x,t)=&v6=false&grid=true&coords=0,0,12\">Graphtoy link</a><br />\n<br />\nHere's what that looks like:<br />\n<br />\n<img src=\"/m/mathshapes/line.jpg\"><br />\nIn general, we can flip the shape over the x-axis by making it negative (notice this is similar to the way we draw the bottom half of a circle, by flipping the formula to the top half):<br />\n<br />\ny = - (3*x + 1)<br />\n<a href=\"/m/graphtoy/index.html?f1(x,t)=-(3*x+1)&v1=true&f2(x,t)=&v2=false&f3(x,t)=&v3=false&f4(x,t)=&v4=false&f5(x,t)=&v5=false&f6(x,t)=&v6=false&grid=true&coords=0,0,12\">Graphtoy link</a><br />\n<br />\nSimilarly, we can flip a shape over the y-axis by replacing every instance of \"x\" with \"-x\":<br />\n<br />\ny = 3*(-x) + 1<br />\n<a href=\"/m/graphtoy/index.html?f1(x,t)=(3*(-x)+1)&v1=true&f2(x,t)=&v2=false&f3(x,t)=&v3=false&f4(x,t)=&v4=false&f5(x,t)=&v5=false&f6(x,t)=&v6=false&grid=true&coords=0,0,12\">Graphtoy link</a><br />\n<br />\n<br />\nSine wave:<br />\n<br />\ny = sin(x)<br />\n<a href=\"/m/graphtoy/index.html?f1(x,t)=sin(x)&v1=true&f2(x,t)=&v2=false&f3(x,t)=&v3=false&f4(x,t)=&v4=false&f5(x,t)=&v5=false&f6(x,t)=&v6=false&grid=true&coords=0,0,12\">Graphtoy link</a><br />\n<br />\nHere's what that looks like:<br />\n<br />\n<img src=\"/m/mathshapes/sin.jpg\"><br />\nSomething special about the shape of sin(x): it's periodic, repeating infinitely.<br />\n<br />\n<br />\nParabola:<br />\n<br />\ny = x^2<br />\n<a href=\"/m/graphtoy/index.html?f1(x,t)=x%5E2&v1=true&f2(x,t)=&v2=false&f3(x,t)=&v3=false&f4(x,t)=&v4=false&f5(x,t)=&v5=false&f6(x,t)=&v6=false&grid=true&coords=0,0,12\">Graphtoy link</a><br />\n<br />\nHere's what that looks like:<br />\n<br />\n<img src=\"/m/mathshapes/parabola.jpg\"><br />\nIf we want to turn a shape sideways (by swapping the axes), we can swap x and y.<br />\n<br />\nSideways parabola:<br />\n<br />\nx = y^2<br />\n<br />\nSolve for y to be able to graph using Graphtoy:<br />\n<br />\ny = ± sqrt(x)<br />\n<br />\ny = sqrt(x)<br />\ny = -sqrt(x)<br />\n<a href=\"/m/graphtoy/index.html?f1(x,t)=sqrt(x)&v1=true&f2(x,t)=-f1(x,t)&v2=true&f3(x,t)=&v3=false&f4(x,t)=&v4=false&f5(x,t)=&v5=false&f6(x,t)=&v6=false&grid=true&coords=0,0,12\">Graphtoy link</a><br />\n<br />\n<br />\nCombining shapes:<br />\n<br />\nWe can combine formulas to combine their shapes. For example, we can make a sine wave follow the shape of a line by adding them together:<br />\n<br />\nDiagonal line:<br />\ny = x + 3<br />\n<br />\nSine wave:<br />\ny = sin(3*x)<br />\n<br />\nDiagonal sine wave:<br />\ny = x + 3 + sin(3*x)<br />\n<a href=\"/m/graphtoy/index.html?f1(x,t)=x+3&v1=true&f2(x,t)=sin(3*x)&v2=true&f3(x,t)=x%20+%203%20+%20sin(3*x)&v3=true&f4(x,t)=&v4=false&f5(x,t)=&v5=false&f6(x,t)=&v6=false&grid=true&coords=0,0,12\">Graphtoy link</a><br />\n<br />\n<br />\nSteps (floor):<br />\n<br />\nWe can do some neat things using functions like floor and ceil. Floor rounds down to the nearest integer. Ceil rounds up to the nearest integer.<br />\n<br />\ny = floor(x)<br />\n<a href=\"/m/graphtoy/index.html?f1(x,t)=floor(x)&v1=true&f2(x,t)=&v2=false&f3(x,t)=&v3=false&f4(x,t)=&v4=false&f5(x,t)=&v5=false&f6(x,t)=&v6=false&grid=true&coords=0,0,12\">Graphtoy link</a><br />\n<br />\nThis looks like steps!<br />\n<br />\n<img src=\"/m/mathshapes/floor.jpg\"><br />\nWe can make a spiky sawtooth wave by only giving y the decimal portion of x like this:<br />\ny = x - floor(x)<br />\n<a href=\"/m/graphtoy/index.html?f1(x,t)=x%20-%20floor(x)&v1=true&f2(x,t)=&v2=false&f3(x,t)=&v3=false&f4(x,t)=&v4=false&f5(x,t)=&v5=false&f6(x,t)=&v6=false&grid=true&coords=0,0,12\">Graphtoy link</a><br />\n<br />\nTo get an intuitive understanding of a shape, sometimes it helps to write out some of the values in a table:<br />\n<div id='code'> x     floor(x)     x-floor(x)<br />\n=============================<br />\n0        0            0<br />\n0.2      0            0.2<br />\n0.5      0            0.5<br />\n1        1            0<br />\n1.2      1            0.2<br />\n1.5      1            0.5<br />\n2        2            0<br />\n2.2      2            0.2<br />\n2.5      2            0.5</div>\nThis hopefully makes it easier to see how this ends up looking like a sawtooth.<br />\n<br />\n<br />\nTriangle wave:<br />\n<br />\n<div id='code'>A sawtooth wave looks like this:         /|/|/|/|<br />\nA flipped sawtooth wave looks like this: |\\|\\|\\|\\<br />\nA triangle wave looks like this:         /\\/\\/\\/\\</div>\nI noticed that I might be able to construct a triangle wave by combining a sawtooth wave with a flipped sawtooth wave.<br />\n<br />\nThe naive approach of simply adding them together gives us this:<br />\nSawtooth wave:<br />\ny = x - floor(x)<br />\nFlipped (across the y-axis) sawtooth wave:<br />\ny = -x - floor(-x)<br />\n(Note: when writing this, I accidentally flipped the formula over the x-axis: y = -(x-floor(x)). When I graphed it, I realized my mistake and played around with the -s to get it right. It's normal to play around and make mistakes! Make some terms negative and see what happens to the shape!)<br />\n<br />\nAdded together:<br />\ny = x - floor(x) + -x - floor(-x)<br />\n<a href=\"/m/graphtoy/index.html?f1(x,t)=x-floor(x)&v1=false&f2(x,t)=-x-floor(-x)&v2=false&f3(x,t)=x-floor(x)-x-floor(-x)&v3=true&f4(x,t)=&v4=false&f5(x,t)=&v5=false&f6(x,t)=&v6=false&grid=true&coords=0,0,12\">Graphtoy link</a><br />\n<br />\nAh woops! That looks like a straight line. Graphing the sawtooth waves on top of each other reveals why: the diagonal portions cross each other, summing up to a constant value for most values of x.<br />\n<a href=\"/m/graphtoy/index.html?f1(x,t)=x-floor(x)&v1=true&f2(x,t)=-x-floor(-x)&v2=true&f3(x,t)=x-floor(x)-x-floor(-x)&v3=false&f4(x,t)=&v4=false&f5(x,t)=&v5=false&f6(x,t)=&v6=false&grid=true&coords=0,0,12\">Graphtoy link</a><br />\n<br />\nTo get a triangle wave, I need to alternate taking a tooth from each sawtooth wave. I can take a tooth from one wave when floor(x) is even; a tooth from the other wave when floor(x) is odd.<br />\n<br />\nThat sounds pretty crazy! Fortunately, <a href=\"https://en.wikipedia.org/wiki/Modulo_operation\">modular division</a> is an easy way to test whether a number is even or odd.<br />\n<br />\n<div id='code'>        floor(x) % 2<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;also written as:<br />\nx     mod(floor(x), 2)<br />\n==============================<br />\n1         1             (odd)<br />\n1.9       1             (odd)<br />\n2         0             (even)<br />\n2.9       0             (even)<br />\n3         1             (odd)<br />\n4         0             (even)</div>\nOur gadget to determine when floor(x) is odd: mod(floor(x), 2)<br />\nWe can use that to make a complementary gadget to determine when floor(x) is even: 1-mod(floor(x), 2)<br />\n<br />\nSawtooth wave:<br />\ny = x - floor(x)<br />\n<br />\nFlipped (across the y-axis) sawtooth wave:<br />\ny = -x - floor(-x)<br />\n<br />\nUsing our gadgets to zero out every other tooth:<br />\n<br />\n<div id='code'>    zero out even teeth                zero out odd teeth<br />\ny = mod(floor(x), 2) * (x-floor(x)) + (1-mod(floor(x), 2)) * (-x-floor(-x)))</div>\n<a href=\"/m/graphtoy/index.html?f1(x,t)=x-floor(x)&v1=false&f2(x,t)=-x-floor(-x)&v2=false&f3(x,t)=mod(floor(x),2)*(x-floor(x))%20+%20(1-mod(floor(x),2))*(-x-floor(-x))&v3=true&f4(x,t)=&v4=false&f5(x,t)=&v5=false&f6(x,t)=&v6=false&grid=true&coords=0,0,12\">Graphtoy link</a><br />\n<br />\nHere's what that looks like:<br />\n<br />\n<img src=\"/m/mathshapes/triangle-glitch.jpg\"><br />\nNotice that there are some visible glitches. Let's check the math:<br />\n<br />\ny = mod(floor(x), 2) * (x-floor(x)) + (1-mod(floor(x), 2)) * (-x-floor(-x)))<br />\n<br />\nPlug in x = 0:<br />\n<br />\ny = mod(floor(0), 2) * (0-floor(0)) + (1-mod(floor(0), 2)) * (-0-floor(-0)))<br />\ny = 0 * (0-floor(0)) + (1-0) * (-0-floor(-0)))<br />\ny = 0<br />\n<br />\nAh but y is supposed to be 1. It looks like the equation has a bug.<br />\n<br />\nChecking a few more x, y values to build intuition:<br />\n<div id='code'> x   y   y is supposed to be<br />\n============================<br />\n&nbsp;0   0          1<br />\n&nbsp;1   0          0<br />\n&nbsp;2   0          1<br />\n&nbsp;3   0          0<br />\n&nbsp;4   0          1</div>\nIn its current form, our formula is taking neither sawtooth's value when x is a perfect integer (looking at the formula, you can see that it's because (x-floor(x)) and (-x-floor(-x)) are always 0 when x is an integer.<br />\n<br />\nOne fix is to add a term to our formula that has the value 1 for even integers and 0 otherwise.<br />\n<br />\nI played around and came up with this:<br />\n(1-mod(floor(x),2))*(1-ceil(x-floor(x)))<br />\n<br />\nThe first half of this is our even/odd gadget. The second half is an expression that is 1 for integers, 0 otherwise.<br />\n<br />\nChecking its values:<br />\n<div id='code'>                                            (1-mod(floor(x),2)) *<br />\n&nbsp;x   1-mod(floor(x),2)  1-ceil(x-floor(x))  (1-ceil(x-floor(x)))<br />\n=================================================================<br />\n0          1                   1                  1*1 = 1<br />\n0.5        1                   0                  1*0 = 0<br />\n1          0                   1                  0*1 = 0<br />\n1.5        0                   0                  0*0 = 0<br />\n2          1                   1                  1*1 = 1</div>\nFixed equation by adding this gadget:<br />\n<br />\ny = (mod(floor(x),2))*(x-floor(x))+(1-mod(floor(x),2))*(-x-floor(-x)) + (1-mod(floor(x),2))*(1-ceil(x-floor(x)))<br />\n<a href=\"/m/graphtoy/index.html?f1(x,t)=(mod(floor(x),2))*(x-floor(x))+(1-mod(floor(x),2))*(-x-floor(-x))+(1-mod(floor(x),2))*(1-ceil(x-floor(x)))&v1=true&f2(x,t)=&v2=false&f3(x,t)=&v3=false&f4(x,t)=&v4=false&f5(x,t)=&v5=false&f6(x,t)=&v6=false&grid=true&coords=0,0,12\">Graphtoy link</a><br />\n<br />\nHere's what the fixed equation looks like:<br />\n<br />\n<img src=\"/m/mathshapes/triangle.jpg\"><br />\nLooks perfect! Our formula is pretty complex, though. It's possible we could come up with a <a href=\"/m/formulagraph/index.html?f1(x,t)=abs(1-mod(x,2))&v1=true&f2(x,t)=&v2=true&f3(x,t)=&v3=true&f4(x,t)=&v4=true&f5(x,t)=&v5=true&f6(x,t)=&v6=true&grid=true&coords=0,0,12&paused=true\">simpler formula</a> by reading this <a href=\"https://en.wikipedia.org/wiki/Triangle_wave\">Wikipedia page</a>.<br />\n<br />\n<br />\nSquare wave:<br />\n<br />\nHere's one way to make a square wave: take an already periodic formula and make it blocky.<br />\n<br />\nAn easy periodic formula is sin(x).<br />\n<br />\ny = sin(x)<br />\n<br />\nInstead of having the period of sin be 2*PI, I can change it to be 2:<br />\n<br />\ny = sin(x*PI)<br />\n<br />\nI can use the \"sign\" function to turn positive values into 1 and negative values into -1:<br />\n<br />\ny = sign(sin(x*PI))<br />\n<br />\nIf I want it to be truly square (1 tall and 1 wide), I'll need to adjust the height and shift it up:<br />\n<br />\ny = sign(sin(x*PI))/2 + 0.5<br />\n<a href=\"/m/graphtoy/index.html?f1(x,t)=sign(sin(x*PI))/2%20+%20.5&v1=true&f2(x,t)=&v2=false&f3(x,t)=&v3=false&f4(x,t)=&v4=false&f5(x,t)=&v5=false&f6(x,t)=&v6=false&grid=true&coords=0,0,12\">Graphtoy link</a><br />\n<br />\nHere's what that looks like:<br />\n<br />\n<img src=\"/m/mathshapes/square.jpg\"><br />\n<br />\nHow did I come up with these formulas and techniques? I remember many of these from school and others I (re)discovered by playing around. You can expand your own catalog by trying out new formulas to see what they look like and taking <a href=\"/p/notes-txt.html\">notes</a>!<br />\n<br />\nHere's a list of interesting things to explore:<br />\nlog(x)<br />\nexp(x)<br />\nabs(x)<br />\npow(x, n)<br />\n<a href=\"/m/graphtoy/index.html?f1(x,t)=sqrt(8%5E2-x%5E2)&v1=true&f2(x,t)=-f1(x,t)&v2=true&f3(x,t)=7/2-sqrt(3%5E2-(abs(x)-3.5)%5E2)&v3=true&f4(x,t)=7/2+sqrt(3%5E2-(abs(x)-3.5)%5E2)/2&v4=true&f5(x,t)=3+sqrt(1-(abs(x+sin(4*t)/2)-3)%5E2)*2/3&v5=true&f6(x,t)=-3-sqrt(5%5E2-x%5E2)*(1/4+pow(0.5+0.5*sin(2*PI*t),6)/10)&v6=true&grid=true&coords=0,0,12\">This animation that is built into Graphtoy</a><br />\n<a href=\"/m/graphtoy/index.html?f1(x,t)=sqrt(t-x%5E2)&v1=true&f2(x,t)=-f1(x,t)&v2=true&f3(x,t)=f1(x,t/2)&v3=true&f4(x,t)=-f3(x,t)&v4=true&f5(x,t)=f1(x,%20t/4)&v5=true&f6(x,t)=-f5(x,t)&v6=true&grid=true&coords=0,0,12\">Growing concentric circles</a><br />\n<a href=\"/p/bouncing-ball.html\">Bouncing ball animation</a><br />\n<a href=\"https://iquilezles.org/www/articles/functions/functions.htm\">Inigo Quilez's Useful Little Functions</a> (<a href=\"/m/iq-ulf/functions.htm\">my backup</a>)<br />\n\n</div>\n"
    },
    {
         "title" : "Draw Shapes Using Math",
         "date_published" : "2021-03-21T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/draw-shapes.html",
         "url" : "https://memalign.github.io/p/draw-shapes.html",
         "image" : "https://memalign.github.io/m/graphtoy.jpg",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/draw-shapes.html'>Draw Shapes Using Math</a>\n</h2>\n</div>\n<img src=\"/m/graphtoy.jpg\">\n<div id='postdate'>Posted on 3/21/2021<br />\nTags: <a href='/tags.html'>Math</a></div>\nComputer graphics is a wonderful real-world use case for a lot of the math we learn in school. For example, take a look at <a href=\"https://www.iquilezles.org\">Inigo Quilez</a>'s video <a href=\"https://www.iquilezles.org/live/index.htm\">tutorials</a>. <a href=\"https://www.youtube.com/watch?v=8--5LwHRhjk\">This one</a> is particularly cool.<br />\n<br />\nI don't have skills like Inigo but I still have fun making 2D shapes using math.<br />\n<br />\nHere are a few fun tools for drawing 2D shapes using math:<br />\n<br />\n- <a href=\"/m/formulagraph/index.html\">FormulaGraph</a><br />\n&nbsp;&nbsp;- ** Added to this list in August 2021 **<br />\n&nbsp;&nbsp;- After originally publishing this list, I built my own formula grapher by combining Relplot and Graphtoy (both mentioned below)<br />\n&nbsp;&nbsp;- Features: interactive graphs, convenient UI, animate with time, available in any web browser, graph formulas (not just functions), graph polar formulas, graph inequalities<br />\n&nbsp;&nbsp;- See the full details <a href=\"/p/formulagraph.html\">here</a><br />\n<br />\n- TI calculators<br />\n&nbsp;&nbsp;- You might have had one of these in high school<br />\n&nbsp;&nbsp;- I had a TI-83 Plus which turned out to be a fun device. Here are some of its neat features:<br />\n&nbsp;&nbsp;&nbsp;&nbsp;- BASIC programming<br />\n&nbsp;&nbsp;&nbsp;&nbsp;- Play games in MirageOS (back in my day the most popular game was <a href=\"https://www.ticalc.org/archives/files/fileinfo/148/14876.html\">Phoenix</a> and it looks like people kept <a href=\"https://www.ticalc.org/pub/83plus/asm/games/mirageos/\">innovating</a> since then! They even made a version of <a href=\"https://www.ticalc.org/archives/files/fileinfo/429/42952.html\">Geometry Wars</a>!)<br />\n&nbsp;&nbsp;&nbsp;&nbsp;- Share programs and games via a cable (they spread through the whole high school this way)<br />\n&nbsp;&nbsp;&nbsp;&nbsp;- Graph interesting equations and shapes<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- There's a graphing mode which traces a function's shape with an animating circle. An upperclassman graphed some functions together which made it look like this circle was a <a href=\"/p/bouncing-ball.html\">ball bouncing down stairs</a>. This stuck with me and is part of the inspiration for this post!<br />\n&nbsp;&nbsp;- Looking back, I'm glad we got to play with these! Thank you, TI-83 Plus, for my earliest programming and engineering experiences!<br />\n<br />\n- Graphing calculator websites<br />\n&nbsp;&nbsp;- <a href=\"https://www.wolframalpha.com/input/?i=y%3Dx%2C+y%3Dx%5E2\">WolframAlpha</a><br />\n&nbsp;&nbsp;&nbsp;&nbsp;- Very powerful. For example: <a href=\"https://www.wolframalpha.com/input/?i=x%5Ey+%3D+y%5Ex\">graphing x^y = y^x</a>, including symbolically refactoring the equation to solve for y.<br />\n&nbsp;&nbsp;- <a href=\"https://www.meta-calculator.com/?panel-101-equations&data-bounds-xMin=-507.6239316239339&data-bounds-xMax=1540.3760683760684&data-bounds-yMin=-1183.3191489361732&data-bounds-yMax=1632.6808510638268&data-equations-0=%22y%3Dx%22&data-equations-1=%22y%3Dx%5E2%22&data-rand=undefined&data-hideGrid=false\">Meta-Calculator</a><br />\n&nbsp;&nbsp;&nbsp;&nbsp;- OK in a pinch<br />\n&nbsp;&nbsp;- <a href=\"http://fooplot.com\">FooPlot</a><br />\n&nbsp;&nbsp;&nbsp;&nbsp;- <a href=\"https://github.com/dheera/fooplot\">Source code</a><br />\n&nbsp;&nbsp;&nbsp;&nbsp;- Fairly full-featured!<br />\n<br />\n- Graphing calculator apps<br />\n&nbsp;&nbsp;- <a href=\"https://apps.apple.com/us/app/geogebra-graphing-calculator/id1146717204\">GeoGebra Graphing Calculator</a><br />\n&nbsp;&nbsp;&nbsp;&nbsp;- This app is really good! Much like WolframAlpha and Relplot, this app can graph arbitrary equations and inequations like x^y = y^x, 1 = x^2 + y^2, y > x, etc.<br />\n&nbsp;&nbsp;- <a href=\"https://apps.apple.com/us/app/desmos-graphing-calculator/id653517540\">Desmos Graphing Calculator</a><br />\n&nbsp;&nbsp;&nbsp;&nbsp;- This app might be even better. It also supports polar equations (e.g. r = cos(4*theta)).<br />\n&nbsp;&nbsp;&nbsp;&nbsp;- Also available as a <a href=\"https://www.desmos.com/calculator\">website</a><br />\n&nbsp;&nbsp;- <a href=\"https://apps.apple.com/us/app/numworks-graphing-calculator/id1456585807\">NumWorks Graphing Calculator</a> (simulates a physical calculator; hard to use)<br />\n<br />\n- <a href=\"https://www.cs.cornell.edu/w8/~andru/relplot/\">Relplot</a><br />\n&nbsp;&nbsp;- Powerful graphing capabilities: arbitrary equations and inequations<br />\n&nbsp;&nbsp;- <a href=\"https://github.com/andrewcmyers/relplot\">Source code</a> (<a href=\"/m/relplot.tar.gz\">my backup</a>)<br />\n&nbsp;&nbsp;- Relplot is written by one of my favorite CS professors, <a href=\"https://www.cs.cornell.edu/andru/\">Andrew Myers</a>!<br />\n&nbsp;&nbsp;- In fact, it's a more sophisticated version of a programming assignment we completed in his Functional Programming course<br />\n&nbsp;&nbsp;- Interesting implementation details:<br />\n&nbsp;&nbsp;&nbsp;&nbsp;- Lexes and parses inputted formulas so they can be evaluated<br />\n&nbsp;&nbsp;&nbsp;&nbsp;- <a href=\"https://github.com/andrewcmyers/relplot/blob/master/eqn.grm\">Slightly refactors</a> the formulas to be of the form \"0 = formula\" or \"0 > formula\":<br />\n<div id='code'>Eqn   : Expr EQUALS Expr    (Plus(Expr1, neg(Expr2)))<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| Expr LT Expr        (Ltz(Plus(Expr1, neg(Expr2))))<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| Expr LE Expr        (Ltz(Plus(Expr1, neg(Expr2))))<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| Expr GE Expr        (Ltz(Plus(Expr2, neg(Expr1))))<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| Expr GT Expr        (Ltz(Plus(Expr2, neg(Expr1))))</div>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- For example, converts \"1 = x^2 + y^2\" into \"0 = x^2 + y^2 + -(1)\"<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- In this form, all solutions to the formula are \"zeros\"<br />\n&nbsp;&nbsp;&nbsp;&nbsp;- Uses <a href=\"https://en.wikipedia.org/wiki/Interval_arithmetic\">interval arithmetic</a> (implemented <a href=\"https://github.com/andrewcmyers/relplot/blob/master/interval.sml\">here</a>) to identify subsections of the graph that contain x, y values for which the formula evaluates to zero<br />\n&nbsp;&nbsp;&nbsp;&nbsp;- Like a binary search, recursively searches smaller and smaller subsections of the graph for zeros until the interval size is too small to be visible. At this threshold, it can just draw a tiny line between the corners of the interval.<br />\n<br />\n- <a href=\"https://graphtoy.com/\">Graphtoy</a> (<a href=\"/m/graphtoy/index.html\">my backup</a>)<br />\n&nbsp;&nbsp;- This is another cool piece of work by <a href=\"https://www.iquilezles.org\">Inigo Quilez</a><br />\n&nbsp;&nbsp;- Something special: Graphtoy has a variable for elapsed time (t) which can be used to create animations<br />\n&nbsp;&nbsp;- <a href=\"/m/graphtoy/graphtoy.js\">Source code</a><br />\n&nbsp;&nbsp;- Interesting implementation details:<br />\n&nbsp;&nbsp;&nbsp;&nbsp;- Instead of implementing its own parser, Graphtoy turns the formulas into JavaScript snippets<br />\n&nbsp;&nbsp;&nbsp;&nbsp;- See the \"iCompile\" function which tweaks the inputted formula strings to be valid JavaScript and constructs Formula objects which can later be invoked<br />\n\n</div>\n"
    },
    {
         "title" : "Similar Songs",
         "date_published" : "2021-03-14T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/similar-songs.html",
         "url" : "https://memalign.github.io/p/similar-songs.html",
         "image" : "https://memalign.github.io/m/whosampled.png",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/similar-songs.html'>Similar Songs</a>\n</h2>\n</div>\n<img src=\"/m/whosampled.png\">\n<div id='postdate'>Posted on 3/14/2021<br />\nTags: <a href='/tags.html'>Music</a></div>\nI like listening to music. I like it even more when I discover connections between songs.<br />\n<br />\nIt's cool to find out that a song is a cover of another song or that it contains samples of other songs.<br />\n<br />\n<a href=\"https://whosampled.com\">WhoSampled.com</a> is a useful resource to find these connections. Rap songs in particular often contain a bunch of samples! Try searching for your favorites.<br />\n<br />\nUpdate 12/26/21: See also my <a href=\"/p/soundsjustlike.html\">follow-up post</a> about another resource for finding similar songs. See my complete up-to-date list of similar songs <a href=\"/m/similarsongs.html\">here</a>.<br />\n<br />\n<br />\nHere are some of my favorite connections:<br />\n<br />\n- <a href=\"https://www.youtube.com/watch?v=LDj8kkVwisY\">My Name Is</a> by Eminem<br />\n&nbsp;&nbsp;- Samples <a href=\"https://www.youtube.com/watch?v=xKISdd2mKzU\">I Got The...</a> by Labi Siffre<br />\n<br />\n- <a href=\"https://www.youtube.com/watch?v=9YpvNgCSaCU\">Old Town Road</a> by Lil Nas X<br />\n&nbsp;&nbsp;- Samples <a href=\"https://www.youtube.com/watch?v=XF_ceFugJjQ\">Ghosts IV - 34</a> by NIN<br />\n<br />\n- <a href=\"https://www.youtube.com/watch?v=LOZuxwVk7TU\">Toxic</a> by Britney Spears<br />\n&nbsp;&nbsp;- Samples <a href=\"https://www.youtube.com/watch?v=oGKDBhdxn6c\">Tere Mere Beech Mein</a> by Lata Mangeshkar & S. P. Balasubrahmanyam<br />\n<br />\n- <a href=\"https://www.youtube.com/watch?v=jPW5A_JyXCY\">Sugar</a> by Robin Schulz feat. Francesco Yates<br />\n&nbsp;&nbsp;- Samples <a href=\"https://www.youtube.com/watch?v=6rgStv12dwA\">Suga Suga</a> by Baby Bash feat. Frankie J<br />\n<br />\n- Seth Everman combining <a href=\"https://www.youtube.com/watch?v=Xrbqsk-21wQ\">Moonlight Sonata and Still D.R.E.</a><br />\n<br />\n<br />\nSeparate from direct samples, I started noting down songs that remind me of each other. Maybe the songs share a similar palette, a similar bassline, or similar instruments.<br />\n<br />\n- Shared characteristic: eerie robotic beeps and boops<br />\n&nbsp;&nbsp;- <a href=\"https://www.youtube.com/watch?v=U_qi6Zlo70o\">Pure Imagination</a> by Fiona Apple<br />\n&nbsp;&nbsp;&nbsp;&nbsp;- See also Chipotle's <a href=\"https://vimeo.com/98800121\">Scarecrow</a> video that features the same song<br />\n&nbsp;&nbsp;&nbsp;&nbsp;- Note that this song is a cover of Gene Wilder's <a href=\"https://www.youtube.com/watch?v=RZ-uV72pQKI\">original rendition</a> in Willy Wonka & the Chocolate Factory<br />\n&nbsp;&nbsp;- <a href=\"https://www.youtube.com/watch?v=0MJobnhWrk4\">Terry Time</a> from Pixar's Soul by Trent Reznor and Atticus Ross<br />\n&nbsp;&nbsp;- <a href=\"https://www.youtube.com/watch?v=iT2kStWiUVw\">Dr. Ford</a> from Westworld Season 1 Soundtrack by Ramin Djawadi<br />\n<br />\n- Shared characteristic: late 90s alt rock<br />\n&nbsp;&nbsp;- <a href=\"https://www.youtube.com/watch?v=PiBX-ESFDF0\">Sunday Morning</a> by No Doubt<br />\n&nbsp;&nbsp;- <a href=\"https://www.youtube.com/watch?v=dTFg2N97Q98\">Having An Average Weekend</a> (aka the theme song to Kids in the Hall) by Shadowy Men on a Shadowy Planet<br />\n<br />\n- Similar chord progression<br />\n&nbsp;&nbsp;- <a href=\"https://www.youtube.com/watch?v=wQA59IkCF5I\">Dear Prudence</a> by The Beatles<br />\n&nbsp;&nbsp;- <a href=\"https://www.youtube.com/watch?v=eAfyFTzZDMM\">Beautiful</a> by Christina Aguilera<br />\n<br />\n- Similar cadence, lyrics, and Paul McCartney sound<br />\n&nbsp;&nbsp;- <a href=\"https://www.youtube.com/watch?v=wQA59IkCF5I\">Dear Prudence</a> by The Beatles<br />\n&nbsp;&nbsp;- <a href=\"https://www.youtube.com/watch?v=94Ye-3C1FC8\">Wonderful Christmastime</a> by Paul McCartney<br />\n<br />\n- Similar vocalization of \"oooOOoohhh\"<br />\n&nbsp;&nbsp;- <a href=\"https://www.youtube.com/watch?v=Hr4wz4-27PY\">Oh</a> by Ciara<br />\n&nbsp;&nbsp;- <a href=\"https://www.youtube.com/watch?v=HPTDgfhhJ3s\">Do It to It</a> by Cherish, later <a href=\"https://www.youtube.com/watch?v=6wwuEXlIniU\">remade</a> by Acraze ft. Cherish. And there's a <a href=\"https://www.youtube.com/watch?v=DxzdRri8o6o\">really cool mash-up</a> with an eerie song from Squid Game by Zedd.\n</div>\n"
    },
    {
         "title" : "Building a Reddit app",
         "date_published" : "2021-02-07T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/reddit.html",
         "url" : "https://memalign.github.io/p/reddit.html",
         "image" : "https://memalign.github.io/m/reddit.png",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/reddit.html'>Building a Reddit app</a>\n</h2>\n</div>\n<img src=\"/m/reddit.png\">\n<div id='postdate'>Posted on 2/7/2021<br />\nTags: <a href='/tags.html'>Programming</a></div>\nVisiting <a href=\"https://en.wikipedia.org/wiki/Reddit\">Reddit</a> can be a nice way to relax. Reddit can be many things: entertaining, mindless, funny, eye-opening, and more.<br />\n<br />\nAfter years of using <a href=\"https://www.reddit.com\">reddit.com</a> and various apps, I wondered whether I could improve my own Reddit browsing experience.<br />\n<br />\nIt turned out I could! I was able to throw together a Reddit reader app by adopting the official Reddit API and reusing some components from my <a href=\"/p/feedly.html\">Feedly RSS reader</a>.<br />\n<br />\nHere are some unique user experiences I built in:<br />\n<br />\n- Automatically hide posts I've already seen<br />\n&nbsp;&nbsp;- I treat Reddit more like a news feed. Any post I scroll past is marked as \"read\" so I won't have to see it again. Even when I refresh later, read posts remain hidden. This differs from most Reddit reader apps, where if you browse and refresh over the course of an hour, you'll end up seeing a long list of posts you've already encountered.<br />\n<br />\n- Combine Best and Top lists<br />\n&nbsp;&nbsp;- Reddit's website and most apps let you pick whether you want to see the \"best\" posts or the \"top\" posts. You can even choose whether to see the \"top\" posts from the past hour, day, week, month, year, or all time. You can manually pick which list you want to browse.<br />\n&nbsp;&nbsp;- Instead of viewing one batch at a time, I combine several of these lists automatically<br />\n&nbsp;&nbsp;- This helps me avoid running out of content on the days I spend a lot of time on Reddit. It also helps me see the best things I missed on days when I didn't visit Reddit.<br />\n&nbsp;&nbsp;- Here's the heuristic I use as I load subsequent pages:<br />\n&nbsp;&nbsp;&nbsp;&nbsp;- When loading from the start, I load the 20 \"best\" posts and the 20 \"top\" posts for the day<br />\n&nbsp;&nbsp;&nbsp;&nbsp;- When I finish that first page, I load the next page of those requests<br />\n&nbsp;&nbsp;&nbsp;&nbsp;- When I finish reading the second page, I load the next page of those requests plus the 20 \"top\" posts for the week. This is where I start to mix in older posts that I might've missed.<br />\n&nbsp;&nbsp;&nbsp;&nbsp;- When I finish the third page, I load the next page of those requests plus the 20 \"top\" posts for the month<br />\n&nbsp;&nbsp;&nbsp;&nbsp;- When I finish the fourth page, I load the next page of those requests plus the 20 \"top\" posts for the year and all time<br />\n&nbsp;&nbsp;&nbsp;&nbsp;- For all subsequent pages, I load the next page of all those requests<br />\n&nbsp;&nbsp;&nbsp;&nbsp;- After 20 minutes of browsing, the next refresh automatically starts over at the first page<br />\n<br />\n- No infinite scrolling<br />\n&nbsp;&nbsp;- With infinite scrolling, it's too hard to find a stopping point. I prefer to manually \"pull to refresh\" to load the next page. I can set boundaries for myself such as \"I'll just read one more page\".<br />\n<br />\n<br />\n<br />\nHere's some quick info to get started adopting the Reddit API yourself:<br />\n<br />\n- Take a look at the official <a href=\"https://www.reddit.com/dev/api\">Reddit API documentation</a><br />\n<br />\n- The requests return JSON payloads which can be parsed easily in most programming languages<br />\n<br />\n- To get familiar with the specific payload formats, I like to make a request, copy its response, and paste it into a <a href=\"https://jsonformatter.org\">JSON reformatter</a> to make it easier to read<br />\n<br />\n- Here's an example simple request you can perform on the command line:<br />\n<div id='code'># Response will be outputted<br />\ncurl https://api.reddit.com/r/aww+funny+jokes/top?limit=20<br />\n<br />\n# Response will be copied to the clipboard (macOS only)<br />\ncurl https://api.reddit.com/r/aww+funny+jokes/top?limit=20 | pbcopy</div>\n- Here's more detail about the \"top\" request:<br />\n<div id='code'>https://api.reddit.com/r/SUBREDDITS/top?limit=LIMIT&amp;t=TIMEFRAME&amp;after=AFTER&amp;count=COUNT<br />\n<br />\nSUBREDDITS = subreddit names separated by &quot;+&quot;<br />\nLIMIT = integer number of posts to receive<br />\nTIMEFRAME = &quot;hour&quot;, &quot;day&quot;, &quot;week&quot;, &quot;month&quot;, &quot;year&quot;, or &quot;all&quot;<br />\nAFTER = include this argument when requesting the next page. Use the &quot;after&quot; value from the response for the previous page.<br />\nCOUNT = number of posts seen on all previous pages (when using a limit of 20: count will be omitted on page 1, count=20 on page 2, count=40 on page 3, etc)<br />\n<br />\nExample:<br />\n<br />\nhttps://api.reddit.com/r/aww+funny+jokes/top?limit=20&amp;t=hour<br />\n(when requesting the first page, omit &quot;after&quot; and &quot;count&quot;)<br />\n<br />\nhttps://api.reddit.com/r/aww+funny+jokes/top?limit=20&amp;t=hour&amp;after=t3_ldwt5j&amp;count=20<br />\n(when requesting the second page, include &quot;after&quot; and &quot;count&quot;)</div>\n- Here's more detail about the \"best\" request:<br />\n<div id='code'>https://api.reddit.com/r/SUBREDDITS/best?limit=LIMIT&amp;after=AFTER&amp;count=COUNT<br />\n<br />\nSUBREDDITS = subreddit names separated by &quot;+&quot;<br />\nLIMIT = integer number of posts to receive<br />\nAFTER = include this argument when requesting the next page. Use the &quot;after&quot; value from the response for the previous page.<br />\nCOUNT = number of posts seen on all previous pages (when using a limit of 20: count will be omitted on page 1, count=20 on page 2, count=40 on page 3, etc)<br />\n<br />\nExample:<br />\n<br />\nhttps://api.reddit.com/r/aww+funny+jokes/best?limit=20<br />\n(when requesting the first page, omit &quot;after&quot; and &quot;count&quot;)<br />\n<br />\nhttps://api.reddit.com/r/aww+funny+jokes/best?limit=20&amp;after=t3_ldwt5j&amp;count=20<br />\n(when requesting the second page, include &quot;after&quot; and &quot;count&quot;)</div>\n\n</div>\n"
    },
    {
         "title" : "Counterfeit Monkey",
         "date_published" : "2021-01-09T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/counterfeit-monkey.html",
         "url" : "https://memalign.github.io/p/counterfeit-monkey.html",
         "image" : "https://memalign.github.io/m/cm-map.jpg",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/counterfeit-monkey.html'>Counterfeit Monkey</a>\n</h2>\n</div>\n<img src=\"/m/cm-map.jpg\">\n<div id='postdate'>Posted on 1/9/2021<br />\nTags: <a href='/tags.html'>Games</a>, <a href='/tags.html'>Programming</a>, <a href='/tags.html'>Interactive Fiction</a></div>\n<a href=\"https://ifdb.tads.org/viewgame?id=aearuuxv83plclpl\">Counterfeit Monkey</a> is my favorite interactive fiction game. I love its rich world, its delightful mechanics, and its clever puzzles.<br />\n<br />\nYou can play it <a href=\"http://iplayif.com/?story=https%3A%2F%2Fgithub.com%2Fi7%2Fcounterfeit-monkey%2Freleases%2Fdownload%2Fr9%2FCounterfeitMonkey-9.gblorb\">here</a> (<a href=\"/m/counterfeitmonkey/quixe/index.html\">my backup</a>).<br />\n<br />\nBut before you dive in there, I'm hoping that you'll give this a try. I've written a small demo of the first section of the game as mobile-friendly <a href=\"/p/listed-action-if.html\">Listed Action IF</a>:<br />\n<br />\n<a href=\"/m/counterfeitmonkey/index.html\">Counterfeit Monkey demo</a><br />\n<br />\n<br />\nTo learn more about the original game and my demo, please read on!<br />\n<br />\n<br />\nCounterfeit Monkey was written by <a href=\"https://en.wikipedia.org/wiki/Emily_Short\">Emily Short</a>. She's a brilliant author and has made huge contributions to the interactive fiction community. If you're interested in staying up-to-date on IF, I recommend checking out her <a href=\"https://emshort.blog\">website</a> and following her blog.<br />\n<br />\nCounterfeit Monkey is a piece of traditional parser-based IF. Parser-based games create rich and immersive worlds through text. Unfortunately, the user needs to type commands to play which makes them unergonomic for touch-based devices like smartphones and tablets.<br />\n<br />\nI've <a href=\"/p/pacman-dungeon.html\">written</a> <a href=\"/p/dungeon-memalign.html\">recently</a> about bringing text-based games to touch-based devices and those posts even include some small games (playable in your web browser!).<br />\n<br />\nI've found that I'm not alone in exploring more touch-friendly IF games that retain the rich world model of traditional parser-based IF. I think a sub-genre of IF may be forming, one I called <a href=\"/p/listed-action-if.html\">Listed Action IF</a> in a recent post.<br />\n<br />\nI was delighted when I saw that Emily licensed the game's <a href=\"https://github.com/i7/counterfeit-monkey\">source code</a> using the <a href=\"https://creativecommons.org/licenses/by-sa/4.0/\">Creative Commons Attribution-ShareAlike 4.0 license</a>, opening up opportunities to extend and transform it.<br />\n<br />\nThe games I've built so far are small and designed from the beginning for the limitations of short lists of actions. Adapting the first section of Counterfeit Monkey to the listed action model is an experiment to see how well a complex and rich game works.<br />\n<br />\nI think it's still really fun!<br />\n<br />\n<br />\nHere are some things I've learned and observed during this exploration:<br />\n<br />\n- This demo is built on the same little game engine I wrote and described in the second half of this post about <a href=\"/p/dungeon-memalign.html\">Dungeon Memalign</a><br />\n<br />\n- When I shared Dungeon Memalign on <a href=\"https://news.ycombinator.com/item?id=25262631\">HackerNews</a>, I got helpful feedback that I've now fixed:<br />\n&nbsp;&nbsp;- The emoji map did not render well on every platform. Not every platform supports every emoji and not every platform has uniform-width emoji. To check platform support of an emoji, I search for it on <a href=\"https://emojipedia.org\">emojipedia.org</a>. To handle non-uniform-width emoji, I put them in a transparent table.<br />\n&nbsp;&nbsp;- The Go actions would be in different positions depending on which directions were valid moves. That made the interface fiddly. To handle this, I now list every direction even when invalid.<br />\n<br />\n- I also noticed that search engines did not get useful text to index because they saw only the beginning of the game. To address this, I added a crawler mode that detects crawlers based on their user agent and gives them the text of a full play-through.<br />\n<br />\n- As Emily herself noted in an interesting <a href=\"https://emshort.blog/2010/06/07/so-do-we-need-this-parser-thing-anyway/\">blog post from 2010</a>, it's easy to list too many actions in this style of game. I've done a few things to try to optimize and shorten the list:<br />\n&nbsp;&nbsp;- Some actions are only relevant once so I remove them from the list, especially \"look\" actions<br />\n&nbsp;&nbsp;- Some actions can hide behind another, such as actions specific to some items being inside Inventory (used in Dungeon Memalign for healing potions)<br />\n&nbsp;&nbsp;- You'll see that I could still have done better in some parts of the demo where the lists of actions get quite long.<br />\n<br />\n- Some puzzles become easier or obvious when a new action appears. I think that's a pro and a con depending on the situation. Fortunately, Counterfeit Monkey's word-manipulation puzzles don't lose much of their challenge.<br />\n&nbsp;&nbsp;- Pro: parser-based games can be needlessly frustrating when trying to guess the right verb to use<br />\n&nbsp;&nbsp;- Con: command exploration is sometimes part of the puzzle, immersiveness, and fun of a parser-based game<br />\n<br />\n- I have new appreciation for how challenging it must have been to create the original game. Just porting a small portion of Emily's existing content was hard work. To have created its novel ideas and puzzles from scratch while also doing all of the implementation is just amazing. I'm reminded of Hunter S. Thompson typing out pages of The Great Gatsby to know what it felt like to write a classic.<br />\n<br />\n<br />\nYou can find the demo's source code <a href=\"https://github.com/memalign/memalign.github.io/tree/master/m/counterfeitmonkey\">here</a>. Since GameSegments.js, NounRepository.js, Memories.js, and Map.js are based on the original game's content and source code, those files are licensed under the <a href=\"https://creativecommons.org/licenses/by-sa/4.0/\">Creative Commons Attribution-ShareAlike 4.0 license</a> just like their source material.<br />\n<br />\n\n</div>\n"
    },
    {
         "title" : "Listed Action Interactive Fiction",
         "date_published" : "2021-01-09T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/listed-action-if.html",
         "url" : "https://memalign.github.io/p/listed-action-if.html",
         "image" : "https://memalign.github.io/m/listed-actions.jpg",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/listed-action-if.html'>Listed Action Interactive Fiction</a>\n</h2>\n</div>\n<img src=\"/m/listed-actions.jpg\">\n<div id='postdate'>Posted on 1/9/2021<br />\nTags: <a href='/tags.html'>Interactive Fiction</a></div>\nAs I so love to do, I've fallen down the <a href=\"/p/rabbit-hole.html\">rabbit hole</a> on a new topic over winter break 2020: the different kinds of interactive fiction.<br />\n<br />\nAfter building <a href=\"/p/dungeon-memalign.html\">my first text adventure game</a> (<a href=\"/m/dungeon/index.html\">play here</a>) with the explicit goal of being mobile-friendly, I did some research and prototyping to understand:<br />\n<br />\n- What have people already figured out about touchscreen-friendly interactive fiction?<br />\n<br />\n- How well does the \"listed action\" approach I took in Dungeon Memalign work for a traditional IF game?<br />\n<br />\n<br />\nExcitingly, there's been some deep discussion and successful exploration in the community!<br />\n<br />\n<br />\nFor context, here's a quick recap of the main types of interactive fiction you'll find today on <a href=\"https://ifdb.tads.org\">IFDB</a>:<br />\n<br />\n- Parser-based IF<br />\n&nbsp;&nbsp;\"Parser-based IF, also known as the 'text adventure' genre, represents one of the oldest and best-known forms of interactive fiction. Some early examples are digital games from the 70s and 80s like Zork and Enchanter. In a parser game, players type natural-language commands into a simulated world, and the game interprets them as actions for the story’s main character to carry out. Parser games often involve puzzles that the player must solve to move forward in the story.\"<br />\n<br />\n- Choice-based IF<br />\n&nbsp;&nbsp;\"In choice-based interactive fiction, players choose among a number of options to advance the story. These options are presented either as an explicit multiple-choice menu, or as hyperlinks within the story text. Compared to parser IF, choice-based games tend to focus more on navigating branching narratives and multiple endings than on puzzles to solve or secrets to find.\"<br />\n&nbsp;&nbsp;- These games are similar to \"Choose Your Own Adventure\" books<br />\n<br />\n(These definitions are quoted from <a href=\"https://iftechfoundation.org/frequently-asked-questions/\">IFTF's FAQ</a>)<br />\n<br />\n<br />\nGames that have a rich world model without requiring typed commands don't fit neatly into these two categories. Despite the lack of neat label, there are a bunch of cool games that can be played entirely (or almost entirely) by clicking/tapping instead of typing. Note: though I have tried all of these games, I have not played them to completion.<br />\n<br />\n- <a href=\"https://ifdb.tads.org/viewgame?id=41cr9x95gu6tlfeu\">The Impossible Bottle</a> by <a href=\"https://www.linusakesson.net\">Linus Åkesson</a> (<a href=\"https://linusakesson.net/games/the-impossible-bottle/rel1/play.html\">play here</a>)<br />\n&nbsp;&nbsp;- This game tied for first place in <a href=\"https://ifdb.tads.org/viewcomp?id=zkwmnr8k90q7wb2\">IFComp 2020</a>!<br />\n&nbsp;&nbsp;- Linus writes about the game in depth <a href=\"https://www.linusakesson.net/games/the-impossible-bottle/postscriptum/index.php\">here</a>, including its hybrid interface:<br />\n&nbsp;&nbsp;\"The Impossible Bottle is a hybrid parser/choice game. There's a prompt where you can type commands, but there are also hyperlinks for inserting text at the prompt, and it's possible to complete nearly all of the game using those links. Typing is generally faster, except on touch-screen devices where tapping on links is faster.\"<br />\n&nbsp;&nbsp;- Note: I almost missed the unique interface of this game because the big \"Play On-line\" button on IFDB takes you to the traditional parser-based way to play. The \"play here\" link above (which is less-prominently featured on the IFDB page) takes you to this special way to play.<br />\n<br />\n<br />\n- <a href=\"https://ifdb.tads.org/viewgame?id=h9x354wyakeeanik\">Bigger Than You Think</a> by <a href=\"https://zarfhome.com/\">Andrew Plotkin</a> (<a href=\"https://www.eblong.com/zarf/zweb/btyt/\">play here</a>)<br />\n&nbsp;&nbsp;- At first this game may seem purely choice-based but there is rich world state. Andrew has shared the <a href=\"https://www.eblong.com/zarf/zweb/btyt/btyt-src.html\">source code</a> which is an interesting read!<br />\n<br />\n<br />\n- <a href=\"https://ifdb.tads.org/viewgame?id=wbv84rstru6c91lr\">Shadow Operative</a> by Michael Lauenstein (<a href=\"http://ifarchive.org/if-archive/games/competition2020/Games/Shadow%20Operative/index.html\">play here</a>)<br />\n&nbsp;&nbsp;- This game placed 20th in IFComp 2020<br />\n&nbsp;&nbsp;- Shadow Operative uses a tool called <a href=\"https://vorple-if.com/\">Vorple</a> to bridge <a href=\"http://inform7.com/\">Inform</a> code to tightly integrate with JavaScript in the web browser<br />\n<br />\n<br />\n- <a href=\"https://ifdb.tads.org/viewgame?id=7btsk9iqqku2t8g9\">En Garde</a> by Jack Welch (<a href=\"http://ifarchive.org/if-archive/games/competition2018/En%20Garde/Release/play.html\">play here</a>)<br />\n&nbsp;&nbsp;- This game tied for 14th place in <a href=\"https://ifdb.tads.org/viewcomp?id=qwgk1gfg6s3pky3\">IFComp 2018</a><br />\n&nbsp;&nbsp;- You play this game by pushing a few buttons with different colors that correspond to commands<br />\n<br />\n<br />\n- <a href=\"http://hlabrande.fr/welcome/\">Hugo Labrande</a> has a few games like this, one of which he describes as a <a href=\"http://hlabrande.fr/my-games/commissions/\">\"parser game with hyperlinks to help beginners\"</a>:<br />\n&nbsp;&nbsp;- <a href=\"https://ifdb.tads.org/viewgame?id=nmzjzrhbrhxsv3tx\">Le kébab hanté</a> (<a href=\"http://www.fiction-interactive.fr/fi/hlabrand/kebab-hante/jouer.html\">play here</a>)<br />\n&nbsp;&nbsp;- <a href=\"https://ifdb.tads.org/viewgame?id=c2lri3aknb6dghw2\">Secrets de pêcheurs</a> (<a href=\"https://ad1s.itch.io/secrets-de-pcheurs\">play here</a>)<br />\n<br />\n<br />\n- <a href=\"https://swords.sleepless.com/\">Swords</a> is a web-based world editor and game engine for Listed Action IF games<br />\n&nbsp;&nbsp;- Play an existing map <a href=\"https://swords.sleepless.com/play/\">here</a><br />\n&nbsp;&nbsp;- Create your own game <a href=\"https://swords.sleepless.com/editor/\">here</a><br />\n&nbsp;&nbsp;- In addition to web-based play, Swords games can be played via Amazon Alexa or Discord chat. I haven't tried this out though.<br />\n<br />\n<br />\nWith this growing list that includes the tied-for-first place 2020 IFComp entry, I'd like to try finding a name for this category.<br />\n<br />\n<a href=\"https://emshort.blog/\">Emily Short</a> wrote about options for leaving the parser behind a decade ago in an insightful post: <a href=\"https://emshort.blog/2010/06/07/so-do-we-need-this-parser-thing-anyway/\">So, Do We Need This Parser Thing Anyway?</a><br />\n<br />\nHere, she describes \"enumerated-choice games with world modeling\" with meaningful discussion of the pros and cons.<br />\n<br />\nThat's a good starting point for a name! Tweaking this label to set it apart from \"choice-based\" IF and using a word more ordinary than \"enumerated,\" I've started calling this sub-genre \"Listed Action Interactive Fiction.\"<br />\n<br />\nThe key characteristics of the Listed Action IF sub-genre seem to be:<br />\n- The game has a rich world model<br />\n- The user interacts with lists of actions and objects<br />\n- The game can be played without typing<br />\n<br />\nThese properties make these games easier for beginners to pick up and more ergonomic to play on your phone or iPad.<br />\n<br />\n<br />\nTo test out how well this UI works in practice for a rich, more traditional IF game, I took a look at the <a href=\"https://github.com/i7/counterfeit-monkey\">source code</a> of my favorite IF game (which also happens to be written by Emily Short!), <a href=\"https://ifdb.tads.org/viewgame?id=aearuuxv83plclpl\">Counterfeit Monkey</a>, and I built a Listed Action demo of the first few puzzles! Emily's game is super fun and brilliant.<br />\n<br />\n<a href=\"/m/counterfeitmonkey/index.html\">Play the Listed Action Counterfeit Monkey demo here.</a><br />\nRead my dedicated post about this demo <a href=\"/p/counterfeit-monkey.html\">here</a>.<br />\n<br />\n(You can also play the full original parser-based game <a href=\"http://iplayif.com/?story=https%3A%2F%2Fgithub.com%2Fi7%2Fcounterfeit-monkey%2Freleases%2Fdownload%2Fr9%2FCounterfeitMonkey-9.gblorb\">here</a> / <a href=\"/m/counterfeitmonkey/quixe/index.html\">my backup</a>)<br />\n<br />\n<br />\nI hope you enjoy it! If you do, I hope you'll consider taking the Listed Action approach the next time you write a game!<br />\n<br />\n<br />\n<img src=\"/m/horizontalseparator.png\"><br />\n<br />\nNotes:<br />\n<br />\nHere's the chain of tangents I followed to research this topic. This list includes some links to tools that may help you build your own Listed Action IF game.<br />\n<br />\nThis is all just light research I did as a hobby. I'm by no means an expert and there are many people more qualified to write on this subject. I'm just a person diving in for fun. I'm sharing this in the hopes it'll inspire and interest other people too.<br />\n<br />\n<br />\n- I played Counterfeit Monkey years ago and it renewed my interest in IF<br />\n<br />\n- I made my <a href=\"/p/dungeon-memalign.html\">own game</a> and shared it on <a href=\"https://news.ycombinator.com/item?id=25262631\">HackerNews</a><br />\n&nbsp;&nbsp;- One comment asked whether there are other \"click and log\" games like this. That made me wonder too.<br />\n<br />\n- I learned more about <a href=\"/p/andrew-plotkin.html\">Andrew Plotkin</a> and explored <a href=\"https://zarfhome.com/\">his website</a>. Some cool things he made:<br />\n&nbsp;&nbsp;- <a href=\"https://eblong.com/zarf/glulx/quixe/\">Quixe</a> (used above to link to the original parser-based game, playable in a web browser)<br />\n&nbsp;&nbsp;- His game <a href=\"https://www.eblong.com/zarf/zweb/btyt/\">Bigger Than You Think</a><br />\n&nbsp;&nbsp;- His iOS games, such as <a href=\"https://itunes.apple.com/us/app/hadean-lands-interactive-alchemical/id918958300?mt=8&uo=4&at=11l9WL\">Hadean Lands</a>, that have been tuned to provide useful commands on touchscreen devices<br />\n&nbsp;&nbsp;- <a href=\"https://zarfhome.com/if.html\">His framework</a> for IF on iOS<br />\n<br />\n- I worked on the <a href=\"/p/counterfeit-monkey.html\">Counterfeit Monkey demo</a> to further explore Listed Action IF<br />\n&nbsp;&nbsp;- Take a look at the <a href=\"https://github.com/memalign/memalign.github.io/tree/master/m/counterfeitmonkey\">source code</a> and feel free to fork it to make your own game. See also <a href=\"/p/dungeon-memalign.html\">Dungeon Memalign</a> & <a href=\"/p/pacman-dungeon.html\">PacMan Dungeon</a>.<br />\n<br />\n- I looked at <a href=\"https://ifdb.tads.org/viewcomp?id=zkwmnr8k90q7wb2\">IFComp 2020</a> to see what the current state of the art is<br />\n<br />\n- That listed <a href=\"https://ifdb.tads.org/viewgame?id=41cr9x95gu6tlfeu\">The Impossible Bottle</a> - I actually missed that this was Listed Action IF because I clicked the wrong link and initially only played the pure parser-based version<br />\n<br />\n- It also listed <a href=\"https://ifdb.tads.org/viewgame?id=wbv84rstru6c91lr\">Shadow Operative</a><br />\n<br />\n- Shadow Operative led me to <a href=\"https://vorple-if.com/\">Vorple</a><br />\n<br />\n- That led me to <a href=\"https://ifdb.tads.org/search?sortby=new&newSortBy.x=0&newSortBy.y=0&searchfor=vorple\">audit Vorple games on IFDB</a> to see if any others are Listed Action IF<br />\n<br />\n- The audit led me to <a href=\"http://hlabrande.fr/welcome/\">Hugo Labrande's website</a><br />\n<br />\n- Vorple's website led me to <a href=\"https://borogove.app/\">Borogove</a>, an online IDE for making IF games<br />\n<br />\n- Borogove supports a few programming languages for developing IF. I was familiar with most but I saw a new one: <a href=\"https://www.linusakesson.net/dialog/\">Dialog</a><br />\n<br />\n- Dialog led me to <a href=\"https://www.linusakesson.net/index.php\">Linus Åkesson's website</a><br />\n<br />\n- That led me to Linus's games <a href=\"https://www.linusakesson.net/games/pas-de-deux/index.php\">Pas De Deux</a> and <a href=\"https://www.linusakesson.net/games/the-impossible-bottle/index.php\">The Impossible Bottle</a> - wait a sec! This is when I noticed that The Impossible Bottle is not standard parser-based IF.<br />\n<br />\n- Then I did some general web searches for:<br />\n&nbsp;&nbsp;- mobile interactive fiction<br />\n&nbsp;&nbsp;- hypertext hybrid interactive fiction<br />\n&nbsp;&nbsp;- etc<br />\n<br />\n- I saw that <a href=\"https://emshort.blog/\">Emily Short</a>'s blog covered these topics<br />\n&nbsp;&nbsp;- This took me to her <a href=\"https://emshort.blog/2010/06/07/so-do-we-need-this-parser-thing-anyway/\">2010 article</a><br />\n&nbsp;&nbsp;- Also this <a href=\"https://emshort.blog/2014/12/16/hybrid-interfaces-texture-contrition-porpentine-spondre-jay-nabonne/\">other post</a><br />\n<br />\n- About a month after originally publishing this post, I saw a <a href=\"https://www.reddit.com/r/textadventures/comments/i0uq4l/discord_text_adventure/\">reddit post</a> about <a href=\"https://swords.sleepless.com\">Swords</a>.<br />\n\n</div>\n"
    },
    {
         "title" : "Andrew Plotkin's Zarfhome",
         "date_published" : "2020-12-30T00:00:00-08:00",
         "id" : "https://memalign.github.io/p/andrew-plotkin.html",
         "url" : "https://memalign.github.io/p/andrew-plotkin.html",
         "image" : "https://memalign.github.io/m/play-if-card.png",
         "author" : {
            "name" : "memalign"
         },
         "content_html" : "<div id='post'>\n<div id='header'>\n<h2>\n<a href='https://memalign.github.io/p/andrew-plotkin.html'>Andrew Plotkin's Zarfhome</a>\n</h2>\n</div>\n<img src=\"/m/play-if-card.png\">\n<div id='postdate'>Posted on 12/30/2020<br />\nTags: <a href='/tags.html'>Leisure</a>, <a href='/tags.html'>Interactive Fiction</a></div>\nMy interest in interactive fiction and simple-yet-vast personal websites intersected this week when I stumbled upon <a href=\"https://en.wikipedia.org/wiki/Andrew_Plotkin\">Andrew Plotkin</a>'s <a href=\"https://eblong.com/zarf/home.html\">homepage</a> (aka Zarfhome).<br />\n<br />\n(My previous adventures have led me to Drew's <a href=\"/p/clamps.html\">clamps</a>, Lawrence's <a href=\"/p/coding-machines.html\">coding machines</a>, and Eric Meyer's heartbreaking posts about his daughter <a href=\"/p/rebecca-meyer.html\">Rebecca</a>.)<br />\n<br />\nAndrew has done some really cool work over the years. His body of work includes foundational tools for <a href=\"https://eblong.com/zarf/glk/index.html\">building</a>/<a href=\"https://eblong.com/zarf/blorb/index.html\">packaging</a> interactive fiction games and an impressive library of <a href=\"https://eblong.com/zarf/if.html\">interactive fiction games</a>.<br />\n<br />\nZarfhome's design aesthetic of black text, blue links, and a white background may not be enticing to everybody browsing the web these days. When I see a site like this, I'm drawn in. This is where the special gems on the internet still exist.<br />\n<br />\nHere are some notable pages to check out:<br />\n<br />\n- The <a href=\"https://eblong.com/zarf/home.html\">homepage</a><br />\n<br />\n- The <a href=\"https://eblong.com/zarf/sitemap.html\">sitemap</a> where he lists decades of projects<br />\n&nbsp;&nbsp;- He even made an interactive-fiction-style <a href=\"https://eblong.com/zarf/cave/index.html\">caves version</a> of the sitemap. What a clever idea!<br />\n<br />\n- A years-out-of-date <a href=\"https://eblong.com/zarf/changes.html\">changes</a> page. When I see this, I think about how much more durable this is than posts on Facebook or Twitter. There's something special about this kind of website that we don't get in today's social media.<br />\n<br />\n- <a href=\"https://blog.zarfhome.com\">Andrew's blog</a><br />\n&nbsp;&nbsp;- This is what led me to the homepage in the first place<br />\n<br />\n<br />\nAs I browsed, I had a few neat surprises:<br />\n<br />\n- Over a decade ago, I downloaded a Python program called <a href=\"https://github.com/erkyrath/boodler\">Boodler</a> to make soundscapes. It turns out Andrew made Boodler!<br />\n<br />\n- I had stumbled upon \"Crazy Uncle Zarf\"'s <a href=\"http://pr-if.org/doc/play-if-card/play-if-card-300dpi.png\">handy interactive fiction reference card</a> when I was getting started playing IF. It turns out Andrew wrote this too!<br />\n<br />\n- Up until now, I hadn't seen other examples of blending richer interactive fiction with a web/mobile-friendly hyperlink interface like I recently experimented with in <a href=\"/p/dungeon-memalign.html\">Dungeon Memalign</a>. I found that Andrew did some work like this back in 2012! His game, <a href=\"https://archiveofourown.org/collections/yuletide2012/works/598023\">Bigger Than You Think</a>, is played by clicking hyperlinks and picking up items.<br />\n<br />\n<br />\nAndrew's decades of work, shared through his site with the world, are truly inspiring. It's so cool that he's shared complete projects, half-baked prototypes, random ideas, and more. Thank you Andrew!<br />\n\n</div>\n"
    }
  ]
}
